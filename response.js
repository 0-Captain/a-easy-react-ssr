{"success":true,"data":[{"id":"5c1760337ec239239ff579a2","author_id":"54009f5ccd66f2eb37190485","tab":"share","content":"<div class=\"markdown-text\"><p>北京1月12日Node Party活动视频地址：<a href=\"https://edu.talkingdata.com/open-class\">https://edu.talkingdata.com/open-class</a></p>\n<p>Node Party 是社区发起的一个面向 Node.js 和大前端爱好者的非商业，社区驱动的技术分享聚会，希望能够构建一个持续的分享学习平台，一起发展大前端生态。</p>\n<p>北京1月12日Node Party线下活动（周六）下午2点到6点，将近100人</p>\n<ul>\n<li>主题分享（已确认，共5个主题：3个Node.js主题，一个运维，一个前端）\n<ul>\n<li>《重新认识Nodejs后端开发》 eggjs + React + SSR 做同构直出（去哪儿）</li>\n<li>《用mqtt协议实现nodejs长连接服务》Nodejs长连接，主要是性能和协议改造方面的（新浪）</li>\n<li>《浅谈nodejs异步那点事》（360）</li>\n<li>结合Node.js讲一下Docker 实践和原理（网易）</li>\n<li>iview作者：如何做好一个开源项目（TalkingData）</li>\n</ul>\n</li>\n<li>视情况可以考虑晚上AA聚</li>\n</ul>\n<p>时间：北京1月12日（周六）下午2点到6点\n地点：东直门TalkingData赞助的502教室\n人数：最多100人\n直播地址：<a href=\"https://live.bilibili.com/1353202\">https://live.bilibili.com/1353202</a></p>\n<p>现场还有 <a href=\"/user/justjavac\">@justjavac</a>，@小爵，@快手天翔 @王龑 等大咖。</p>\n<p>图灵出版社赞助了20本书，现场送给大家</p>\n<h2>日程安排</h2>\n<p>每个主题分享+答疑共45分钟，5个主题分享：3个Node.js主题，一个运维，一个前端\n茶歇5分钟（北京乐至道科技有限公司赞助茶歇，已经京东到会场）\n圆桌会议30分钟</p>\n<p>2:00-2:45\n刘露颖：《用mqtt协议实现nodejs长连接服务》Nodejs长连接，主要是性能和协议改造方面的（新浪）</p>\n<p>2:45-3:30\n张晋涛：《结合Node.js讲一下Docker 实践和原理》（网易）</p>\n<p>3:30-4:15\niView作者Aresn：如何做好一个开源项目（TalkingData）</p>\n<p>茶歇5分钟，感谢北京乐至道科技有限公司。DaDEX.io基于EOS公链开发，链上合约自动执行，全部交易上链，率先实现去中心化交易、高并发、低手续费、资金安全、最高交易透明的真去中心化交易所范式，无需注册、认证等繁琐流程，个人钱包内一键交易。致力于完善EOS生态，服务EOS用户，与跨链技术的结合，向传统中心化交易所发起挑战</p>\n<p>4:20-4:50\n圆桌会议：畅想一下前端2019（大神待定）</p>\n<p>4:50-5:35\n兴百放：《重新认识Nodejs后端开发》 eggjs + React + SSR 做同构直出（去哪儿）</p>\n<p>5:35-6:10\n宋光宇：《浅谈nodejs异步那点事》（360）</p>\n<h2>主题</h2>\n<h3>1）《重新认识Node.js后端开发》</h3>\n<p>兴百放，先就职在美团外卖事业部，负责前后端分离，以及 Nodejs 推广工作。本着不管黑猫白猫，只要能解决现实业务问题，提高团队工作效率，就是好猫的原则，致力于让团队成员从重复，耗时，繁琐的一些工作中解放出来。</p>\n<p>随着前端行业的蓬勃发展，越来越多的技术团队，对前端的职责范围，也慢慢的延伸到后端。这里就分享一些在我们进行服务自治（BFF），以及接管传统后端职责一些沉淀和经验。内容主要包括如何做技术框架的选型，使用 egg 一些经验总结，和 eggjs + React + SSR 做同构直出等内容 。</p>\n<p><img src=\"//static.cnodejs.org/FnS8WR95lO1Ff7KevyeHsDHuNCjp\" alt=\"兴百放.png\"></p>\n<h3>2）《Docker 实践和原理》</h3>\n<p>张晋涛，目前任网易有道资深运维开发工程师, 负责 DevOPS 实践落地及 Kubernetes 容器化平台及自动化平台的规划建设等。骨灰级 Linux/Vim 玩家，对 Docker， Kubernetes 及相关生态有大量实践及深入源码的研究。曾负责美图运维自动化平台体系建设。掘金小册《Kubernetes 从上手到实践》作者。</p>\n<p>随着 Kubernetes 等云原生技术的事实标准已经形成，容器化技术作为其重要的组成部分也被使用的越来越广泛。在我们的开发实践中，如何更好的利用容器化技术( Docker )来提升我们的开发，测试效率也是我们所关注的重点。 本次分享集中于如何用 Docker 提升我们的效率以及如何用好它。以 node 和 前端为入手点，希望能对大家有所帮助。</p>\n<p><img src=\"//static.cnodejs.org/FoVKIjHzQJqhwe6IgBWiw2BEWoX-\" alt=\"张晋涛.png\"></p>\n<h3>3）《浅谈Node.js异步那点事》</h3>\n<p>宋光宇 360前端工程师 360视频云/360云盘@奇舞团，</p>\n<p>nodejs给前端赋予了更多的生命力，它的异步模型给他带来无限的潜力。\n今天通过libuv这个nodejs核心库来聊聊nodejs异步的那点事。</p>\n<p><img src=\"//static.cnodejs.org/FmlpCMQIdEjJBXaxDSLS77gpcdqw\" alt=\"宋光宇.png\"></p>\n<h3>4）iView作者：如何做好一个开源项目</h3>\n<p>Aresn，基于 Vue.js 的开源 UI 组件库 — iView 的作者。现担任大数据公司 TalkingData 前端架构师。著有《Vue.js实战》、《Vue.js组件精讲》。\nTopic：</p>\n<ul>\n<li>iView 的故事</li>\n<li>第一批用户</li>\n<li>持续运营</li>\n<li>国际化</li>\n<li>让更多的人参与</li>\n<li>让 Robot 来做“坏人”</li>\n<li>赞助与商业化</li>\n</ul>\n<p><img src=\"//static.cnodejs.org/FlPAOO-2v0z85GbQ5StQPcIo5ESN\" alt=\"梁灏.png\"></p>\n<h3>5）《用mqtt协议实现Node.js长连接服务》</h3>\n<p>刘露颖，曾就职搜狐视频，新浪博客，目前任职新浪移动团队资深前端开发工程师，负责nodejs相关的服务开发与维护、以及部分运维相关工作。致力于v8的研究，对c++与nodejs之间的关系有深厚兴趣，并付诸实践。</p>\n<p>mqtt协议随着各种手机app的普及，在移动互联网中有了广泛的应用，借着项目的实践过程，讲术如何更好的使mqtt与nodejs相结合，为现在越来越普遍的高并发场景提供长连接服务的解决方案。</p>\n<p><img src=\"//static.cnodejs.org/FtVeXBznM2mqBtcxdDQEiC13R_xj\" alt=\"刘露颖.png\"></p>\n<h2>微信群</h2>\n<p>群满100人后无法加群的, 添加我微信 mcdongWang 备注 node party 北京 我回拉你进群</p>\n<p><img src=\"//static.cnodejs.org/FvqZCML0PfbFHt6xknAhJmkWKDPU\" alt=\"31545188678_.pic.jpg\"></p>\n<p>公众号文章地址</p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzAxMTU0NTc4Nw==&amp;mid=2661157727&amp;idx=1&amp;sn=0b7a6aa495fbe3afe4a4d3774faf8706&amp;chksm=80d5d68bb7a25f9d125e17ff08d1f373435db4a8a7fe2d074f4fbe58c517beb93266e08a4295&amp;token=1373872492&amp;lang=zh_CN#rd\">https://mp.weixin.qq.com/s?__biz=MzAxMTU0NTc4Nw==&amp;mid=2661157727&amp;idx=1&amp;sn=0b7a6aa495fbe3afe4a4d3774faf8706&amp;chksm=80d5d68bb7a25f9d125e17ff08d1f373435db4a8a7fe2d074f4fbe58c517beb93266e08a4295&amp;token=1373872492&amp;lang=zh_CN#rd</a></p>\n</div>","title":"【\b活动+视频】北京1月12日Node Party活动","last_reply_at":"2019-01-28T04:35:22.027Z","good":false,"top":true,"reply_count":46,"visit_count":5697,"create_at":"2018-12-17T08:37:07.278Z","author":{"loginname":"i5ting","avatar_url":"https://avatars3.githubusercontent.com/u/3118295?v=4&s=120"}},{"id":"5c2edce13898674067a7b103","author_id":"5372465f3c72496d41009adc","tab":"share","content":"<div class=\"markdown-text\"><p>截止1 月 12日晚 22:00，有效参与人数共 252 人，抽取 5 名中奖者。\n恭喜以下中奖者🎉🎉🎉🎉🎉 gofromzero,MoeXian,yxcs,caoxiaoshuai1,langjy🎉🎉🎉🎉🎉\n请评论区留下联系方式。\n<img src=\"//static.cnodejs.org/Fvx9s9EjQk7IwNrAMO5_y7zJfrej\" alt=\"image.png\"></p>\n<p>---------------- 以下是原文 ----------------</p>\n<p>新书《Node.js开发实战》热卖，大获好评，感谢大家的支持，送几本书回馈给大家。</p>\n<p>赠书办法：</p>\n<ul>\n<li>只须在本贴留言即可。</li>\n<li>从回贴评论者中随机抽取中奖者，共计 5 本，每位中奖者 1 本。</li>\n<li>获赠名单公布在本帖，并在本贴下评论 @ 每位获赠的同学。</li>\n<li>截止时间 2019 年 1 月 12 日 22:00:00 （ UTC+8 ），以评论时间为准。</li>\n<li>由于本站不支持私信，请获奖同学在本帖回复联系方式，邮箱或者任何其它能联系到你的形式。</li>\n<li>开奖后 72 小时未能回复联系方式者视为放弃。</li>\n</ul>\n<p>试读样章：<a href=\"https://pan.baidu.com/s/1x3c35AmJV4rcEj_W3A1WGg\">https://pan.baidu.com/s/1x3c35AmJV4rcEj_W3A1WGg</a>\n京东有售：<a href=\"https://item.jd.com/12460185.html\">https://item.jd.com/12460185.html</a>\n<img src=\"//static.cnodejs.org/Finp2H7di-Equ_yMWsjJY6hxYGkh\" alt=\"WechatIMG148 copy.jpg\"></p>\n</div>","title":"送几本《Node.js开发实战》","last_reply_at":"2019-01-27T02:48:40.761Z","good":false,"top":true,"reply_count":308,"visit_count":5868,"create_at":"2019-01-04T04:11:13.570Z","author":{"loginname":"meikidd","avatar_url":"https://avatars0.githubusercontent.com/u/376338?v=4&s=120"}},{"id":"5bd4772a14e994202cd5bdb7","author_id":"504c28a2e2b845157708cb61","tab":"share","content":"<div class=\"markdown-text\"><p>2018年10月27日晚上，突然收到服务器不能访问的告警通知，拜托了狼叔 <a href=\"/user/i5ting\">@i5ting</a> 帮忙看看，结果登不上也ping不通。\n后来收到短信，发现是被ucloud封了，短信内容如下：</p>\n<blockquote>\n<p>【UCloud】尊敬的UCloud用户，您的IP：123.59.77.142  存在URL ：<a href=\"https://cnodejs.org/topic/57239bce5a26c4a841ecbf01\">https://cnodejs.org/topic/57239bce5a26c4a841ecbf01</a> （详细信息请查看邮箱）包含违禁内容（包括但不限于翻墙等），违反了国家有关法律法规。目前依主管单位要求，对您的IP予以封停，请您尽快处理违规内容。待处理完成后请联系技术支持重新开启业务。[4000188113]</p>\n</blockquote>\n<p>然后联系了ucloud的客服，一下就打通了，对方态度挺好处理问题也快。ucloud说是运营商那边封的，不是他们的检测机制。所以需要联系运营商解决。\n考虑到各位亲爱的网友们的行为我无法控制，那么一直跟越来越严格的审查系统对抗只会让自己疲惫，所以我就站点迁到国外。来到了aws jp。</p>\n<p>我大致测了测，电信和移动的访问速度非常快，100ms以内，联通会慢一点，400ms以内吧。</p>\n<p>建议翻墙访问。</p>\n</div>","title":"服务器迁移至 aws 日本机房","last_reply_at":"2019-01-24T07:46:22.699Z","good":false,"top":true,"reply_count":122,"visit_count":12880,"create_at":"2018-10-27T14:33:14.694Z","author":{"loginname":"alsotang","avatar_url":"https://avatars1.githubusercontent.com/u/1147375?v=4&s=120"}},{"id":"5c4930003b948a2b4ab710a6","author_id":"5c4926b16955112b99438477","tab":"ask","content":"<div class=\"markdown-text\"><p>目前的项目是一个App应用，后端API采用egg.js框架。\n现在有这样一个需求</p>\n<p>业务场景：</p>\n<ul>\n<li>API服务发送消息到阿里云消息服务 (MNS)</li>\n<li>需要一个服务，获取阿里云消息服务(MNS)队列的消息，然后进行相关的业务处理</li>\n<li>需要多个服务处理不同的业务 (比如发送短信，帖子新回复的提醒)</li>\n</ul>\n<p>考虑用egg.js框架的扩展定时任务+阿里云消息服务(MNS)长轮询</p>\n<p>代码示例:\n<a href=\"https://github.com/jerryhu/egg-mns-long-polling-experiment\">https://github.com/jerryhu/egg-mns-long-polling-experiment</a></p>\n<p>task部分的代码如下:</p>\n<pre class=\"prettyprint language-js\"><code>&#x27;use strict&#x27;;\nmodule.exports = {\n  schedule: {\n    type: &#x27;mns&#x27;,\n  },\n  async task(ctx, message) {\n    console.log(&#96;task1: ${message}&#96;);\n\n    const condition = true;\n    while (condition) {\n      try {\n        &#x2F;&#x2F; 获取消息\n        const resp = await ctx.app.alicloudMns.receiveMessage(&#x27;test-post-reminder-queue&#x27;, 25);\n        const data = Buffer.from(resp.body.MessageBody, &#x27;base64&#x27;).toString(&#x27;utf8&#x27;);\n        console.log(&#96;data: ${data}&#96;);\n\n        &#x2F;&#x2F; TODO: 新评论提醒\n\n        &#x2F;&#x2F; 删除消息\n        await ctx.app.alicloudMns.deleteMessage(&#x27;test-post-reminder-queue&#x27;, resp.body.ReceiptHandle);\n      } catch (err) {\n        if (err.name === &#x27;MNSMessageNotExistError&#x27;) {\n          console.log(&#96;没有消息: ${new Date()}&#96;);\n          continue;\n        }\n\n        console.error(&#96;获取消息出错 ${err.stack}&#96;);\n        break;\n      }\n    }\n  },\n};\n</code></pre><p>问题:</p>\n<ol>\n<li>扩展定时任务中长时间执行任务是否可行？</li>\n<li>有没有更优的解决方案（nodejs后端服务应用+阿里云MNS长轮询）？</li>\n</ol>\n</div>","title":"[egg.js] 扩展定时任务与阿里云消息服务MNS长轮询","last_reply_at":"2019-01-28T06:38:38.464Z","good":false,"top":false,"reply_count":4,"visit_count":397,"create_at":"2019-01-24T03:24:48.616Z","author":{"loginname":"jerryhu","avatar_url":"https://avatars2.githubusercontent.com/u/1637137?v=4&s=120"}},{"id":"5c4e9d1fa4647e02328f1a0c","author_id":"5c2e23963898674067a7ae2b","tab":"ask","content":"<div class=\"markdown-text\"><p>需求大体就是发布一个二进制的 http 服务给用户使用，一共大约 4-5 个接口。\n调研了一下，有下面几种选择。\n1 electorn + express\n2 nodejs + express\n3 java + jre\n4 golang\n5 c++</p>\n<p>java 和 nodejs 跨平台很方便，但是都需要用户手动安装依赖。\nelectorn 的话安装包太大了。\n那么 golang 是不是最好的选择了。编译成二进制，什么平台都支持。</p>\n</div>","title":"如果要发布一个 http 服务，有比 golang 更好的选择吗？","last_reply_at":"2019-01-28T06:25:20.504Z","good":false,"top":false,"reply_count":1,"visit_count":49,"create_at":"2019-01-28T06:11:43.255Z","author":{"loginname":"DiamondYuan","avatar_url":"https://avatars1.githubusercontent.com/u/9692408?v=4&s=120"}},{"id":"5c46b5616955112b994379a2","author_id":"5b03c9a7000332b81cf821a5","tab":"ask","content":"<div class=\"markdown-text\"><p>Function.__proto__指向一个匿名函数function(){} ,匿名函数的__proto__指向Object的prototype ,Object的__proto__指向Function 的 prototype.</p>\n</div>","title":"大佬们能理解这句话吗？","last_reply_at":"2019-01-28T04:54:29.012Z","good":false,"top":false,"reply_count":12,"visit_count":973,"create_at":"2019-01-22T06:17:05.811Z","author":{"loginname":"linxiaoziruo","avatar_url":"https://avatars3.githubusercontent.com/u/6881273?v=4&s=120"}},{"id":"5c4e666fa4647e02328f186f","author_id":"5adb4257464b1bfa6b42582a","tab":"ask","content":"<div class=\"markdown-text\"><p>最近公司要做签到功能，本来很简单的事情，却要表现本日，本周，本月，本月，本年，累计排行(╯°口°)╯\n考虑到签到每天都会产生数据，数据有几百万条，又是冷数据，所以我们只保留一年的数据，多余的数据全部删掉\n最后我们的做法是，给签到表添加日，周，月，年字段，但累计直接累加保存到user表中，避免累计查询，变保存各个数据过期时间，下次查询的时候检验过期时间，如果过期就删除数据，这样就可以将数据一直保持在一年中\n但问题是这样是全查表，删除数据太过频繁，不知道大家有没有更好的处理方法</p>\n</div>","title":"数据库一边增加数据一边删除数据是否合理","last_reply_at":"2019-01-28T04:51:54.424Z","good":false,"top":false,"reply_count":3,"visit_count":103,"create_at":"2019-01-28T02:18:23.471Z","author":{"loginname":"Beats0","avatar_url":"https://avatars2.githubusercontent.com/u/29087203?v=4&s=120"}},{"id":"5c458c396955112b99437594","author_id":"54edd6faf08635a279d18cff","tab":"ask","content":"<div class=\"markdown-text\"><p>谁有收藏2019前端技能树这样子的图，能否发我一下，多谢-V-</p>\n</div>","title":"谁有收藏2019前端技能树这样子的图，能否发一下","last_reply_at":"2019-01-28T04:29:49.993Z","good":false,"top":false,"reply_count":6,"visit_count":802,"create_at":"2019-01-21T09:09:13.218Z","author":{"loginname":"nqdy666","avatar_url":"https://avatars2.githubusercontent.com/u/5211893?v=4&s=120"}},{"id":"5c4e78603819b801aa5a1e64","author_id":"5afd3b2a0a36e5312d6ed20a","tab":"ask","content":"<div class=\"markdown-text\"><p><img src=\"//static.cnodejs.org/FrNC7s39h0uJzMU8KVYjGxs-ERO3\" alt=\"image.png\">\n环境:\nubuntu:16.04\nnode:10.15.0\nmongo:4.05\nredis:5.0</p>\n<p>是不是因为软件版本过高的问题</p>\n<p><a href=\"https://github.com/cnodejs/nodeclub/issues/1066\">https://github.com/cnodejs/nodeclub/issues/1066</a></p>\n</div>","title":"ubuntu nodeclub安装的一系列问题求解，issues：#1066","last_reply_at":"2019-01-28T03:38:50.615Z","good":false,"top":false,"reply_count":1,"visit_count":41,"create_at":"2019-01-28T03:34:56.489Z","author":{"loginname":"nanhupatar","avatar_url":"https://avatars1.githubusercontent.com/u/27266016?v=4&s=120"}},{"id":"5c4d498a595cbd1e95088cd0","author_id":"5c2f299a5bf06c5e7e3f15d5","tab":"share","content":"<div class=\"markdown-text\"><h2>本文覆盖常见的Webpack4配置大全， 文章很长分三部分。</h2>\n<ul>\n<li>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//juejin.im/post/5c4bfd89e51d45215c2e5a76\">Part-1</a></p>\n</li>\n<li>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//juejin.im/post/5c4c52bd6fb9a049c0436717\">Part-2</a></p>\n</li>\n<li>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//juejin.im/post/5c4c6a02f265da6158777e57\">Part-3</a></p>\n</li>\n</ul>\n<h2>源码仓库地址</h2>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//github.com/NuoHui/webpack-demo\">webpack-demo</a></p>\n</div>","title":"一个Webpack4配置工程师的素养","last_reply_at":"2019-01-28T03:37:54.542Z","good":false,"top":false,"reply_count":7,"visit_count":213,"create_at":"2019-01-27T06:02:50.145Z","author":{"loginname":"NuoHui","avatar_url":"https://avatars2.githubusercontent.com/u/42414989?v=4&s=120"}},{"id":"5c4d1177f9075c1ef7138710","author_id":"55c8131739273b9219336439","tab":"share","content":"<div class=\"markdown-text\"><p>尊敬的各位 CNODE 的观众朋友们大家好， 非常抱歉将非 Node 相关的 Elixir 以及 React 的内容悍然插入到这里, 但是鉴于 Node 和 React 的特殊关系以及 Node 在前端开发基础设施界的地位，更考虑到 cnodejs 社区一贯开放包容的优雅气质，还望各位管理员网开一面。。</p>\n<p>在开始各种流水账之前，先附上我一年来细心打磨的项目：coderplanets (为省电以下简称 CPS)</p>\n<p>网站地址: <a href=\"https://coderplanets.com\">https://coderplanets.com</a></p>\n<p>Github源码： <a href=\"https://github.com/coderplanets/coderplanets_web\">前端</a>， <a href=\"https://github.com/coderplanets/coderplanets_server\">后端</a>， <a href=\"https://github.com/coderplanets/coderplanets_admin\">管理端</a></p>\n<p><img src=\"https://user-images.githubusercontent.com/6184465/51784903-0afc7a00-218b-11e9-8ddb-08cf4df106f9.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/6184465/51784915-2ff0ed00-218b-11e9-8bfd-2c11a5966603.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/6184465/51785962-c11a9080-2198-11e9-89ef-f2d5d874c490.gif\" alt=\"demo\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/6184465/51785972-d55e8d80-2198-11e9-8b63-74b3736919bb.gif\" alt=\"demo2\"></p>\n<blockquote>\n<p>如标题所示，网站目前还是雏形且处于内侧阶段，因此各种小问题难以避免，若您不幸踩雷恳请<a href=\"https://github.com/coderplanets/coderplanets_web/issues/new\">提交issue</a>, 我会第一时间修复。</p>\n</blockquote>\n<h2>coderplanets 是什么?</h2>\n<p><a href=\"http://coderplanets.com\">coderplanets.com</a> 是一个主要面向 IT 从业者的聚合社区, 灵感来源于 <a href=\"https://feedly.com\">feedly</a>、<a href=\"https://www.reddit.com\">reddit</a> 、<a href=\"https://frame.io/\">frame.io</a> 等优秀网站以及最主要的: <strong>程序员每天都在使用的文本编辑器</strong>。 简单的讲，她是一个由各种按照编程语言、框架、开发工具、兴趣爱好等<strong>独立的平等且个性化的</strong>子社区组成的社区平台。</p>\n<h2>为什么要做这样的社区？</h2>\n<p>长话短说，源于我之前在学习一些小众语言时，很难在网上找到像样的可以交流的地方, 本就不多的资料分散在各处，有价值的内容甚至多集中于知乎或简书这样的通用写作平台上，看起来很不方便，以 Elixir 为例, 在<a href=\"https://www.zhihu.com/search?type=content&amp;q=elixir\">知乎上搜索 Elixir</a>, 得到的 Elixir 护肤品问答结果甚至要多于 Elixir 语言本身；比如简书类的平台总喜欢在内容页下大面积&quot;智能推荐&quot;一些<a href=\"https://www.jianshu.com/p/bbba1cae9001\">莫名其妙的内容</a>等等， 令人十分尴尬; 再比如这类平台都几乎只有”帖子”这一种展现形式等等。(类似平台的类似问题至少还能写两页纸，这里不多展开)。</p>\n<p>不只是 Elixir, 几乎所有的小众语言/框架都面临这样的问题， 通用的平台其实不太适合讨论小众的问题，小众的论坛又基本是业余玩具性质(就比如 <a href=\"http://elixir-china.com/\">ElixirChina</a>), 不是每个小众语言/框架都有 cnodejs 这样的高质量论坛。另外在即使有限的几个论坛之间穿梭， UI/UX和域名的不一致也很容易给人造成困扰。</p>\n<p>当然我不是专业的产品经理，如果你看了觉得没什么共鸣甚至觉得我是杠精也很正常，但是之于我，这确实是实打实的痛点，这些平台的问题也不是改改样式或者简单的 PR 就能解决的, 很多我眼中的痛点都需要作出伤筋动骨的重构, 再加上技术之外的一系列限制, 基本上只剩下自己动手这一个选项了。</p>\n<p>另外，就线上垂直社区而言，IT 从业者可能是最“挑剔”的群体了，如果能服务好这个群体，以后再建立其他垂直社区时就会相对容易一些了（详见下文）。</p>\n<h2>CPS 有哪些特点?</h2>\n<h3>专注、纯粹、简洁</h3>\n<p>CPS 由开发者发起，最终面向广大开发者(所谓 <code>from makers, to makers</code>), 垂直服务于<code>IT从业者</code>这个领域, 同时为过滤细分领域里的噪音，一切设计都基于/围绕独立的子社区打磨而来。</p>\n<h3>符合直觉的 UI/UX</h3>\n<p>基于前后端分离的架构，没有无处不在的重刷页面和不必要的跳转，在保留了SEO能力的前提下，尽可能多的吸取了其他单页应用的众多优点。</p>\n<h3>Hackable</h3>\n<p>大到主题、布局，小到订阅社区排序和帖子列表是否显示分割线, CPS 提供了丰富的自定义选项。更重要且自然的，CPS 是完全开源和开放的，你可以添加任何你觉得有意思的功能， 吐槽代码或设计层面的任何细节。</p>\n<h3>更加现代</h3>\n<p>由于没有历史包袱，CPS 不论<a href=\"https://github.com/coderplanets/coderplanets_web/blob/dev/docs/architecture/intro.zh-CN.md\">前端</a>、<a href=\"https://github.com/coderplanets/coderplanets_server/blob/dev/docs/architecture/intro.zh-CN.md\">后端</a>还是一些<a href=\"https://github.com/coderplanets/coderplanets_web/blob/dev/docs/js/graphql.zh-CN.md\">基础设施</a>，都大胆采用了新的技术架构(乃至新的语言),</p>\n<h3>多种内容展现形式</h3>\n<p>除了传统的帖子以外，还有开源项目、视频、招聘，用户地图、cheatsheet、同城等等多种多样的内容展现形式。</p>\n<h2>使用了哪些技术栈？</h2>\n<h4>前端部分(<a href=\"https://github.com/coderplanets/coderplanets_web/blob/dev/package.json\">详细</a>)：</h4>\n<table>\n<thead>\n<tr>\n<th>框架/库</th>\n<th>开发</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/facebook/react\">React.js</a></td>\n<td>UI view 层</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/zeit/next.js\">Next.js</a></td>\n<td>同构 react 框架</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/styled-components/styled-components\">Styled-Component</a></td>\n<td>css-in-js 方案</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/apollographql/apollo-client\">Apollo-Client</a></td>\n<td>GraphQL 客户端</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/facebook/draft-js\">Draft.js</a></td>\n<td>MarkDown 编辑器</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/mobxjs/mobx\">Mobx</a></td>\n<td>react 状态管理</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/mobxjs/mobx-state-tree\">Mobx-State-Tree</a></td>\n<td>Mobx 最佳伴侣</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ReactiveX/rxjs\">Rxjs</a></td>\n<td>异步事件管理</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ramda/ramda\">Ramda</a></td>\n<td>各种工具函数</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<table>\n<thead>\n<tr>\n<th>框架/库</th>\n<th>DevOps</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/zeit/next.js\">Next.js</a></td>\n<td>SEO 支持，打包构建等</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/eslint/eslint\">Eslint</a> 和它的朋友们</td>\n<td>语法规范，纠错</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/prettier/prettier\">Prettier</a></td>\n<td>formatter</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/commitizen/cz-cli\">Commitizen</a></td>\n<td>规范 commit 消息</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/facebook/jest\">Jest</a> / <a href=\"https://github.com/airbnb/enzyme\">Enzyme</a></td>\n<td>单元测试</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/cypress-io/cypress\">Cypress</a></td>\n<td>端对端测试</td>\n</tr>\n<tr>\n<td><a href=\"https://travis-ci.org/coderplanets/coderplanets_web\">Travis</a></td>\n<td>CI 支持</td>\n</tr>\n<tr>\n<td><a href=\"https://sentry.io\">Sentry</a></td>\n<td>错误日志搜集</td>\n</tr>\n<tr>\n<td>Google-Analysis</td>\n<td>统计分析</td>\n</tr>\n<tr>\n<td>Docker</td>\n<td>容器支持(部署在阿里云)</td>\n</tr>\n</tbody>\n</table>\n<h4>后端部分(<a href=\"https://github.com/coderplanets/coderplanets_server/blob/dev/mix.exs\">详细</a>):</h4>\n<table>\n<thead>\n<tr>\n<th>框架/库</th>\n<th>开发</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/phoenixframework/phoenix\">Phoenix</a></td>\n<td>API 服务器</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/absinthe-graphql/absinthe\">Absinthe</a></td>\n<td>GraphQL 支持</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/absinthe-graphql/dataloader\">Dataloader</a></td>\n<td>GraphQL 查询优化</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/elixir-ecto/postgrex\">Postgrex</a></td>\n<td>PostgreSQL 数据库客户端</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<table>\n<thead>\n<tr>\n<th>框架/库</th>\n<th>DevOps</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://engine.apollographql.com\">Apollo-engine</a></td>\n<td>GraphQL网关, 监测，缓存等</td>\n</tr>\n<tr>\n<td><a href=\"https://hexdocs.pm/ex_unit/ExUnit.html\">ExUnit</a></td>\n<td>单元测试 / GraphQL 端对端测试</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/rrrene/credo\">Credo</a></td>\n<td>语法规范</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/jeremyjh/dialyxir\">Dialyxir</a></td>\n<td>静态代码检测</td>\n</tr>\n<tr>\n<td><a href=\"https://travis-ci.org/coderplanets/coderplanets_server\">Travis</a></td>\n<td>CI 支持</td>\n</tr>\n<tr>\n<td><a href=\"https://sentry.io\">Sentry</a></td>\n<td>错误日志搜集</td>\n</tr>\n<tr>\n<td>Docker</td>\n<td>容器支持(部署在阿里云)</td>\n</tr>\n</tbody>\n</table>\n<p>这里限于篇幅不再展开，更详细的文档请移步 github (<a href=\"https://github.com/coderplanets/coderplanets_web/tree/dev/docs\">前端文档</a> 以及 <a href=\"https://github.com/coderplanets/coderplanets_server/tree/dev/docs\">后端文档</a>)</p>\n<p>另外，我会逐步在知乎的专栏上持续分享有关 CPS 在技术、产品、设计上的各种点滴，欢迎关注。</p>\n<h2>一些花絮/彩蛋</h2>\n<ul>\n<li>网络/事件模块被命名为 sr71, 名字源于美军的 sr71 黑鸟侦察机</li>\n<li>多功能搜索框被命名为 Doraemon, 名字源于英译的哆啦A梦(机器猫)</li>\n<li>可以使用缩写跳转社区, 例如 k8s -&gt; kubernetes, js -&gt; javascript, wasm -&gt; webassembly 等等</li>\n<li>可以使用快捷键 C-p/C-g/esc 等呼出或隐藏 Doraemon, 就像在emacs, vim, vscode 等编辑器中一样</li>\n<li>可以在 Doraemon 输入 /theme 切换主题，以及各种类似操作</li>\n<li>匿名用户的头像是一个可爱的外星人头像</li>\n<li>不同社区中的成员分布地图有不同的名字， 比如 ruby 社区叫 rubylist, js 社区叫JSer 等等。。</li>\n<li>在文章中@用户的时候， editor上方会显示所 at 的用户的头像</li>\n<li>空内容页面会显示”星球老司机”的提示图，该老司机每次的行进方向是随机的</li>\n<li>打赏界面被模拟成吃 taco 的场景，原因是我喜欢吃 taco</li>\n<li>多功能滑出组件在某些页面卡顿时会显示巴萨队徽及其足球哲学：Take the Ball, Pass the Ball. – 我是十年巴萨球迷</li>\n<li>左侧边栏顶端会根据节日或重大事件显示不同的 logo</li>\n<li>回复企邮 <a href=\"mailto:hello@group.coderplanets.com\">hello@group.coderplanets.com</a> 的“员工”叫frank, 是的，就是操蛋的 Frank Gallagher</li>\n<li>页面侧边栏和底部是赞助商的鸣谢/推广, 如果贵公司有这方面的需要，注明来自 cnodejs 会有折扣优惠 :)</li>\n<li>还有很多(或者说未来还会添加很多)等你来发现 :)</li>\n</ul>\n<h2>期待你的参与和支持</h2>\n<p><img src=\"https://user-images.githubusercontent.com/6184465/51666005-02276f00-1ff8-11e9-92b5-4626cf6f1463.png\" alt=\"image\"></p>\n<p>CPS 从 0 到 1 的这一年来一直处于 “one man army” 的状态，这段经历孤独而美妙，付出和收获同样巨大。因此，您的每一次  <code>issue</code> / <code>pr</code> / <code>star</code> / <code>fork</code> / <code>推广</code> / <code>捐助</code> / <code>赞助</code> 等等都会被我视作莫大的鼓励和支持，在此先谢过 🌭 。</p>\n<p>更进一步的，这个项目从一开始在代码层面并不是只针对 CPS 本身，她致力于成为垂直社区界的 “WordPress”, 所依赖的底层通用的架构叫做 <a href=\"https://github.com/mastani-stack\">Mastani-Stack</a>, 她和 CPS 的关系类似于汽车平台和车型的关系，CPS 是 Mastani 平台的第一款“车型”。在 2019 年还计划有以下&quot;车型&quot; (域名都已注册，并非一时兴起)：</p>\n<table>\n<thead>\n<tr>\n<th>domain</th>\n<th>content</th>\n<th>prototype</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://top12s.com\">top12s.com</a></td>\n<td>足球领域的垂直社区</td>\n<td>以俱乐部, 国家队等子社区组成</td>\n</tr>\n<tr>\n<td><a href=\"http://motojie.com\">motojie.com</a> (摩界)</td>\n<td>摩托/摩旅领域的垂直社区</td>\n<td>以摩托旅行，地域，车型等子社区组成</td>\n</tr>\n<tr>\n<td><a href=\"http://cgplanets.com\">cgplanets.com</a></td>\n<td>CG 领域的垂直社区</td>\n<td>以 C4D, Blender, Maya 等子社区组成</td>\n</tr>\n<tr>\n<td><a href=\"http://designber.com\">designber.com</a></td>\n<td>设计领域的垂直社区</td>\n<td>待定, 偏向建筑和工业设计</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>和你第一眼看上去的感觉一样，这其中的工作量是巨大的(不仅仅单指技术层面), 什么时候能完成我无法给出具体 schdule, 但我可以向你保证的是, 这些&quot;车型&quot;都会被高水准的制造出来，不会半途而废。</p>\n<p>因此，如果你恰好也对这些领域感兴趣(或者任何你觉得有意思的垂直领域或有意义的非盈利组织), 不管你身处何方, 不论你擅长技术、文案、设计、推广、商务法律等或者其他方面，欢迎与我联系(或留下您的联系方式)，能和志同道合的人一起搞事情是人生最大的乐趣之一。</p>\n<p>最后作为福利，有请我团队的首席美女鼓励师兼中华田园界第一颜值 — 大美女“梅茜” 出场镇帖:</p>\n<p><img src=\"https://user-images.githubusercontent.com/6184465/51782415-c9f06f80-2162-11e9-9ab1-eed3692b8b12.png\" alt=\"image\"></p>\n<p>预祝各位新年快乐, 2019一起加油 !</p>\n</div>","title":"基于 Elixir-GraphQL-React 的新一代社区系统设计雏形","last_reply_at":"2019-01-28T03:36:09.285Z","good":false,"top":false,"reply_count":3,"visit_count":208,"create_at":"2019-01-27T02:03:35.145Z","author":{"loginname":"mydearxym","avatar_url":"https://avatars2.githubusercontent.com/u/6184465?v=4&s=120"}},{"id":"5c4c929a595cbd1e95088b3a","author_id":"59eeb8e11bbf067d5c3fa7c6","tab":"share","content":"<div class=\"markdown-text\"><p>今天在编译CabloyJS项目时，突然编译失败，错误提示如下：</p>\n<blockquote>\n<p>Module parse failed: ‘import’ and ‘export’ may only appear at the top level (127:10)</p>\n</blockquote>\n<p>常规情况下，出现这种错误，只需要在.babelrc中添加插件即可</p>\n<blockquote>\n<p>“plugins”: [&quot;<a href=\"/user/babel\">@babel</a>/plugin-syntax-dynamic-import&quot;]</p>\n</blockquote>\n<p>在明明已经正确配置.babelrc的情况下，仍出现这种错误，除了反复查阅babel和webpack最新文档外，只有google了。</p>\n<p>历经千辛万苦，终于找到一个帖子：\n<a href=\"https://github.com/webpack/webpack/issues/8656\">https://github.com/webpack/webpack/issues/8656</a></p>\n<p>仅仅是因为webpack升级为4.29.0导致的。只能暂时将webpack锁定版本4.28.4解决此问题了。</p>\n</div>","title":"紧急提示：Webpack 4.29.0 编译出错","last_reply_at":"2019-01-28T03:18:02.294Z","good":false,"top":false,"reply_count":7,"visit_count":186,"create_at":"2019-01-26T17:02:18.583Z","author":{"loginname":"zhennann","avatar_url":"https://avatars1.githubusercontent.com/u/24246985?v=4&s=120"}},{"id":"5b44291035342ab0690613d6","author_id":"5b37500b5c8f1ea723a56b2b","tab":"share","content":"<div class=\"markdown-text\"><p>Electron是一个跨平台的桌面应用开发框架，可以让我们用html css js的技术开发跨平台桌面上可以安装的软件。</p>\n<p><strong>前4讲免费试听地址：</strong></p>\n<p><a href=\"https://pan.baidu.com/s/1Dol4tP6Jop6MXro0ULVapQ\">https://pan.baidu.com/s/1Dol4tP6Jop6MXro0ULVapQ</a></p>\n<p>electron Github的 star已经达到61957，那么他的<strong>用户量可能已经有100万了</strong>。还有大家知道的github的atom编辑器、微软的vscode编辑器，包括阿里内部的一些软件也是用 electron 开发的。既然这么热，<strong>那就一个字：学</strong>，大家都在学，你不学（有没有压力啊！！！）</p>\n<p><strong>28元购买地址</strong>:<a href=\"https://www.itying.com/goods-929.html\">https://www.itying.com/goods-929.html</a></p>\n<p><img src=\"//static.cnodejs.org/FqbpQ7iHRMdMdSrEGLD_xpe4CabH\" alt=\"1.png\"></p>\n</div>","title":"Electron视频教程_Electron+Vue跨平台桌面软件开发视频教程（收费啊--不贵一包烟钱-有试听）","last_reply_at":"2019-01-28T02:46:56.573Z","good":false,"top":false,"reply_count":31,"visit_count":6643,"create_at":"2018-07-10T03:33:36.227Z","author":{"loginname":"it-ionic","avatar_url":"https://avatars1.githubusercontent.com/u/17946554?v=4&s=120"}},{"id":"5c4d93a2f9075c1ef7138866","author_id":"5c1b04c03898674067a76417","tab":"ask","content":"<div class=\"markdown-text\"><p>比如，我输入关键词 “阿巴”，也能搜出 “阿里巴巴”</p>\n</div>","title":"请问下 mysql 如何实现不连续模糊查询","last_reply_at":"2019-01-28T01:34:46.758Z","good":false,"top":false,"reply_count":4,"visit_count":150,"create_at":"2019-01-27T11:18:58.281Z","author":{"loginname":"didiaohu","avatar_url":"https://avatars0.githubusercontent.com/u/19411940?v=4&s=120"}},{"id":"5c4e57d03819b801aa5a1d3e","author_id":"5c47daf86955112b99437e57","tab":"share","content":"<div class=\"markdown-text\"><p><a href=\"http://uyi2.com\">下载地址</a>\n<img src=\"http://static.vue-js.com/FsUtVJ-iPxzBmZGlrnNdropb0NYT\" alt=\"ue2.png\"></p>\n</div>","title":"vue 2019 vip收费视频资料免费下载","last_reply_at":"2019-01-28T01:16:00.157Z","good":false,"top":false,"reply_count":0,"visit_count":79,"create_at":"2019-01-28T01:16:00.157Z","author":{"loginname":"xiaozhimn","avatar_url":"https://avatars1.githubusercontent.com/u/4102025?v=4&s=120"}},{"id":"5b1939ad29e6e510415b2916","author_id":"5ad9731bba60fcc66b7b86aa","tab":"share","content":"<div class=\"markdown-text\"><p>最近利用空闲时间写了一个从入门到上线的的node实战教程《Node.js从入门到上线》A blog build with Koa2. 目前还在更新中，入门篇已基本成型。</p>\n<p>本项目使用es6语法，采用Koa2 + mongoose 搭建了一个博客系统，实现了文章管理、用户登录注册、权限控制、分类管理等功能。</p>\n<p>GitHub: <a href=\"https://github.com/liuxing/node-blog\">https://github.com/liuxing/node-blog</a></p>\n<h2>目录</h2>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.1Node.js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.md\">1.1  Node.js 的安装与配置</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.1Node.js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.md#%E5%AE%89%E8%A3%85nodejs\">安装Node.js</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.1Node.js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.md#%E4%BD%BF%E7%94%A8-nvm\">使用nvm</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.1Node.js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.md#%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7\">一些有用的工具</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.1Node.js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.md#hello-node\">hello-node</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.2Node.js%E5%9F%BA%E7%A1%80%E6%A6%82%E8%A7%88.md\">1.2 Node.js 基础概览</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.2Node.js%E5%9F%BA%E7%A1%80%E6%A6%82%E8%A7%88.md#node%E6%A8%A1%E5%9D%97\">node模块</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/1.2Node.js%E5%9F%BA%E7%A1%80%E6%A6%82%E8%A7%88.md#npm%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E5%99%A8\">npm包管理器</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/2.1Koa2%E5%88%9D%E4%BD%93%E9%AA%8C.md\">2.1 Koa2初体验</a></p>\n<ul>\n<li>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/2.1Koa2%E5%88%9D%E4%BD%93%E9%AA%8C.md#hello-koa2\">Hello Koa2</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/2.1Koa2%E5%88%9D%E4%BD%93%E9%AA%8C.md#%E4%BD%BF%E7%94%A8supervisor-%E6%88%96%E8%80%85-nodemon\">使用supervisor 或者 nodemon</a></p>\n</li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/2.2MongoDB%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8.md\">2.2 MongoDB的安装及使用</a></p>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.1%E5%BC%80%E5%8F%91%E5%89%8D%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.md\">3.1 开发前的项目配置</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.1%E5%BC%80%E5%8F%91%E5%89%8D%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.md#%E8%A7%84%E5%88%92%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\">规划项目目录结构</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.1%E5%BC%80%E5%8F%91%E5%89%8D%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.md#%E4%BD%BF%E7%94%A8editorconfig\">使用editorconfig</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.1%E5%BC%80%E5%8F%91%E5%89%8D%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.md#%E4%BD%BF%E7%94%A8commitizen\">使用commitizen</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.1%E5%BC%80%E5%8F%91%E5%89%8D%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.md#%E4%BD%BF%E7%94%A8eslint\">使用eslint</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.1%E5%BC%80%E5%8F%91%E5%89%8D%E7%9A%84%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.md#%E4%BD%BF%E7%94%A8git-hooks%E8%87%AA%E5%8A%A8%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81\">使用Git hooks自动检查代码</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.2%E6%8A%8A%E9%A1%B9%E7%9B%AE%E8%B7%91%E8%B5%B7%E6%9D%A5.md\">3.2 把项目跑起来</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.2%E6%8A%8A%E9%A1%B9%E7%9B%AE%E8%B7%91%E8%B5%B7%E6%9D%A5.md#router\">router</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.2%E6%8A%8A%E9%A1%B9%E7%9B%AE%E8%B7%91%E8%B5%B7%E6%9D%A5.md#%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E\">配置模板引擎</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.2%E6%8A%8A%E9%A1%B9%E7%9B%AE%E8%B7%91%E8%B5%B7%E6%9D%A5.md#%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90\">配置静态资源</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.3%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93.md\">3.3 使用mongoose操作数据库</a></p>\n<ul>\n<li>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.3%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93.md#%E8%AE%BE%E8%AE%A1schema\">设计Schema</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/liuxing/abc-blog/tree/master/docs/3.3%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93.md#%E4%BD%BF%E7%94%A8model\">使用model</a></p>\n</li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.4%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E7%99%BB%E5%BD%95.md\">3.4用户注册与登录</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.4%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E7%99%BB%E5%BD%95.md#cookie%E4%B8%8Esession\">cookie与session</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.4%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E7%99%BB%E5%BD%95.md#%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C\">用户注册</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.4%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E7%99%BB%E5%BD%95.md#%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95\">用户登录</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.4%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E7%99%BB%E5%BD%95.md#%E7%94%A8%E6%88%B7%E7%99%BB%E5%87%BA\">用户登出</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.5koa2%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BC%80%E5%8F%91.md\">3.5 koa2中间件开发</a></p>\n<ul>\n<li>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.5koa2%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BC%80%E5%8F%91.md#koa2-%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%9C%BA%E5%88%B6\">koa2 中间件机制</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.5koa2%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%BC%80%E5%8F%91.md#%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0%E4%B8%AD%E9%97%B4%E4%BB%B6\">消息闪现中间件</a></p>\n</li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.6%E6%96%87%E7%AB%A0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.md\">3.6 文章增删改查</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.6%E6%96%87%E7%AB%A0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.md#%E6%96%87%E7%AB%A0%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1\">文章模型设计</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.6%E6%96%87%E7%AB%A0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.md#%E6%96%87%E7%AB%A0%E5%8F%91%E8%A1%A8\">文章发表</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.6%E6%96%87%E7%AB%A0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.md#%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8%E4%B8%8E%E8%AF%A6%E6%83%85\">文章列表与详情</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.6%E6%96%87%E7%AB%A0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.md#%E6%96%87%E7%AB%A0%E7%BC%96%E8%BE%91%E4%B8%8E%E5%88%A0%E9%99%A4\">文章编辑与删除</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.7%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.md\">3.7 用户权限控制</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.7%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.md#%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81%E6%A3%80%E6%9F%A5\">登录状态检查</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.7%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.md#%E7%AE%A1%E7%90%86%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6\">管理权限控制</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.8%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.md\">3.8 评论功能</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.8%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.md#%E8%AE%BE%E8%AE%A1%E8%AF%84%E8%AE%BA%E7%9A%84%E6%A8%A1%E5%9E%8B\">设计评论的模型</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.8%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.md#%E5%8F%91%E5%B8%83%E7%95%99%E8%A8%80\">发布留言</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.8%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.md#%E5%8F%91%E5%B8%83%E7%95%99%E8%A8%80\">显示留言</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.8%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.md#%E5%88%A0%E9%99%A4%E7%95%99%E8%A8%80\">删除留言</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.9%E4%B8%80%E4%BA%9B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98.md\">3.9 一些安全问题</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.9%E4%B8%80%E4%BA%9B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98.md#xss%E7%9A%84%E9%98%B2%E8%8C%83\">XSS的防范</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.9%E4%B8%80%E4%BA%9B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98.md#csrf-%E7%9A%84%E9%98%B2%E8%8C%83\">CSRF的防范</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.10%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB.md\">3.10 分类管理</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.10%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB.md#%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1\">分类模型</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.10%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB.md#%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86%E4%B8%BB%E9%A1%B5\">分类管理主页</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.10%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB.md#%E6%96%B0%E5%A2%9E%E5%88%86%E7%B1%BB\">新增与删除</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.11%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD.md\">3.11 分页功能</a></p>\n<ul>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.11%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD.md#mongodb-%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5%E5%8E%9F%E7%90%86\">MongoDB分页原理</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.11%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD.md#%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%88%86%E9%A1%B5%E5%99%A8\">实现一个基本的分页器</a></li>\n<li><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.11%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD.md#%E9%AB%98%E7%BA%A7%E4%B8%80%E7%82%B9%E5%84%BF%E7%9A%84%E5%88%86%E9%A1%B5%E5%99%A8\">高级一点儿的分页器</a></li>\n</ul>\n<p><a href=\"https://github.com/liuxing/abc-blog/blob/master/docs/3.12koa2%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8F%8A404.md\">3.12 koa2错误处理及404</a></p>\n<p>[3.13 单元测试 更新中]</p>\n<p>关于测试：大家喜欢什么框架 mocha or jest？\n…</p>\n<p>持续更新中，未来将逐步发布【上线篇】：域名服务器选购、服务器配置、Nginx等等。实现线上部署</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/3/12/1621826e0dd7f41a?w=642&amp;h=382&amp;f=webp&amp;s=12738\" alt></p>\n<p>左手代码右手砖抛砖引玉</p>\n</div>","title":"《Node.js从入门到上线》入门篇 （持续更新中）","last_reply_at":"2019-01-28T01:07:23.321Z","good":false,"top":false,"reply_count":49,"visit_count":11713,"create_at":"2018-06-07T13:57:01.654Z","author":{"loginname":"liuxing","avatar_url":"https://avatars0.githubusercontent.com/u/17724186?v=4&s=120"}},{"id":"5bb0bf6f37a6965f59051df3","author_id":"5ba61ea38f5b0c1c59ea10b6","tab":"share","content":"<div class=\"markdown-text\"><h2>在线体验地址:<a href=\"http://vip.52tech.tech/\">http://vip.52tech.tech/</a></h2>\n<h2>GIthub源码：<a href=\"https://github.com/xiugangzhang/vip.github.io\">https://github.com/xiugangzhang/vip.github.io</a></h2>\n<h2>项目预览</h2>\n<p><img src=\"//static.cnodejs.org/FmjZMm4b3MUqJIuSB5aYS2PEW0pf\" alt=\"preview.jpg\"></p>\n<ul>\n<li>主页面\n<img src=\"//static.cnodejs.org/FhTjrj9HgY37ojGYNdLWupmBfSyv\" alt=\"preview.jpg\"></li>\n<li>登录页面\n<img src=\"//static.cnodejs.org/FrZr5Mck4VQD9ndVXhJGqA9XwHsU\" alt=\"login.jpg\"></li>\n<li>注册页面\n<img src=\"//static.cnodejs.org/FnXwM1CtMBcA7cFv66vlYb-t559E\" alt=\"register.jpg\"></li>\n<li>会员中心\n<img src=\"//static.cnodejs.org/FtCfCUeeIA8Y0WnYkhvzqlweqPbs\" alt=\"user.jpg\"></li>\n<li>电影播放页面\n<img src=\"//static.cnodejs.org/FryrTyzEeEFuOgD1uXrkwF4MzXn-\" alt=\"play.jpg\"></li>\n<li>电影弹幕功能\n<img src=\"//static.cnodejs.org/FhcOXAvbMZuafMrJzU00fMvRXot9\" alt=\"danmu.jpg\"></li>\n</ul>\n<h2>视频网站项目已经完功能如下：</h2>\n<h3>v1.0.3（当前最新版本）</h3>\n<ul>\n<li>\n<ol>\n<li>增加自动抓取功能，网站数据定期实时更新</li>\n</ol>\n<ul>\n<li>电影和电视剧数据抓取</li>\n<li>电影数据信息前端展现</li>\n</ul>\n</li>\n<li>\n<ol>\n<li>电影页面图片的自动抓取、下载和展示</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>代码结构调整</li>\n</ol>\n</li>\n</ul>\n<h3>v1.0.2</h3>\n<ul>\n<li>\n<ol>\n<li>简化程序安装流程，新增可视化安装界面</li>\n</ol>\n<ul>\n<li>用户可直接输入数据库名、数据库地址、数据库用户名、数据库密码信息一键完成程序的安装</li>\n</ul>\n</li>\n<li>\n<ol>\n<li>页面部分结构的调整</li>\n</ol>\n</li>\n</ul>\n<h3>v1.0.1</h3>\n<ul>\n<li>\n<ol>\n<li>用户中心的管理</li>\n</ol>\n<ul>\n<li>对于已经注册的用户，实现用户基本信息的修改</li>\n<li>用户密码的修改</li>\n<li>用户评论记录的查看</li>\n<li>用户收藏电影的查看和播放</li>\n<li>用户登录日志的查看</li>\n</ul>\n</li>\n<li>\n<ol>\n<li>电影搜索功能（特色功能）</li>\n</ol>\n<ul>\n<li>实现了根据视频播放地址和视频名称全网视频的搜索和播放功能</li>\n<li>实现了正在热映，即将上映和TOP250的电影列表的展示</li>\n<li>电影收藏和取消功能</li>\n</ul>\n</li>\n<li>\n<ol>\n<li>弹幕功能（特色功能）</li>\n</ol>\n<ul>\n<li>类似于B站等其他视频网站的弹幕功能，用户在登录之后可以实现在线发言</li>\n</ul>\n</li>\n</ul>\n<h3>v1.0.0</h3>\n<ul>\n<li>\n<ol>\n<li>用户主页的搭建：</li>\n</ol>\n<ul>\n<li>实现了主页轮播图的显示和切换，用户可以从数据库中自由配置和切换轮播图的显示</li>\n<li>实现了主页电影列表的显示：从数据库文件读取电影和电视剧列表信息并在前台显示</li>\n</ul>\n</li>\n<li>\n<ol>\n<li>用户登录和注册页面的搭建：</li>\n</ol>\n<ul>\n<li>实现了用户的登录和注册功能</li>\n<li>用户注册和登录验证码提示功能</li>\n</ul>\n</li>\n<li>\n<ol>\n<li>电影播放页面的搭建</li>\n</ol>\n<ul>\n<li>对于其他页面的任意可以展现电影列表的页面，用户可以直接点击列表，直接进入播放页面</li>\n<li>播放页面电影详细信息的展现</li>\n<li>对于加载速度较慢的视频，用户可以自由切换播放接口进行加速</li>\n<li>用户可以在相应的播放页面查看其他用户已经发表的评论，同时也可以在登录之后自由发表评论</li>\n</ul>\n</li>\n</ul>\n<h3>其他</h3>\n<ul>\n<li>\n<ol>\n<li>页面整体的风格模仿了Discuz等论坛网站的布局</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>网站首页的轮播图效果模仿了优酷、爱奇艺、腾讯视频等主流视频网站的轮播图效果，并且对该部分的效果实现进行了代码封装</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>电影底部的的友情链接，使用了大部分网站的分栏布局，用户可以添加自己的QQ群以及微信公众号方便增加自己网站的人气</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>主要列表的分页功能，对于一些内容显示较多的不能再一页显示完整的页面，使用了ajax无刷新分页对数据进行多条展示，提高了用户的体验</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>目前主流浏览器中也做了相应测试，建议大家使用谷歌或者火狐浏览器，效果可能会更好</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>未使用其他第三方框架，首页和播放页均为纯原生的HTML，CSS， js实现（至于这个xframe-min-1.0.js文件可以参见我的GitHub xframe.js这个开源项目）</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>电影播放页面：此处也是类似于当前主流网站的的播放页面，左侧为播放窗口，右侧部分为电影的详细信息</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>底部导航：使用分栏的方式实现了底部的导航，前面的为友情链接，后面的一个为网站的微信，Q微博等联系方式</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>用户中心：这部分实现了修改密码，评论，登录，日志管理，收藏电影的功能，用户可以自由切换</li>\n</ol>\n</li>\n</ul>\n<h2>程序目录结构说明</h2>\n<pre class=\"prettyprint\"><code>vip.github.io:\n├─controllers               &#x2F;&#x2F; 控制层\n├─data                      &#x2F;&#x2F; 数据抓取层\n├─logs                      &#x2F;&#x2F; 后台日志\n│  ├─errlog                 &#x2F;&#x2F; 错误日志\n│  ├─othlog                 &#x2F;&#x2F; 其他日志\n│  └─reqlog                 &#x2F;&#x2F; 请求日志\n├─models                    &#x2F;&#x2F; 模型层\n├─static                    &#x2F;&#x2F; 静态页\n│  ├─css                    &#x2F;&#x2F; 样式表\n│  ├─images                 &#x2F;&#x2F; 静态图片资源\n│  └─js                     &#x2F;&#x2F; js脚本\n├─utils                     &#x2F;&#x2F; 工具相关\n├─views                     &#x2F;&#x2F; 视图层\n└─www                       &#x2F;&#x2F; 静态资源\n    ├─css                   &#x2F;&#x2F; 样式表\n    ├─html                  &#x2F;&#x2F; html文件\n    ├─images                &#x2F;&#x2F; 静态图片资源\n    ├─js                    &#x2F;&#x2F; js脚本\n    │  └─movielist          &#x2F;&#x2F; 搜索页电影列表\n    │      ├─components     &#x2F;&#x2F; top250&#x2F;即将上映\n    │      └─in_theaters    &#x2F;&#x2F; 正在热映\n    └─uploads               &#x2F;&#x2F; 文件上传目录\n        ├─avatar            &#x2F;&#x2F; 用户图像\n        └─movie             &#x2F;&#x2F; 电影图标\n\n</code></pre><h2>程序安装方法</h2>\n<ul>\n<li>\n<ol>\n<li>确保电脑已经安装了NodeJS环境，运行版本尽量保持最新（V8以上吧），选择本地的一个路径，然后运行命令：</li>\n</ol>\n</li>\n</ul>\n<pre class=\"prettyprint\"><code>   git clone https:&#x2F;&#x2F;github.com&#x2F;xiugangzhang&#x2F;vip.github.io.git\n</code></pre><ul>\n<li>\n<ol>\n<li>进入程序的主目录（包含app.js的那个文件夹）运行命令：npm install，系统就会自动安装该程序的依赖包；</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>在以上的步骤都执行完成且正确的情况下，就可以在程序主目录下面（有app.js的那个目录）,运行命令</li>\n</ol>\n</li>\n</ul>\n<pre class=\"prettyprint\"><code>   node app.js\n</code></pre><p>之后就会自动在浏览器中打开本程序安装的主界面；</p>\n<ul>\n<li>\n<ol>\n<li>如果是windows环境下，本程序提供了可视化的安装。用户可在程序的安装界面输入数据库名、数据库主机地址、数据库用户名、数据库密码，之后点击按钮立即安装即可，在输入的参数全部正确的情况下，就会后台自动安装程序，安装成功之后会自动跳转到网站首页；\n<img src=\"//static.cnodejs.org/FqNdjsfo5whahU-WvEC8WOpBBXA5\" alt=\"installing.jpg\"></li>\n</ol>\n</li>\n<li>\n<ol>\n<li>如果是Linux环境下，请提前准备好数据库名（database=video）、数据库主机地址（host=localhost）、数据库用户名（user=root）、数据库密码（password=123456 ），按照如下格式保存为config.properties文件，请确保这里的配置信息和你的数据库配置信息完全一致；</li>\n</ol>\n</li>\n</ul>\n<pre class=\"prettyprint\"><code>    database=video               \n    host=localhost          \n    user=root               \n    password=123456         \n</code></pre><ul>\n<li>\n<ol>\n<li>在线演示站点：<a href=\"http://vip.52tech.tech\">http://vip.52tech.tech</a></li>\n</ol>\n</li>\n<li>\n<ol>\n<li>对于安装和使用的过程中如果有什么问题和建议，也欢迎交流和提出建议，可以在issue去发起话题讨论，或直接联系邮箱：tech52admin@126.com</li>\n</ol>\n</li>\n</ul>\n</div>","title":"【VIP视频网站项目】基于Nodejs开发的VIP视频网站项目及源码分享【v1.0.3版】","last_reply_at":"2019-01-27T11:28:30.710Z","good":false,"top":false,"reply_count":17,"visit_count":12681,"create_at":"2018-09-30T12:19:59.585Z","author":{"loginname":"xiugangzhang","avatar_url":"https://avatars3.githubusercontent.com/u/29092258?v=4&s=120"}},{"id":"5b630389b71aedfe4c1266a2","author_id":"5b62fab258db3ccf66a4516b","tab":"ask","content":"<div class=\"markdown-text\"><p>近期在学习node.js，由于自己是初学者，看了《Node.js开发指南》和 《Node.js开发实战》上的一些基础的东西，《深入浅出 Node.js》看起来是很吃力，最近试着用Express开发自己的一个 个人博客系统，刚刚开始，就感觉很吃力，最近就在想该怎么来学习，希望曾经和我有相同问题的朋友解答下我的疑惑，学习路线很迷茫啊。。。</p>\n</div>","title":"node.js的入门（萌新）","last_reply_at":"2019-01-27T03:16:44.958Z","good":false,"top":false,"reply_count":36,"visit_count":4423,"create_at":"2018-08-02T13:13:45.110Z","author":{"loginname":"remembergf","avatar_url":"https://avatars1.githubusercontent.com/u/34055216?v=4&s=120"}},{"id":"57356c5e8f82e08e531de6ca","author_id":"532dbbb095db4c2478006daa","tab":"share","content":"<div class=\"markdown-text\"><p>dotENV已经有很多模块，用得比较做的 dotenv，\n但是都是只支持一维的，我试着弄了个多维的，也就几十行代码：</p>\n<blockquote>\n<p>先放地址 <a href=\"https://github.com/captainblue2013/dotenvR\">https://github.com/captainblue2013/dotenvR</a></p>\n</blockquote>\n<hr>\n<h2>Install</h2>\n<pre class=\"prettyprint\"><code>npm install dotenvr --save\n</code></pre><h2>Usage</h2>\n<pre class=\"prettyprint\"><code>var config = require(&#x27;dotenvr&#x27;).load(); &#x2F;&#x2F;默认当前路径 .env \n&#x2F;&#x2F;var config = require(&#x27;dotenvr&#x27;).load(&#x27;&#x2F;path&#x2F;of&#x2F;your&#x2F;.env&#x27;);\n</code></pre><h2>Example</h2>\n<p>.env</p>\n<pre class=\"prettyprint\"><code> APP = demo\n A.B.C = 123\n</code></pre><p>var config = require(‘dotenvr’).load(); // also see process.env</p>\n<pre class=\"prettyprint\"><code> {\n     APP:&#x27;demo&#x27;,\n     A:{\n         B:{\n             C:123\n         }\n     }\n }</code></pre></div>","title":"最近在用 dotENV ，于是做了一个支持多层的轮子","last_reply_at":"2019-01-27T01:30:25.011Z","good":false,"top":false,"reply_count":3,"visit_count":3369,"create_at":"2016-05-13T05:55:42.479Z","author":{"loginname":"captainblue2013","avatar_url":"https://avatars1.githubusercontent.com/u/3942299?v=4&s=120"}},{"id":"5c4cfe15f9075c1ef71386ca","author_id":"59f6bdff688da99d4fa91e04","tab":"ask","content":"<div class=\"markdown-text\"><pre class=\"prettyprint\"><code>const Client = require(&#x27;ssh2&#x27;).Client;\n\nconst app= new Client();\n\n...\n\nfunction removeAndMkdir(resolve,reject) {\n    ...\n\n    app.exec(&#x27;cd &#x2F; &amp;&amp; rm -rf home1 &amp;&amp; mkdir home1&#x27;,function(err, stream) {\n        if(err) console.log(&#x27;删除失败，原因：&#x27;+err);\n\n        ...\n\n        resolve();\n    });\n};\n\nfunction updateFile(resolve,reject) {\n    ...\n\n    app.sftp(function(err,stream) {\n        if(err) console.log(err);\n\n        stream.fastPut(&#x27;F:&#x2F;编程&#x2F;blog&#x2F;public&#x2F;&#x27;,&#x27;&#x2F;home1&#x2F;&#x27;,function(err) {\n            if(err) console.log(err);\n\n            resolve();\n        })\n    });\n};\n\napp.on(&#x27;ready&#x27;,function() {\n    ...\n\n    let p=new Promise(removeAndMkdir);\n\n    p.then(function() {\n        ...\n        return new Promise(updateFile);\n    }).then(function() {\n        ...\n    },function() {\n        ...\n    })\n\n}).connect({\n\t...\n});\n</code></pre><p><strong>上面是代码，就是报错看不懂，因为很短！</strong>\n{ Error: Failure\nat SFTPStream._transform (f:\\编程\\ssh\\node_modules\\ssh2-streams\\lib\\sftp.js:412:27)\nat SFTPStream.Transform._read (_stream_transform.js:190:10)\nat SFTPStream._read (f:\\编程\\ssh\\node_modules\\ssh2-streams\\lib\\sftp.js:183:15)\nat SFTPStream.Transform._write (_stream_transform.js:178:12)\nat doWrite (_stream_writable.js:410:12)\nat writeOrBuffer (_stream_writable.js:394:5)\nat SFTPStream.Writable.write (_stream_writable.js:294:11)\nat Channel.ondata (_stream_readable.js:666:20)\nat Channel.emit (events.js:182:13)\nat addChunk (_stream_readable.js:283:12) code: 4, lang: ‘’ }</p>\n</div>","title":"ssh2，sftpAPI使用过程中问题","last_reply_at":"2019-01-27T00:40:53.017Z","good":false,"top":false,"reply_count":0,"visit_count":143,"create_at":"2019-01-27T00:40:53.017Z","author":{"loginname":"xiaobai2017666","avatar_url":"https://avatars1.githubusercontent.com/u/29399423?v=4&s=120"}},{"id":"5c47372b3b948a2b4ab70951","author_id":"5a0a5c9da57c17282e120654","tab":"share","content":"<div class=\"markdown-text\"><p><a href=\"https://github.com/oliyg/juejinxiaoce\">github 仓库欢迎 star</a></p>\n<p>采用 node https 模块，获取已购买小册 html 代码，并将 html 代码转换为 markdown 格式文件保存本地。</p>\n<p><strong>注意：目前本项目有两个版本，v2 不需要使用 chromium 作为无头浏览器；v1 则使用 chromi 作为无头浏览器模拟用户登录网站；</strong></p>\n<p>根据需要选择不同版本</p>\n<ul>\n<li>v2：\n<ul>\n<li><a href=\"https://github.com/oliyg/juejinxiaoce/releases\">latest</a></li>\n</ul>\n</li>\n<li>v1 不再维护：\n<ul>\n<li><a href=\"https://github.com/oliyg/juejinxiaoce/releases/tag/1.1.2\">release v1</a></li>\n</ul>\n</li>\n</ul>\n<h2>使用方法</h2>\n<p><strong>⚠️ 注意：掘金不支持境外网络访问，因此不要使用代理</strong></p>\n<h3>方法一：npx 直接执行</h3>\n<p>在本地某目录中执行 <code>npx @oliyg/juejinxiaoce</code> 按照提示输入用户名密码以及小册 ID 当提示 all done 完成</p>\n<pre class=\"prettyprint\"><code>➜  Desktop npx @oliyg&#x2F;juejinxiaoce\nnpx: 98 安装成功，用时 10.748 秒\nemail: 输入你的用户名密码\npassword: 输入你的用户名密码\nbookId: 小册 ID\n===navagating to main page\n===login...\n===getting book section list\n===getting book HTML content\n面试常用技巧\n===writing html...\n===getting book HTML content\n===write html file success\n===writing markdown...\n===write markdown file success\n前方的路，让我们结伴同行\n===writing html...\n===write html file success\n===writing markdown...\n===write markdown file success\n\n======\nAll Done...Enjoy.\n======\n</code></pre><p>在执行命令的这个目录中可以找到一个名为 md xxx 的文件夹，内包含 md 文档；在上面这个例子中，我们在 Desktop 桌面目录执行命令，因此在桌面目录中会生成这个文件夹：</p>\n<pre class=\"prettyprint language-shell\"><code>➜  md 1548483715543 ls -al\ntotal 40\ndrwxr-xr-x  4 oli  staff   128  1 26 14:22 .\ndrwx------+ 9 oli  staff   288  1 26 14:21 ..\n-rw-r--r--  1 oli  staff  4915  1 26 14:21 面试常用技巧.md\n-rw-r--r--  1 oli  staff  8465  1 26 14:22 前方的路，让我们结伴同行.md\n</code></pre><h3>方法二：npm i 命令</h3>\n<p>使用 <code>npm i -g</code> 安装，并使用 <code>juejinxiaoce</code> 命令执行：</p>\n<pre class=\"prettyprint\"><code>➜  Desktop npm i -g @oliyg&#x2F;juejinxiaoce\n&#x2F;Users&#x2F;oli&#x2F;.nvm&#x2F;versions&#x2F;node&#x2F;v8.12.0&#x2F;bin&#x2F;juejinxiaoce -&gt; &#x2F;Users&#x2F;oli&#x2F;.nvm&#x2F;versions&#x2F;node&#x2F;v8.12.0&#x2F;lib&#x2F;node_modules&#x2F;@oliyg&#x2F;juejinxiaoce&#x2F;bin&#x2F;juejinxiaoce\n+ @oliyg&#x2F;juejinxiaoce@2.2.1\nadded 98 packages from 201 contributors in 5.89s\n➜  Desktop juejinxiaoce\nemail:\npassword:\nbookId:\n===navagating to main page\n===login...\n...\n...\n</code></pre><blockquote>\n<p>小册ID见 URL 链接：</p>\n<p><img src=\"https://i.loli.net/2019/01/20/5c4499929e48e.png\" alt=\"20190120235353.png\"></p>\n</blockquote>\n<p>执行后等待出现消息 <code>all done. enjoy.</code> 完成转换，效果如下：</p>\n<p><img src=\"https://i.loli.net/2019/01/21/5c449ca8d869e.png\" alt=\"20190121000703.png\"></p>\n<p><img src=\"https://i.loli.net/2019/01/21/5c449cb443d62.png\" alt=\"20190121000715.png\"></p>\n<h2>更新日志</h2>\n<ul>\n<li>v2.2.0 增加命令行模式</li>\n<li>v2.0.0 使用 node 原生 https 模块，发送请求数据获取内容，不需要安装 chromium，没有软件权限问题</li>\n<li>v1.1.2 使用谷歌 puppeteer 作为无头浏览器获取内容，需要安装 chromium，macOS 中可能有权限问题</li>\n</ul>\n<h2>常见问题</h2>\n<ul>\n<li>v1.1.2\n<ul>\n<li>报错：spawn EACCES\n<ul>\n<li>常见于 macOS，请保证 chromium 已被正常安装</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>免责</h2>\n<ul>\n<li>不提供用户名和密码，需使用用户自己的账号密码登录</li>\n<li>仅作为技术讨论，学习和研究使用</li>\n</ul>\n<h2>隐私</h2>\n<ul>\n<li>该项目不会存储和发送任何用户隐私数据</li>\n</ul>\n<h2>License</h2>\n<p>The MIT License (MIT)\nCopyright © 2019 OliverYoung</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>","title":"🔥 掘金小册 markdown 转换器","last_reply_at":"2019-01-26T15:45:53.744Z","good":false,"top":false,"reply_count":2,"visit_count":451,"create_at":"2019-01-22T15:30:51.806Z","author":{"loginname":"oliyg","avatar_url":"https://avatars1.githubusercontent.com/u/19631785?v=4&s=120"}},{"id":"5c4a82dcf9075c1ef7137f6e","author_id":"5875bd3d06fa6e2a4e4f730b","tab":"share","content":"<div class=\"markdown-text\"><p>deno原本在我不被重视技术列表中，但在github的年度开源star榜单上，斩获年度第四。让我不得不思考为什么deno能广受好评，我想我需要刨开deno看看了。</p>\n<h1>编译</h1>\n<p>为什么不能直接解刨，呃。。。这和我的习惯有关系，我喜欢先编译，并一步一步调试，毕竟源码是不可能骗人的，再加上我喜欢魔改的臭习惯。废话不多说，开搞。</p>\n<p><code>本次编译在mac上进行，其他系统可能不是很适应</code></p>\n<p>步骤如下：</p>\n<ol>\n<li>安装rust，并注意安装nightly的rust。</li>\n</ol>\n<ul>\n<li>为什么要安装nightly的rust？\n<ul>\n<li>这个原因可以说是作者比较激进，有很多地方使用了实验性特性，导致有些地方编译的时候正式版的特性还不足以支持。在这点基础上，我认为作者也是将deno定位激进的先进产品，或许这点我不敢苟同。。。</li>\n</ul>\n</li>\n</ul>\n<p>安装rust，并用rust的版本控制器使用rustup切换到nightly。</p>\n<p>注: rustup可以理解为node的nvm。</p>\n<p>命令如下：</p>\n<pre class=\"prettyprint language-sh\"><code>curl https:&#x2F;&#x2F;sh.rustup.rs -sSf | sh\nrustup install nightly\nrustup default nightly\n</code></pre><ol>\n<li>安装Xcode打开，同意一下各种不平等条款，再打开运行一下，并切换到当前的Xcode版本。</li>\n</ol>\n<p>命令如下：</p>\n<pre class=\"prettyprint language-sh\"><code>sudo xcode-select -s &#x2F;Applications&#x2F;Xcode.app\n</code></pre><ol>\n<li>准备工作基本完成了，接下来需要克隆仓库了</li>\n</ol>\n<p><code>注意</code>：这里必须使用–recurse-submodules参数，原因是deno将多个仓库作为了子模块进行开发，包括deno_std和third_party等等。</p>\n<pre class=\"prettyprint language-sh\"><code>git clone --recurse-submodules https:&#x2F;&#x2F;github.com&#x2F;denoland&#x2F;deno.git\n</code></pre><ol>\n<li>使用工具安装第三方依赖</li>\n</ol>\n<p>感觉这一步就是单纯实现的懒人神器功能。</p>\n<p><code>注意</code>:这里必须开启终端翻墙，否则会失败，因为这里会同步谷歌源代码管理中心的数据，包括v8的同步，很重要！</p>\n<pre class=\"prettyprint language-sh\"><code>cd deno\n.&#x2F;tools&#x2F;setup.py\n</code></pre><ol>\n<li>编译</li>\n</ol>\n<p>编译就是漫长的等待了</p>\n<pre class=\"prettyprint language-sh\"><code>cd deno\n.&#x2F;tools&#x2F;build.py # 如果要构建release，请DENO_BUILD_MODE=release\n</code></pre><p>直到输出:</p>\n<pre class=\"prettyprint\"><code>ninja: Entering directory &#96;&#x2F;xxx&#x2F;xxx&#x2F;deno&#x2F;target&#x2F;debug&#x27;\n</code></pre><p>到这里就成功了，你可以直接在/xxx/xxx/deno/target/debug中运行一下</p>\n<pre class=\"prettyprint language-sh\"><code>cd deno\ncd .&#x2F;target&#x2F;debug \n.&#x2F;deno #如果出现REPL交互就成功了\n</code></pre><h1>目录解析</h1>\n<pre class=\"prettyprint language-sh\"><code>&#x2F;build # 存储v8构建的配置，最后软链到&#x2F;third_party&#x2F;v8的目录中\n&#x2F;build_extra # 存储一些deno的构建配置\n&#x2F;buildtools # 顾名思义，一些构建工具，最后软链到&#x2F;third_party&#x2F;v8的目录中\n&#x2F;js # 这就是一些用js写的一些源码，这点和node的js部分有点像，只不过改成用ts写了\n&#x2F;libdeno #  我认为这是一个桥接v8和rust的适配器代码\n&#x2F;node_modules # 给&#x2F;js文件夹装的一些依赖，软链到&#x2F;third_party的目录中\n&#x2F;prebuilt # 因为切换到gn了，所以需要一些是否构建的检查，顾名思义，预构建的一些文件，都是自己生成的\n&#x2F;src # rust代码。像fs，http都在这里实现，就是实现一些浏览干不了的事情\n&#x2F;target # 编译后的文件，分debug和release，玩过rust的就知道，编译release比较久，因为编译器要做代码折叠\n&#x2F;testing # v8的测试用例，软链到&#x2F;third_party&#x2F;v8的目录中\n&#x2F;test # deno的测试用例\n&#x2F;third_party # 第三方依赖如flatbuffers和v8等等\n&#x2F;tools #各种杂七杂八的脚本，比如用于构建代码和检查代码格式等等。\n&#x2F;website #deno的官方网站\n</code></pre><p>针对目录解析，可能大家会有几个问题：</p>\n<ul>\n<li>问题1:为什么要一个libdeno做rust的桥接器？\n<ul>\n<li>因为V8是C++写的，同时V8很多自己的结构，那么你要rust要较好的使用，你就必须写一个桥接器来让rust和V8能购相互调用。</li>\n</ul>\n</li>\n<li>问题2:为什么要用rust而不像node一样，直接在v8上累代码？\n<ul>\n<li>因为这样可以减少对V8的依赖，比如V8底层一变，上层就需要大变，这样对运行时开发者来说无疑是心智负担。</li>\n</ul>\n</li>\n<li>问题3:那么这样做deno对我们什么好处呢？\n<ul>\n<li>对于普通开发者：1.deno其实设计就是想趋于浏览器，那么比如像node的require这种全局变量本身其实就不应该存在的，因为浏览器中没有这样的全局变量，且这种全局变量还会造成很大的安全问题，所以要解决这个问题，但又要可以操作文件和http等操作，解决途径就是不暴露这样的全局变量，将deno做为一个import可以引进来的库，这样既可以和浏览器趋同，又不会暴露全局。2.抹平了大部分和浏览器的区别，比如相同代码在浏览器和运行时的结果不同，同时更加兼容，移植JS更加方便。</li>\n<li>对于运行时开发者：1.抛弃了gyp使用了gn，改一行代码再也不用全量编译了。2.V8引擎的修改，再也不需要牵一发而动全身了。3.一句话总结就是降低了开发者的心智负担。</li>\n</ul>\n</li>\n</ul>\n<h1>结语</h1>\n<p>这篇文章作为deno的先导篇，有机会还会在写，但不保证这不是最后一篇。deno确实有很多优势，这也让我改变了一些对它的评价，但作为一个划时代的产品，我认为多少还是差了一点意思，只能说期待deno更亮眼的功能吧。</p>\n<p>重点:deno是可以运行js的！deno是可以运行js的！deno是可以运行js的！重要的事情说三遍。所以完全不用担心deno会抢node饭碗，如果是普通开发者，学习deno的成本，本人认为和学习一个库的成本差不多，所以不用过度担心，且deno在生产环境溜一溜的结果也未可知，等待deno什么时候GA，期待deno在生产环境的结果吧。</p>\n</div>","title":"编译deno，deno结构解析","last_reply_at":"2019-01-26T13:46:46.264Z","good":false,"top":false,"reply_count":5,"visit_count":418,"create_at":"2019-01-25T03:30:36.539Z","author":{"loginname":"zy445566","avatar_url":"https://avatars2.githubusercontent.com/u/14976489?v=4&s=120"}},{"id":"5b923a504cdb88f72f5a916a","author_id":"5875bd3d06fa6e2a4e4f730b","tab":"share","content":"<div class=\"markdown-text\"><p>上一篇文章 <a href=\"https://github.com/zy445566/myBlog/tree/master/20180825llvm/20180825jsvm_c\">利用LLVM实现JS的编译器，创造属于自己的语言</a> 中讲到使用llvm用C实现JS编译器，本片文章将使用JS来实现JS编译器，还是应了《Atwood定律》能够使用JavaScript实现的，必将使用JavaScript实现。本片文章C代码不超过10行，即使完全不会C也可以相对容易的阅读。</p>\n<blockquote>\n<p>本文代码仓库地址:<a href=\"https://github.com/zy445566/myBlog/tree/master/20180825llvm/20180908jsvm_js\">点这里</a></p>\n</blockquote>\n<h1>本次使用npm库</h1>\n<h2><a href=\"/user/babel\">@babel</a>/core</h2>\n<p>直接使用<a href=\"/user/babel\">@babel</a>/core来进行词法分析和生成ast。</p>\n<h2>llvm-node</h2>\n<p>使用本库将ast树绑定生成IR(中间代码)和编译成二进制文件，虽然这个库看起来没什么文档，但好用api基本写在了llvm-node.d.ts里面。题外话：讲真我挺喜欢用ts写的库，但我个人不喜欢写ts，当然这并不矛盾。</p>\n<h1>使用<a href=\"/user/babel\">@babel</a>/core进行解析</h1>\n<p>讲真这个挺好用的，解析JS就几行代码就能生成ast,爽歪歪，具体结构不展开，自己可以尝试一下。代码也就几行，应该一看就明白了。</p>\n<pre class=\"prettyprint language-js\"><code>&#x2F;&#x2F;parse.js\nconst babel_core = require(&#x27;[@babel](&#x2F;user&#x2F;babel)&#x2F;core&#x27;);\nconst fs  = require(&#x27;fs&#x27;);\nmodule.exports = function (js_path){\n    let js_conent = fs.readFileSync(js_path);\n    let js_ast = babel_core.parse(js_conent);\n    return js_ast;\n}\n</code></pre><h1>将解析的的AST绑定IR，实现编译器</h1>\n<h2>语法解析开始，针对不通的类型进入不通的入口进行解析</h2>\n<pre class=\"prettyprint language-js\"><code>&#x2F;&#x2F;jsvm.js\nclass JSVM{\n...\n    handler(node,parent_node = null) {\n        switch(node.type) {\n            case &#x27;Program&#x27;: &#x2F;&#x2F; 这是主程序入口\n                return this.programHandler(node);\n            case &#x27;FunctionDeclaration&#x27;: &#x2F;&#x2F; 当是方法的类型走这里\n                return this.functionHandler(node);\n            case &#x27;BlockStatement&#x27;: &#x2F;&#x2F; 代码块类型走这里\n                return this.blockHandler(node);\n            case &#x27;IfStatement&#x27;: &#x2F;&#x2F; IF块类型走这里\n                return this.ifHandler(node);\n            case &#x27;BinaryExpression&#x27;: &#x2F;&#x2F; 二进制表达式类型走这里\n                return this.binaryHandler(node);\n            case &#x27;ReturnStatement&#x27;: &#x2F;&#x2F; 解析返回\n                return this.returnHandler(node);\n            case &#x27;Identifier&#x27;: &#x2F;&#x2F; 变量或函数调用，需要通过父节点判断，所以传入\n                return this.identifierHandler(node,parent_node);\n            case &#x27;NumericLiteral&#x27;: &#x2F;&#x2F;数字类型走这\n                return this.numberHandler(node);\n            case &#x27;StringLiteral&#x27;: &#x2F;&#x2F;文本类型走这\n                return this.stringHandler(node);\n            case &#x27;CallExpression&#x27;: &#x2F;&#x2F; 函数调用走着\n                return this.callHandler(node);\n            case &#x27;ExpressionStatement&#x27;: &#x2F;&#x2F; 表达式类型走这\n                return this.expressionHandler(node);\n            default: &#x2F;&#x2F; 目前不支持的类型直接抛错\n                throw new Error(&#x27;not support grammar type&#x27;);\n        }\n    }\n    &#x2F;&#x2F; 入口文件\n    gen() {\n        &#x2F;&#x2F; 初始化变量和方法包括C扩展\n        this.init();\n        &#x2F;&#x2F; 将ast进行解析和绑定\n        this.handler(this.js_ast.program);\n    }\n    &#x2F;&#x2F; 对程序主题不断解析下一个语法节点就好\n    programHandler(node) {\n        for(let i=0;i&lt;node.body.length;i++)\n        {\n            this.handler(node.body[i]);\n        }\n    }\n...    \n}\n</code></pre><h2>以函数绑定举例</h2>\n<pre class=\"prettyprint language-js\"><code>&#x2F;&#x2F;jsvm.js\n    functionHandler(node) {\n        &#x2F;&#x2F; 拿到函数节点的函数名\n        let func_name = node.id.name;\n        &#x2F;&#x2F; 判断模块中函数是否存在\n        the_function = the_module.getFunction(func_name);\n        if (the_function) {\n           throw new Error(&#x27;function is exist&#x27;);\n        }\n        &#x2F;&#x2F; 设置返回值，目前先定死为double类型\n        let double_type = llvm.Type.getDoubleTy(the_context);\n        &#x2F;&#x2F; 设置参数，目前先定死为double类型\n        let params_list = [];\n        for(let i=0;i&lt;node.params.length;i++)\n        {\n            params_list.push(double_type);\n        }\n        &#x2F;&#x2F; 把参数注入，生成函数类型\n        let the_function_type = llvm.FunctionType.get(\n            double_type,params_list,false\n        );\n        &#x2F;&#x2F; 创造出一个函数\n        the_function = llvm.Function.create(\n            the_function_type,\n            llvm.LinkageTypes.ExternalLinkage,\n            func_name,the_module\n        );\n        &#x2F;&#x2F; 将参数的名称插入\n        let the_args = the_function.getArguments();\n        for(let i=0;i&lt;the_args.length;i++)\n        {\n            the_args[i].name=node.params[i].name;\n        }\n        &#x2F;&#x2F; 创建函数主运行节点\n        let basic_block = llvm.BasicBlock.create(the_context,&quot;entry&quot;,the_function);\n        &#x2F;&#x2F; 设置代码插入位置，这个basic_block就是entry节点\n        builder.setInsertionPoint(basic_block);\n        &#x2F;&#x2F; 这里是为了注册变量，使得在函数作用域内变量可用\n        variable_map = {};\n        for(let i=0;i&lt;the_args.length;i++)\n        {\n            variable_map[the_args[i].name]=the_args[i];\n        }\n        &#x2F;&#x2F; 判断函数是否是块表达式，不是则踢出\n        if (node.body.type!=&#x27;BlockStatement&#x27;)\n        {\n            throw new Error(&#x27;function body only support BlockStatement&#x27;);\n        }\n        &#x2F;&#x2F; 调用解析块表达式的方法\n        this.blockHandler(node.body);\n        &#x2F;&#x2F; 校验函数是否正确，不正确这个函数会直接报错\n        llvm.verifyFunction(the_function);\n        return the_function;\n    }\n</code></pre><h2>块表达式解析的实现</h2>\n<p>其实这异步就是遍历节点进行解析，是不是很简单</p>\n<pre class=\"prettyprint language-js\"><code>&#x2F;&#x2F;jsvm.js\n    blockHandler(node)\n    {\n        let expr_list = [];\n        for(let i=0;i&lt;node.body.length;i++)\n        {\n            expr_list.push(this.handler(node.body[i]));\n        }\n        return expr_list;\n    }\n</code></pre><h2>以IF的解析实现来讲代码块的跳跃</h2>\n<pre class=\"prettyprint language-js\"><code>&#x2F;&#x2F;jsvm.js\n    ifHandler(node) {\n        &#x2F;&#x2F;判断条件的类型是否是二进制表达式\n        if (node.test.type!=&#x27;BinaryExpression&#x27;) {\n            throw new Error(&#x27;if conds only support binary expression&#x27;);\n        }\n        &#x2F;&#x2F; 解析二进制表达式作为条件\n        let cond = this.binaryHandler(node.test);\n        &#x2F;&#x2F; 生成数字0\n        let zero = llvm.ConstantFP.get(the_context,0);\n        &#x2F;&#x2F; 如果cond不是bool类型的指，将它转换为bool类型的值\n        let cond_v = builder.createFCmpONE(cond,zero,&quot;ifcond&quot;);\n        &#x2F;&#x2F; 创建then和else和ifcont代码块，实际就是代码块标签\n        let then_bb = llvm.BasicBlock.create(the_context,&quot;then&quot;,the_function);\n        let else_bb = llvm.BasicBlock.create(the_context,&quot;else&quot;,the_function);\n        let phi_bb = llvm.BasicBlock.create(the_context, &quot;ifcont&quot;,the_function);\n        &#x2F;&#x2F; 创造条件判断\n        &#x2F;&#x2F; 如果cond_v是真就跳跃到then_bb代码块，否则跳跃到else_bb代码块\n        builder.createCondBr(cond_v,then_bb,else_bb);\n        &#x2F;&#x2F; 设定往then_bb代码块写入内容\n        builder.setInsertionPoint(then_bb);\n        if (!node.consequent) {throw new Error(&#x27;then not extist&#x27;);}\n        if (node.consequent.type!=&#x27;BlockStatement&#x27;)\n        {\n            throw new Error(&#x27;then body only support BlockStatement&#x27;);\n        }\n        &#x2F;&#x2F; 解析代码块\n        let then_value_list = this.blockHandler(node.consequent);\n        &#x2F;&#x2F; 如果代码块没内容就就跳跃到phi_bb代码块\n        if (then_value_list.length==0)\n        {\n            builder.createBr(phi_bb);\n        }\n        &#x2F;&#x2F; 设定往else_bb代码块写入内容，和then_else差不多\n        &#x2F;&#x2F; 不同点：else允许没有\n        builder.setInsertionPoint(else_bb);\n        let else_value_list =  [];\n        if (node.alternate) {\n            if (node.alternate.type!=&#x27;BlockStatement&#x27;)\n            {\n                throw new Error(&#x27;else body only support BlockStatement&#x27;);\n            }\n            else_value_list = this.blockHandler(node.alternate);\n        }\n        if (else_value_list.length==0)\n        {\n            builder.createBr(phi_bb);\n        }\n        &#x2F;&#x2F; 因为无论是then或else如果不中断一定会往phi_bb代码块\n        &#x2F;&#x2F; 所以后续的代码直接在phi_bb里面写就好\n        builder.setInsertionPoint(phi_bb);\n    }\n</code></pre><h1>支持C扩展的实现</h1>\n<p>首先先定义存在值</p>\n<pre class=\"prettyprint language-js\"><code>&#x2F;&#x2F;jsvm.js\n    &#x2F;&#x2F; 定义一个C函数printDouble用于打印二进制变量\n    getPrintDouble()\n    {\n        &#x2F;&#x2F; 获取返回值类型\n        let double_type = llvm.Type.getDoubleTy(the_context)\n        &#x2F;&#x2F; 设置参数列表\n        let params_list = [double_type];\n        &#x2F;&#x2F; 获取函数类型\n        let the_function_type = llvm.FunctionType.get(\n            double_type,params_list,false\n        );\n        &#x2F;&#x2F; 创建函数定义\n        the_function = llvm.Function.create(\n            the_function_type,\n            llvm.LinkageTypes.ExternalLinkage,\n            &#x27;printDouble&#x27;,the_module\n        );\n        &#x2F;&#x2F; 设置参数名称\n        let the_args = the_function.getArguments();\n        the_args[0].name = &quot;double_name&quot;;\n        return the_function;\n    }\n    &#x2F;&#x2F; 初始化方法值讲需要预置的方法放入\n    init()\n    {\n        init_function_map.printDouble = this.getPrintDouble();\n    }\n</code></pre><p>C代码的实现printDouble方法</p>\n<pre class=\"prettyprint language-cpp\"><code>&#x2F;&#x2F; printDouble.cpp\n#include &lt;stdio.h&gt;\n&#x2F;&#x2F; 问什么要要加extern &quot;C&quot; ,因为c++编译的时候会自动进行函数签名\n&#x2F;&#x2F; 如果没有extern &quot;C&quot; ,汇编里的方法名就会是Z11printDoubled\n&#x2F;&#x2F; 其中签名前部分由返回值和命名空间名字中间是方法名，后面是参数缩写\nextern &quot;C&quot; {\n    &#x2F;&#x2F; 设定返回值和参数都是double类型\n    double printDouble(double double_num) {\n        &#x2F;&#x2F; 打印double类型\n        printf(&quot;double_num is: %f\\r\\n&quot;,double_num);\n        &#x2F;&#x2F; 返回double类型\n        return double_num;\n    }\n}\n</code></pre><h1>看看实现效果</h1>\n<p>要被编译的代码</p>\n<pre class=\"prettyprint language-js\"><code>&#x2F;&#x2F; fibo.js 这是斐波纳切数\nfunction fibo(num) {\n    if (num&lt;=2) {return 1;}\n    return fibo(num-1)+fibo(num-2);\n}\n&#x2F;&#x2F; 讲main作为主函数运行\nfunction main()\n{\n    return printDouble(fibo(9));\n}\n</code></pre><p>开始编译,并生成中间代码和bitcode代码，如下</p>\n<pre class=\"prettyprint language-sh\"><code># index.js是编译器入口，fibo.js是要被编译的函数\nnode index.js fibo.js\n</code></pre><p><img src=\"//static.cnodejs.org/FkVgq9TOD06MjNOPQtUi2GyW6jG5\" alt=\"tobc.png\">\n将bitcode代码生成汇编代码</p>\n<pre class=\"prettyprint language-sh\"><code>llc fibo.js.bc -o fibo.s\n</code></pre><p>将汇编代码和我们要注入的C代码一起编译</p>\n<blockquote>\n<p>当然除了C只要能被gcc编译成汇编的也都支持作为扩展语言,本文举例C代码容易让人理解</p>\n</blockquote>\n<pre class=\"prettyprint language-sh\"><code>gcc printDouble.cpp fibo.s -o fibo\n</code></pre><p>最后运行看看</p>\n<pre class=\"prettyprint language-sh\"><code>.&#x2F;fibo\n</code></pre><p><img src=\"//static.cnodejs.org/Fm9Qwp34myfupadRGObeivt_Kcag\" alt=\"run.png\"></p>\n<h1>总结</h1>\n<p>这次实现是用纯JS就能实现，如果后续这个JSVM能编译覆盖所有的编译器自身所有的代码功能，理论上来说可以用JSVM编译JSVM实现自举，当然这个是一个浩大的工程，方法是有了缺的只是时间而已。</p>\n</div>","title":"使用JS实现JS编译器，并将目标js生成二进制","last_reply_at":"2019-01-26T11:41:21.533Z","good":true,"top":false,"reply_count":19,"visit_count":2506,"create_at":"2018-09-07T08:44:00.128Z","author":{"loginname":"zy445566","avatar_url":"https://avatars2.githubusercontent.com/u/14976489?v=4&s=120"}},{"id":"56e664efd62bdb576d051d1c","author_id":"568c81e73b33070b662708e0","tab":"share","content":"<div class=\"markdown-text\"><hr>\n<p>本文转载自 朱英达的个人网站，转载本文请注明出处。\n<a href=\"https://www.zhuyingda.com/blog/b6.html?origin=cnode\">原文地址</a></p>\n<hr>\n<p>除了XSS和CSRF之外，还有一个被称为ClickJacking的web安全漏洞常常被大家遗忘，但绝对不能忽略。\nClickJacking翻译过来叫做点击劫持，或者界面劫持。\n这个漏洞能够执行的关键在于html4.01提供的iframe标签，通过它web开发者可以实现页中页这样的东西。\n最初在道哥的那本《白帽子讲Web安全》里看到的了这个漏洞，要么是道哥在写这本书时故意想留一手，要么是我的阅读理解能力差，总之当时我还真就是不以为然的，为什么呢？\n利用透明的iframe去做一些文章对于web开发者来说根本不算什么难事，而如果已经把自己的iframe植入到别人的页面中去了，那我为什么不xss呢？\n突然有一天，我真正理解了这个漏洞真实的应用场景：我们真正要做的，并不是把自己的页面放到iframe里嵌入别人的页面，而是要把别人的页面利用iframe嵌入到自己的网站页面中来，再通过UI上面的欺骗，诱使用户“做他原本不想做的事情”。怎么样，细思极恐吧？</p>\n<p>下面展示一个具体的示例进行进一步说明：\n<img src=\"//static.cnodejs.org/FuBJK7IlHzSgwpiVJN4ngcshpMwe\" alt=\"1.jpg\">\n如上图所示，我构造了这样一个页面，这个页面可以放在我们自己的网站上，在其中插入一个iframe，嵌入了一个qq安全中心的页面，为了方便观察，我把iframe的透明度设置为0.5。\n由于iframe被设置了绝对定位而且其z-index值高于静态文档流，所以用户的所有click都会被这个iframe捕获，而透过iframe用户看到的是底下的DOM，红色的按钮上面写着“点我”，对用户起到诱导作用。\n当用户像往常一样点击红色的按钮时，他实际点到的是这个iframe中的DOM，这会触发qq安全中心页面当中的相应逻辑。\n如果把红色的按钮换成一张美女图片，这个漏洞对用户的诱导性将会很强。\n如果把iframe的透明度调到0，像这样：\n<img src=\"//static.cnodejs.org/FgLjDLsVAaB5pnkauL6R60IN3cPJ\" alt=\"2.jpg\"></p>\n<p>用户将会完全察觉不到在iframe这个页中页里面发生的任何事情，不知不觉中就踏入了黑客所精心构造的陷阱之中。\n我曾经在很多网站看到过这样的业务逻辑：根据用户的cookie识别登录状态，对于已登陆的用户，允许其通过点击一个按钮快速的冻结自己的账户，甚至修改自己的密码。\n事实上，把这个漏洞的危害说大一点，黑客不仅可以劫持用户的鼠标点击，还可以劫持移动端WAP页面的各种手势，甚至是通过一系列诱导，引导用户键盘输入黑客想让用户输入的东西。\n这样的页面如果遭到黑客点击劫持，后果将会不堪设想。</p>\n<p>我们不知道会不会有人构造这样一个外层页面包裹我们自己的网站页面去进行界面劫持，那么我们应当如何进行防御呢？\n主要有两种办法：\n1.在页面的http头里加入“X-FRAME-OPTIONS”，将其值设为“DENY”即可阻止任何其他页面对当前页面在iframe中进行加载，此http属性支持IE8+浏览器。\n<img src=\"//static.cnodejs.org/FqZ6c6_GJCR1BGsJsuNUNcxTRvKR\" alt=\"3.jpg\">\n上面这段代码是Node.js的express框架中对页面的http头设置，以此可以实现，在其他页面中以iframe的方式加载此页面会被浏览器拦截：\n<img src=\"//static.cnodejs.org/FnEJJscKNJxNKobvInnS0RYBws3e\" alt=\"4.jpg\"></p>\n<p>2.通过javascript在页面中进行一些逻辑判断，具体的做法是这样：\n<img src=\"//static.cnodejs.org/FtdV9ijCAmk43rPMNQmqh6saEXkC\" alt=\"5.jpg\">\n把上面这段代码放到页面的head中，在加载时做预先判断。主要思路是，先把页面的body藏起来，判断此时页面并没有被嵌套在一个iframe时，再把body显示出来。</p>\n<p>对于点击劫持，网上还有很多js实现的防御判断，但由于年代久远和水平良莠不齐，很多判断可以通过多层嵌套iframe的方式将其绕过。\n以上总结的两条，亲测有效。\n此文章中涉及到的ClickJack相关代码都在我的开源项目<a href=\"https://github.com/zhuyingda/veneno\">veneno</a>中保存，此项目专注于web安全方面的所有攻击和防御行为进行实践，有兴趣可以看一下。</p>\n<hr>\n<p>本文转载自 朱英达的个人网站，转载本文请注明出处。\n<a href=\"https://www.zhuyingda.com/blog/b6.html?origin=cnode\">原文地址</a></p>\n<hr>\n</div>","title":"一个比较冷门但却不容小视的漏洞——ClickJacking","last_reply_at":"2019-01-26T06:50:05.913Z","good":true,"top":false,"reply_count":15,"visit_count":8856,"create_at":"2016-03-14T07:14:55.088Z","author":{"loginname":"zhuyingda","avatar_url":"https://avatars1.githubusercontent.com/u/9526467?v=4&s=120"}},{"id":"5c4bd4b0f9075c1ef7138406","author_id":"5c4bd2c9f9075c1ef71383f9","tab":"ask","content":"<div class=\"markdown-text\"><p>最近实习遇到个问题一直解决不了想请教一下大家。我们项目用的 koa 做中间层，然后有个下载文件的功能，后台返回的是个 zip 包的文件字节流。在网上找的全都是静态资源服务器的上传下载，没有找到如何处理接收到的字节流然后返回给前台这种情况，所以不太清楚怎么做，想请教一下大家，还有下载的时候返回一个地址和返回文件流这两种方式分别适合在什么场景下使用\n<img src=\"//static.cnodejs.org/Fkt0c2clXQNS7Pa8ie6_IDdvOcNY\" alt=\"image.png\"></p>\n</div>","title":"请教个 node 下载文件流的问题","last_reply_at":"2019-01-26T05:47:54.434Z","good":false,"top":false,"reply_count":1,"visit_count":187,"create_at":"2019-01-26T03:32:00.168Z","author":{"loginname":"zhang6223284","avatar_url":"https://avatars0.githubusercontent.com/u/23720937?v=4&s=120"}},{"id":"5b7f8a2c944cb8340c27e335","author_id":"5b72f6727271129a2f32a97f","tab":"share","content":"<div class=\"markdown-text\"><p>2018年Nodejs Koa2 Typescript Eggjs Vue2最新教程资源网盘分享：\n<a href=\"https://pan.baidu.com/s/1O2C6TolDzYpMnKIfQaaqog\">Nodejs视频教程</a>\n<a href=\"https://pan.baidu.com/s/1KNaA97kGwNhavch5rP_G7w\">Koa2教程</a>\n<a href=\"https://pan.baidu.com/s/17jllW0igIOWjM3YCvWS-bg\">6月Typescript教程</a>\n<a href=\"https://pan.baidu.com/s/1a8-RY-aBm3YkH2ZqJKmztg\">8月Eggjs视频教程</a>\n需要更多学习资源可留下邮箱，有的就分享</p>\n</div>","title":"2018年Nodejs Koa2 Typescript Eggjs Vue2最新教程资源网盘分享","last_reply_at":"2019-01-26T02:50:26.226Z","good":false,"top":false,"reply_count":37,"visit_count":5318,"create_at":"2018-08-24T04:31:40.973Z","author":{"loginname":"chengl123","avatar_url":"https://avatars3.githubusercontent.com/u/42384077?v=4&s=120"}},{"id":"5c4a686b595cbd1e95088358","author_id":"5c47daf86955112b99437e57","tab":"share","content":"<div class=\"markdown-text\"><p><a href=\"http://uyi2.com\">免费下载</a>\n<img src=\"//static.cnodejs.org/FoexEDukmR_JaxycM11UlIiCtBWX\" alt=\"ue2.png\">\n<a href=\"http://uyi2.com/yunso\">资源搜索</a>\n<img src=\"//static.cnodejs.org/Fo3Pgj-d13M4tFRlcCR2M3G6tHT4\" alt=\"yunso.png\">\n<a href=\"http://uyi2.com\">电子书</a>\n<img src=\"//static.cnodejs.org/FiHNpJ7tLsGGDjmC-Qy9apPtPqpC\" alt=\"dianzishu.png\"></p>\n</div>","title":"nodejs免费电子书+免费视频教程+免费原创作品下载","last_reply_at":"2019-01-25T18:08:39.567Z","good":false,"top":false,"reply_count":1,"visit_count":343,"create_at":"2019-01-25T01:37:47.629Z","author":{"loginname":"xiaozhimn","avatar_url":"https://avatars1.githubusercontent.com/u/4102025?v=4&s=120"}},{"id":"5c3700673898674067a7da2c","author_id":"4efc278625fa69ac6900038f","tab":"share","content":"<div class=\"markdown-text\"><p><img src=\"https://img.alicdn.com/tfs/TB1AruuBjTpK1RjSZKPXXa3UpXa-1890-566.png\" alt=\"main\"></p>\n<p>双旦已过，新年将至，midwayJs 向大家献上贺礼，首先奉上地址: <a href=\"https://github.com/midwayjs/midway/\">https://github.com/midwayjs/midway/</a>，欢迎 star ✨✨✨。</p>\n<p>之前我们向社区开放了我们的治理工具，也就是 Pandora.js 工具包，用于整个 Node.js 应用的监控和治理，我们承诺这不是结束，只是开源的开始。</p>\n<p>随着内部全栈应用数的越来越多，以及阿里业务不断提升的复杂度，比如店铺，搭建以及渲染等服务，随着人员的不断调动，产品的结构，代码的层级都随着不断的调整，我们急需一个能降低代码复杂度的解决方案，帮助我们渡过人员寒冬，这就对我们内部的基础架构体系提出了不同的要求。</p>\n<p>以往我们只需要让用户启动服务器，满足 RPC/HTTP 服务即可，而在真正的全栈领域，似乎没有太多的钻研和沉淀。对此，我们将内部使用的 midway 整体解决方案进行了一次重塑，并且在设计之初就提出未来将对外进行开源。</p>\n<p>正巧我们的第一款 Typescript 产品 Pandora.js 开源完毕，给了我们将代码用 Typescript 重写的信心，也随着 Egg.js 社区的壮大，我们相信，在不同的领域中，一定会有不同的产品，不同的解决方案。</p>\n<p>Midway 正式基于这些考虑，将 IoC 引入到了框架中，同时学习了 NestJs ，引入了不少自定义的装饰器，增强开发体验，也将搭配团队的其他产品，Pandora.js 和 Sandbox，将 Node.js 的开发体验朝着全新的场景发展，让用户在开发过程中享受到前所未有的愉悦感。</p>\n<p>在这里感谢前期的 beta 测试中向我们提意见以及试用的同学，感谢大家的包容和支持，特别是 <a href=\"/user/ZQun\">@ZQun</a> 和 <a href=\"/user/yuu2lee4\">@yuu2lee4</a> 两位的积极参与。</p>\n<p><img src=\"https://img.alicdn.com/tfs/TB19dSLBXzqK1RjSZFvXXcB7VXa-771-85.png\" alt=\"image-20190109121917392\"></p>\n<p>下面来介绍新版本 midway 的一些特性。</p>\n<ul>\n<li>\n<p>基于 IoC 体系业务代码进行解耦，依赖统一管理统一初始化</p>\n</li>\n<li>\n<p>常见的 web 场景装饰器简化业务开发</p>\n</li>\n<li>\n<p>支持 Egg.js 的所有插件体系，框架装饰器统一编码风格</p>\n</li>\n<li>\n<p>基于 Typescript ，面向接口编程的编码体验</p>\n</li>\n</ul>\n<h2>依赖注入疑问</h2>\n<p>在一年前，我们的业务代码是重重耦合，到处初始化，实例重复，但这并不是业务同学在代码架构方面的问题，而是在不断的业务迭代，交接下，早就脱离了最初的设想，代码的设计跟不上需求的速度。</p>\n<p>为此，我们尝试引入了依赖注入的方案。依赖注入最早听到是在 Java 端的 spring 框架，在 JS 方面，最早我们使用了 XML 做为基础的 IoC 方案，虽然解决了不少耦合和初始化的问题，也发现前端在 XML 的感受吐槽颇多。</p>\n<p>去年 Typescript 的大力发展之后，内部的很多项目都切换了过来，经过我们的调研，除了 NestJs 进行了自研以及在 Typescript 领域比较出名的 Inversify 模块，似乎很少有现成的易于扩展的模块。</p>\n<p>基于这些情况，我们进行了这方面的自建，一方面方便内部的扩展，能更好的在现有的体系上扩展装饰器，请求作用域等，另一方面也可以提升本身的能力，方便后续迭代。</p>\n<p>我们产出了 <code>injection</code> 模块，作为我们整个框架的依赖注入基础。</p>\n<p>如今，<code>injection</code> 承载起了整个 midway 体系，它将框架代码，业务代码，插件等都组合到了一起，像一个纽带在这些之间传输数据。</p>\n<p><img src=\"https://img.alicdn.com/tfs/TB1AQmDBgDqK1RjSZSyXXaxEVXa-2730-556.png\" alt=\"dep_image\"></p>\n<p>通过依赖注入容器的管理，如上图非常复杂的应用也能良好的维护和运作。</p>\n<p>想看完整大图，可以点击<a href=\"https://img.alicdn.com/tfs/TB1Ha5JBgHqK1RjSZFgXXa7JXXa-5328-556.png\">这里</a>。</p>\n<h2>面向装饰器开发</h2>\n<p>得益于 Typescript 对 ES6 的良好支持，提供了一种为类声明和成员添加注释和元编程语法的方法。装饰器作为TypeScript的实验性功能能够让我们在开发中简化代码。虽然是语法糖，但是带来的好处却不少。</p>\n<p>我们拿一个简单的例子，从 Controller 一步步经过 Service/Manager 向数据库拿数据，在多层的架构体系下，以往的代码大概率需要 new 出不同的实例，并且需要绑定到路由层，这边为了方便理解，代码放到了一起。</p>\n<pre class=\"prettyprint language-typescript\"><code>export = (app) =&gt; {\n  const home = new HomeController();\n  app.get(&#x27;&#x2F;&#x27;, home.index);\n}\n\nclass HomeController extends Controller {\n\n  reportService: IReportService;\n\n  constructor() {\n    this.reportService = new ReportService();\n  }\n    \n  async index(ctx) {\n    ctx.body = await this.reportService.getReport();\n  }\n}\n\nclass ReportService implements IReportService {\n\n  reporter: IReportManager;\n  \n  constructor() {\n    this.reporter = new ReporterManager();\n  }\n\n\n  async getReport(id: number) {\n    return await this.reporter.get(id);\n  }\n}\n\nclass ReporterManager implements IReportManager {\n\n  db;\n\n  constructor() {\n    this.initDB();\n  }\n\n  initDB() {\n    &#x2F;&#x2F; open connection\n  }\n\n  async get() {\n    &#x2F;&#x2F; return data from db;\n  }\n}\n\n</code></pre><p>经过 IoC 相关的 <code>@provide</code> 和 <code>@inject</code>  装饰器修饰以及其他 web 层的装饰器修饰过后，不仅仅只是代码量的减少，业务的代码也不再有实例化的过程。以往还需要考虑在构造器中做异步的操作，比如初始化时需要做异步连接数据库，这个时候也不再需要考虑，直接使用 <code>@init</code> 装饰即可。</p>\n<p>至此，我们会更加专注于面向接口进行编程，抽象，将代码设计的时间更多的花在理解需求，解决问题上。</p>\n<pre class=\"prettyprint language-typescript\"><code>@provide()\n@controller()\nexport class HomeController {\n\n  @inject()\n  reportService: IReportService;\n  \n  @get(&#x27;&#x2F;&#x27;)\n  async index(ctx) {\n    ctx.body = await this.reportService.getReport();\n  }\n}\n\n@provide()\nclass ReportService implements IReportService {\n\n  @inject()\n  reporter: IReportManager;\n  \n  async getReport(id: number) {\n    return await this.reporter.get(id);\n  }\n}\n\n@provide()\nclass ReporterManager implements IReportManager {\n\n  @inject()\n  db;\n\n  @init()\n  initDB() {\n    &#x2F;&#x2F; open connection\n  }\n\n  async get() {\n    &#x2F;&#x2F; return data from db;\n  }\n}\n</code></pre><h2>入口能力</h2>\n<p>就像上面提到的 <code>@controller</code> 装饰器类似，针对入口型的代码，我们在框架层面扩展了其他装饰器，比如针对计划任务形式我们提供了 <code>@schedule</code> 装饰器，简化用户开发的代码量。</p>\n<pre class=\"prettyprint language-typescript\"><code>import { schedule } from &#x27;midway&#x27;;\n\n@schedule({\n  interval: 2333, &#x2F;&#x2F; 2.333s 间隔\n  type: &#x27;worker&#x27;, &#x2F;&#x2F; 指定某一个 worker 执行\n})\n\nexport class HelloCron {\n  &#x2F;&#x2F; 定时执行的具体任务\n  async exec(ctx) {\n    ctx.logger.info(process.pid, &#x27;hello&#x27;);\n  }\n}\n</code></pre><p>在下一版本中，我们将开放自定义装饰器的能力，方便更多场景的使用。</p>\n<h2>框架扩展</h2>\n<p>由于在大多数场景下，使用了装饰器已经依赖注入的写法，使得自己的业务代码，乃至三方的模块都能很好的融在一起，除了这些之外，有的同学会疑问，原本的插件，配置，上下文部分如何融入到这个体系，我们这就来解答。</p>\n<p>在原本熟悉的体系中，只要有 <code>app</code> , <code>ctx</code> 对象就无敌了，所有的东西都可以拿。而在 midway 中，为了和 web 层进行解耦，我们隐去了这些对象，只希望业务代码和 IoC 容器打交道。</p>\n<p>为此我们提供了 <code>@config</code> 和 <code>@plugin</code> 装饰器用于获取不同的方法，通过这样的形式和框架进行解耦，比如在任意代码中如下使用。</p>\n<pre class=\"prettyprint language-typescript\"><code>@provide()\nclass ReportService implements IReportService {\n\n  @config(&#x27;env&#x27;)\n  env;\n\n  @plugin(&#x27;httpclient&#x27;)\n  httpclient;\n\n  @inject()\n  reporter: IReportManager;\n  \n  async getReport(id: number) {\n    const rid = this.httpclient.request(&#x27;&#x2F;api&#x2F;&#x27; + id);\n    return await this.reporter.get(rid);\n  }\n}\n</code></pre><p>正是这样一点点的调整，我们将整个应用的代码风格保持了到了一致，不管代码几经易手，维护的同学也能快速上手，并且继续迭代下去。</p>\n<h2>最后</h2>\n<p>正向我们在 Pandora.js 发布时说的那样，midway 也是 MidwayJs 团队长期维护的一款产品，同样不会是最后一款，前几个月，我们就计划将我们的监控平台 Sandbox 带出来回馈给社区，虽然道阻且长，任务艰辛，我们依旧在努力前行，欢迎关注。</p>\n<p>最后，<a href=\"http://link.zhihu.com/?target=https%3A//github.com/midwayjs/pandora/\">midway</a> 的地址在这 <a href=\"http://link.zhihu.com/?target=https%3A//github.com/midwayjs/midway/\">https://github.com/midwayjs/midway/</a>，归属在 midwayJs Group 下。欢迎走过路过点个 Star，给我们提提建议，提提代码。</p>\n<p>Midway 官网：<a href=\"https://midwayjs.org/midway/\">https://midwayjs.org/midway/</a></p>\n<p><img src=\"https://img.alicdn.com/tfs/TB1TQ9.BhjaK1RjSZKzXXXVwXXa-1448-541.png\" alt=\"image-20190110141919113\"></p>\n</div>","title":"midway v1.0 社区正式发布 - 面向未来的全栈开发方案","last_reply_at":"2019-01-25T14:50:12.141Z","good":true,"top":false,"reply_count":37,"visit_count":2315,"create_at":"2019-01-10T08:20:55.350Z","author":{"loginname":"czy88840616","avatar_url":"//gravatar.com/avatar/c4e414b7264b513a00bbd8ec3e9a0d66?s=48"}},{"id":"5c18d6837ec239239ff582b8","author_id":"5c179fa17ec239239ff57b8f","tab":"ask","content":"<div class=\"markdown-text\"><p>请大神们推荐几本教材啊</p>\n</div>","title":"想学node.js, 有什么教材推荐吗","last_reply_at":"2019-01-25T13:54:47.019Z","good":false,"top":false,"reply_count":14,"visit_count":1013,"create_at":"2018-12-18T11:14:11.553Z","author":{"loginname":"sxuni","avatar_url":"https://avatars2.githubusercontent.com/u/16433603?v=4&s=120"}},{"id":"5c45c4c66955112b994376ee","author_id":"5b376dfcac8bc1e124114500","tab":"ask","content":"<div class=\"markdown-text\"><p>hi 最近有个 小问题在困扰这我\n在restful 规范下想写一个获取客户(user) 的商品 (Product) url 怎么写才靠谱</p>\n<p>方法1: /user/:<em>id</em>/products\n方法2: /products?userId=<em>:id</em></p>\n<h2>各位同伴哪个比较靠谱？或者你还有其他翻案？</h2>\n</div>","title":"获取 User 下的 Product 的 URL 你会怎么写？","last_reply_at":"2019-01-25T10:37:55.852Z","good":false,"top":false,"reply_count":6,"visit_count":487,"create_at":"2019-01-21T13:10:30.375Z","author":{"loginname":"tmirun","avatar_url":"https://avatars1.githubusercontent.com/u/8052536?v=4&s=120"}},{"id":"56ef3edd532839c33a99d00e","author_id":"54009f5ccd66f2eb37190485","tab":"share","content":"<div class=\"markdown-text\"><p><a href=\"https://github.com/AutumnsWind/Front-end-tutorial\">资源教程原文</a></p>\n<ol>\n<li>\n<p>综合类</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/sb19871023/p/3894452.html\">前端知识体系</a></li>\n<li><a href=\"https://github.com/JacksonTian/fks\">前端知识结构</a></li>\n<li><a href=\"https://github.com/unruledboy/WebFrontEndStack\">Web前端开发大系概览</a></li>\n<li><a href=\"http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html\">Web前端开发大系概览-中文版</a></li>\n<li><a href=\"https://raw.githubusercontent.com/unruledboy/WebFrontEndStack/master/Web%20Front%20End%20Stack.png\">Web Front-end Stack v2.2</a></li>\n<li><a href=\"https://github.com/justjavac/free-programming-books-zh_CN\">免费的编程中文书籍索引</a></li>\n<li><a href=\"https://github.com/dypsilon/frontend-dev-bookmarks\">前端书籍</a></li>\n<li><a href=\"https://github.com/vhf/free-programming-books\">前端免费书籍大全</a></li>\n<li><a href=\"http://www.cnblogs.com/sb19871023/p/3894452.html\">前端知识体系</a></li>\n<li><a href=\"https://github.com/justjavac/free-programming-books-zh_CN\">免费的编程中文书籍索引</a></li>\n<li><a href=\"http://study.163.com/course/introduction/224014.htm\">智能社 - 精通JavaScript开发</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">重新介绍 JavaScript（JS 教程）</a></li>\n<li><a href=\"http://v.163.com/special/opencourse/bianchengdaolun.html\">麻省理工学院公开课：计算机科学及编程导论</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000002640298\">JavaScript中的this陷阱的最全收集–没有之一</a></li>\n<li><a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html\">JS函数式编程指南</a></li>\n<li><a href=\"http://liubin.github.io/promises-book/\">JavaScript Promise迷你书（中文版）</a></li>\n<li><a href=\"https://github.com/AlloyTeam/Mars\">腾讯移动Web前端知识库</a></li>\n<li><a href=\"https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide\">Front-End-Develop-Guide 前端开发指南</a></li>\n<li><a href=\"https://li-xinyang.gitbooks.io/frontend-notebook/content/\">前端开发笔记本</a></li>\n<li><a href=\"https://github.com/nieweidong/fetool\">大前端工具集 - 聂微东</a></li>\n<li><a href=\"https://dwqs.gitbooks.io/frontenddevhandbook/content/\">前端开发者手册</a></li>\n</ul>\n</li>\n<li>\n<p>入门类</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/jikey/p/3613082.html\">前端入门教程</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000\">瘳雪峰的Javascript教程</a></li>\n<li><a href=\"http://www.imooc.com/view/11\">jQuery基础教程</a></li>\n<li><a href=\"http://www.imooc.com/view/506\">前端工程师必备的PS技能——切图篇</a></li>\n<li><a href=\"https://github.com/qiu-deqing/FE-learning\">结合个人经历总结的前端入门方法</a></li>\n</ul>\n</li>\n<li>\n<p>效果类</p>\n<ul>\n<li><a href=\"http://www.imooc.com/learn/58\">弹出层</a></li>\n<li><a href=\"http://www.imooc.com/learn/18\">焦点图轮播特效</a></li>\n</ul>\n</li>\n<li>\n<p>工具类</p>\n<ul>\n<li><a href=\"http://www.imooc.com/learn/93\">css sprite 雪碧图制作</a></li>\n<li><a href=\"http://www.imooc.com/learn/390\">版本控制入门 – 搬进 Github</a></li>\n<li><a href=\"http://www.imooc.com/learn/30\">Grunt-beginner前端自动化工具</a></li>\n</ul>\n</li>\n<li>\n<p>慕课专题</p>\n<ul>\n<li><a href=\"http://www.imooc.com/space/teacher/id/197450\">张鑫旭 - 慕课系列</a></li>\n<li><a href=\"http://www.imooc.com/space/teacher/id/104593\">lyn - 慕课系列</a></li>\n<li><a href=\"http://www.imooc.com/space/teacher/id/290139\">艾伦 - 慕课系列</a></li>\n<li><a href=\"http://www.imooc.com/view/494\">碧仔 - Hello，移动WEB</a></li>\n</ul>\n</li>\n<li>\n<p>周报类</p>\n<ul>\n<li><a href=\"https://github.com/PaicHyperionDev/MobileDevWeekly\">平安科技移动开发二队技术周报</a></li>\n</ul>\n</li>\n</ol>\n<h3>六. API:</h3>\n<h4>1. 总目录</h4>\n<ol>\n<li>\n<p>开发中心</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">mozilla js参考</a></li>\n<li><a href=\"https://developer.chrome.com/extensions/api_index.html\">chrome开发中心（chrome的内核已转向blink）</a></li>\n<li><a href=\"https://developer.apple.com/library/safari/navigation\">safari开发中心</a></li>\n<li><a href=\"https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94).aspx\">microsoft js参考</a></li>\n<li><a href=\"http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html\">js秘密花园</a></li>\n<li><a href=\"http://bonsaiden.github.io/JavaScript-Garden/zh/\">js秘密花园</a></li>\n<li><a href=\"http://www.w3help.org/\">w3help</a> 综合Bug集合网站</li>\n</ul>\n</li>\n<li>\n<p>综合搜索</p>\n<ul>\n<li><a href=\"http://www.javascripting.com/\">javascripting</a></li>\n<li><a href=\"http://microjs.com/\">各种流行库搜索</a></li>\n</ul>\n</li>\n<li>\n<p>综合API</p>\n<ul>\n<li><a href=\"http://www.runoob.com/\">runoob.com-包含各种API集合</a></li>\n<li><a href=\"http://tool.oschina.net/apidocs\">开源中国在线API文档合集</a></li>\n<li><a href=\"http://devdocs.io/\">devdocs</a> 英文综合API网站</li>\n</ul>\n</li>\n</ol>\n<h4>2. jQuery</h4>\n<ul>\n<li><a href=\"http://www.jquery123.com/\">jQuery API 中文文档</a></li>\n<li><a href=\"http://hemin.cn/jq/\">hemin 在线版</a></li>\n<li><a href=\"http://www.css88.com/jqapi-1.9/on/\">css88 jq api</a></li>\n<li><a href=\"http://www.css88.com/jquery-ui-api/\">css88 jqui api</a></li>\n<li><a href=\"http://learn.jquery.com/\">学习jquery</a></li>\n<li><a href=\"http://james.padolsey.com/jquery/\">jquery 源码查找</a></li>\n</ul>\n<h4>3. Ecmascript</h4>\n<ul>\n<li><a href=\"https://leanpub.com/understandinges6/read\">Understanding ECMAScript 6 - Nicholas C. Zakas</a></li>\n<li><a href=\"https://leanpub.com/exploring-es6/read\">exploring-es6</a></li>\n<li><a href=\"https://github.com/es6-org/exploring-es6\">exploring-es6翻译</a></li>\n<li><a href=\"http://es6-org.github.io/exploring-es6/\">exploring-es6翻译后预览</a></li>\n<li><a href=\"http://es6.ruanyifeng.com/\">阮一峰 es6</a></li>\n<li><a href=\"http://javascript.ruanyifeng.com/\">阮一峰 Javascript</a></li>\n<li><a href=\"http://yanhaijing.com/es5/\">ECMA-262，第 5 版</a></li>\n<li><a href=\"http://es5.github.io/\">es5</a></li>\n</ul>\n<h4>4. Js template</h4>\n<ul>\n<li><a href=\"http://garann.github.io/template-chooser/\">template-chooser</a></li>\n<li><a href=\"https://github.com/aui/artTemplate\">artTemplate</a></li>\n<li><a href=\"https://github.com/aui/tmodjs/blob/master/README.md\">tomdjs</a></li>\n<li><a href=\"http://juicer.name/docs/docs_zh_cn.html\">淘宝模板juicer模板</a></li>\n<li><a href=\"http://koen301.github.io/fxtpl/\">Fxtpl v1.0 繁星前端模板引擎</a></li>\n<li><a href=\"http://laytpl.layui.com/\">laytpl</a></li>\n<li><a href=\"https://github.com/mozilla/nunjucks\">mozilla - nunjucks</a></li>\n<li><a href=\"https://github.com/PaulGuo/Juicer\">Juicer</a></li>\n<li><a href=\"http://akdubya.github.io/dustjs/\">dustjs</a></li>\n<li><a href=\"http://ecomfe.github.io/etpl/\">etpl</a></li>\n</ul>\n<h4>5. 弹出层</h4>\n<ul>\n<li><a href=\"https://github.com/aui/artDialog\">artDialog 最新版</a></li>\n<li><a href=\"http://aui.github.io/artDialog/doc/index.html\">artDialog 文档</a></li>\n<li><a href=\"https://code.google.com/p/artdialog/downloads/list\">google code 下载地址</a></li>\n<li><a href=\"http://layer.layui.com/\">贤心弹出层</a></li>\n<li><a href=\"https://github.com/bh-lay/UI\">响应式用户交互组件库</a></li>\n<li><a href=\"http://t4t5.github.io/sweetalert/\">sweetalert-有css3动画弹出层</a></li>\n</ul>\n<h4>6. CSS</h4>\n<ul>\n<li><a href=\"http://tympanus.net/codrops/css_reference/\">CSS 语法参考</a></li>\n<li><a href=\"http://isux.tencent.com/css3/index.html\">CSS3动画手册</a></li>\n<li><a href=\"http://isux.tencent.com/css3/tools.html\">腾讯css3动画制作工具</a></li>\n<li><a href=\"http://linxz.github.io/tianyizone/\">志爷css小工具集合</a></li>\n<li><a href=\"http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb\">css3 js 移动大杂烩</a></li>\n<li><a href=\"http://bouncejs.com/\">bouncejs 触摸库</a></li>\n<li><a href=\"http://fian.my.id/Waves/\">css3 按钮动画</a></li>\n<li><a href=\"http://daneden.github.io/animate.css/\">animate.css</a></li>\n<li><a href=\"http://www.alloyteam.com/2015/10/8536/\">全局CSS的终结(狗带) [译]</a></li>\n</ul>\n<h4>7. Angularjs</h4>\n<ul>\n<li><a href=\"https://github.com/dolymood/AngularLearning\">Angular.js 的一些学习资源</a></li>\n<li><a href=\"http://angularjs.cn/\">angularjs中文社区</a></li>\n<li><a href=\"http://www.cnblogs.com/xuwenmin888/p/3739096.html\">Angularjs源码学习</a></li>\n<li><a href=\"http://www.ifeenan.com/?c=AngularJS\">Angularjs源码学习</a></li>\n<li><a href=\"http://angular-ui.github.io/bootstrap/\">angular对bootstrap的封装</a></li>\n<li><a href=\"https://cnodejs.org/topic/51404e0f069911196d2e3923\">angularjs + nodejs</a></li>\n<li><a href=\"http://www.cnblogs.com/lvdabao/tag/AngularJs/\">吕大豹 Angularjs</a></li>\n<li><a href=\"http://www.infoq.com/cn/news/2013/02/angular-web-app\">AngularJS 最佳实践</a></li>\n<li><a href=\"http://www.lovelucy.info/angularjs-best-practices.html\">Angular的一些扩展指令</a></li>\n<li><a href=\"https://github.com/Pasvaz/bindonce\">Angular数据绑定原理</a></li>\n<li><a href=\"https://github.com/angular-ui/\">一些扩展Angular UI组件</a></li>\n<li><a href=\"http://voidcanvas.com/emberjs-vs-angularjs-performance-testing/\">Ember和AngularJS的性能测试</a></li>\n<li><a href=\"http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html\">带你走近AngularJS - 基本功能介绍</a></li>\n<li><a href=\"http://angular.duapp.com/docs/guide\">Angularjs开发指南</a></li>\n<li><a href=\"http://www.cnblogs.com/amosli/p/3710648.html\">Angularjs学习</a></li>\n<li><a href=\"http://www.rainweb.cn/article/angularjs-jquery.html\">不要带着jQuery的思维去学习AngularJS</a></li>\n<li><a href=\"http://wangjiatao.diandian.com/?tag=angularjs\">angularjs 学习笔记</a></li>\n<li><a href=\"http://www.angularjs.cn/T008\">angularjs 开发指南</a></li>\n<li><a href=\"https://github.com/jmcunningham/AngularJS-Learning\">angularjs 英文资料</a></li>\n<li><a href=\"http://angular-ui.github.io/bootstrap/\">angular bootstrap</a></li>\n<li><a href=\"https://github.com/opitzconsulting/jquery-mobile-angular-adapter\">angular jq mobile</a></li>\n<li><a href=\"http://mgcrea.github.io/angular-strap/\">angular ui</a></li>\n<li><a href=\"http://www.tuicool.com/articles/7ZZVr2\">整合jQuery Mobile+AngularJS经验谈</a></li>\n<li><a href=\"http://blog.jobbole.com/46589/\">有jQuery背景，该如何用AngularJS编程思想</a></li>\n<li><a href=\"http://each.sinaapp.com/angular/\">AngularJS在线教程</a></li>\n<li><a href=\"http://www.zouyesheng.com/angular.html\">angular学习笔记</a></li>\n</ul>\n<h4>8. React</h4>\n<ul>\n<li><a href=\"http://www.react-china.org/\">react.js 中文论坛</a></li>\n<li><a href=\"https://facebook.github.io/react/index.html\">react.js 官方网址</a></li>\n<li><a href=\"https://facebook.github.io/react/docs/getting-started.html\">react.js 官方文档</a></li>\n<li><a href=\"http://material-ui.com/#/\">react.js material UI</a></li>\n<li><a href=\"http://touchstonejs.io/\">react.js TouchstoneJS UI</a></li>\n<li><a href=\"http://amazeui.org/react/\">react.js amazeui UI</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\">React 入门实例教程 - 阮一峰</a></li>\n<li><a href=\"http://wiki.jikexueyuan.com/project/react-native/\">React Native 中文版</a></li>\n<li><a href=\"http://www.html-js.com/article/Fakefish%203053\">Webpack 和 React 小书 - 前端乱炖</a></li>\n<li><a href=\"https://fakefish.github.io/react-webpack-cookbook/\">Webpack 和 React 小书 - gitbook</a></li>\n<li><a href=\"https://github.com/webpack/webpack\">webpack</a></li>\n<li><a href=\"http://html-js.com/article/3009\">Webpack，101入门体验</a></li>\n<li><a href=\"http://html-js.com/article/3113\">webpack入门教程</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000003499526\">基于webpack搭建前端工程解决方案探索</a></li>\n<li><a href=\"http://www.piliyu.com/\">React原创实战视频教程</a></li>\n</ul>\n<h4>9. 移动端API</h4>\n<ol>\n<li>API\n<ul>\n<li><a href=\"https://github.com/jtyjty99999/mobileTech\">99移动端知识集合</a></li>\n<li><a href=\"https://github.com/AlloyTeam/Mars\">移动端前端开发知识库</a></li>\n<li><a href=\"http://caibaojian.com/mobile-web-bug.html\">移动前端的一些坑和解决方法（外观表现）</a></li>\n<li><a href=\"http://www.cnblogs.com/PeunZhang/p/3407453.html\">【原】移动web资源整理</a></li>\n<li><a href=\"http://mweb.baidu.com/zeptoapi/\">zepto 1.0 中文手册</a></li>\n<li><a href=\"http://www.html-5.cn/Manual/Zepto/\">zepto 1.0 中文手册</a></li>\n<li><a href=\"http://www.css88.com/doc/zeptojs_api/\">zepto 1.1.2</a></li>\n<li><a href=\"http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html\">zepto 中文注释</a></li>\n<li><a href=\"http://app-framework-software.intel.com/api.php\">jqmobile 手册</a></li>\n<li><a href=\"https://github.com/maxzhang/maxzhang.github.com/issues\">移动浏览器开发集合</a></li>\n<li><a href=\"https://github.com/hoosin/mobile-web-favorites\">移动开发大杂烩</a></li>\n<li><a href=\"http://lin-chao.github.io/2014/11/14/%E5%BE%AE%E4%BF%A1webview%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/\">微信webview中的一些问题</a></li>\n</ul>\n</li>\n<li>框架\n<ul>\n<li><a href=\"http://framework7.taobao.org/\">特色的HTML框架可以创建精美的iOS应用</a></li>\n<li><a href=\"http://m.sui.taobao.org/\">淘宝SUI</a></li>\n</ul>\n</li>\n</ol>\n<h4>10. avalon</h4>\n<ul>\n<li><a href=\"http://avalonjs.github.io/\">avalonjs</a></li>\n<li><a href=\"http://ued.qunar.com/oniui/index.html\">Avalon新一代UI库： OniUI</a></li>\n<li><a href=\"https://github.com/RubyLouvre/avalon.oniui\">avalon.oniui-基于avalon的组件库</a></li>\n<li><a href></a></li>\n</ul>\n<h4>11. Requriejs</h4>\n<ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2012/10/javascript_module.html\">Javascript模块化编程（一）：模块的写法 </a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html\">Javascript模块化编程（二）：AMD规范</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2012/11/require_js.html\">Javascript模块化编程（三）：require.js的用法</a></li>\n<li><a href=\"http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html\">RequireJS入门（一）</a></li>\n<li><a href=\"http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html\">RequireJS入门（二）</a></li>\n<li><a href=\"http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html\">RequireJS进阶（三）</a></li>\n<li><a href=\"http://www.cnblogs.com/yexiaochai/p/3632580.html\">requrie源码学习</a></li>\n<li><a href=\"http://www.oschina.net/translate/getting-started-with-the-requirejs-library\">requrie 入门指南</a></li>\n<li><a href=\"http://www.cnblogs.com/yexiaochai/p/3214926.html\">requrieJS 学习笔记</a></li>\n<li><a href=\"http://cyj.me/why-seajs/requirejs/\">requriejs 其一 </a></li>\n<li><a href=\"http://www.cnblogs.com/yexiaochai/p/3221081.html\">require backbone结合</a></li>\n</ul>\n<h4>12. Seajs</h4>\n<ul>\n<li><a href=\"http://seajs.org/\">seajs</a></li>\n<li><a href=\"http://cyj.me/why-seajs/zh/\">seajs 中文手册</a></li>\n</ul>\n<h4>13. Less,sass</h4>\n<ul>\n<li><a href=\"http://www.w3cplus.com/sassguide/\">sass</a></li>\n<li><a href=\"http://www.sass.hk/\">sass教程-sass中国</a></li>\n<li><a href=\"http://sass.bootcss.com/\">Sass 中文文档</a></li>\n<li><a href=\"http://less.bootcss.com/\">less</a></li>\n</ul>\n<h4>14. Markdown</h4>\n<ul>\n<li><a href=\"http://wowubuntu.com/markdown/\">Markdown 语法说明 (简体中文版)</a></li>\n<li><a href=\"https://github.com/LearnShare/Learning-Markdown/blob/master/README.md\">markdown入门参考</a></li>\n<li><a href=\"https://www.gitbook.com/\">gitbook</a> 国外的在线markdown可编辑成书</li>\n<li><a href=\"https://www.zybuluo.com/mdeditor\">mdeditor</a>  一款国内的在线markdown编辑器</li>\n<li><a href=\"https://stackedit.io\">stackedit</a> 国外的在线markdown编辑器，功能强大，同步云盘</li>\n<li><a href=\"http://bh-lay.github.io/mditor/\">mditor</a> 一款轻量级的markdown编辑器</li>\n<li><a href=\"https://github.com/lepture/editor\">lepture-editor</a></li>\n<li><a href=\"https://github.com/jbt/markdown-editor\">markdown-editor</a></li>\n</ul>\n<h4>15. D3</h4>\n<ul>\n<li><a href=\"https://github.com/mbostock/d3/wiki/Tutorials\">d3 Tutorials</a></li>\n<li><a href=\"https://github.com/mbostock/d3/wiki/Gallery\">Gallery</a></li>\n<li><a href=\"http://datavisual.lofter.com/post/40cf3a_188e535\">lofter</a></li>\n<li><a href=\"http://alanland.iteye.com/blog/1878595\">iteye</a></li>\n<li><a href=\"http://javascript.ruanyifeng.com/library/d3.html\">ruanyifeng</a></li>\n</ul>\n<h4>16. 兼容性</h4>\n<ul>\n<li><a href=\"http://kangax.github.io/compat-table/es6/\">esma 兼容列表</a></li>\n<li><a href=\"http://jigsaw.w3.org/css-validator/validator.html.zh-cn\">W3C CSS验证服务</a></li>\n<li><a href=\"http://caniuse.com/#index\">caniuse</a></li>\n<li><a href=\"http://csscreator.com/properties\">csscreator</a></li>\n<li><a href=\"https://msdn.microsoft.com/zh-cn/library/cc351024(v=vs.85).aspx\">microsoft</a></li>\n<li><a href=\"http://www.responsinator.com/\">在线测兼容-移动端</a></li>\n<li><a href=\"https://www.manymo.com/emulators\">emulators</a></li>\n</ul>\n<h4>17. UI相关</h4>\n<ul>\n<li><a href=\"http://v3.bootcss.com/\">bootcss</a></li>\n<li><a href=\"http://www.w3cplus.com/MetroUICSS/\">MetroUICSS</a></li>\n<li><a href=\"http://semantic-ui.com/\">semantic</a></li>\n<li><a href=\"http://alexwolfe.github.io/Buttons/\">Buttons</a></li>\n<li><a href=\"http://hiloki.github.io/kitecss/\">kitecss</a></li>\n<li><a href=\"http://www.pintuer.com/\">pintuer</a></li>\n<li><a href=\"http://amazeui.org/\">amazeui</a></li>\n<li><a href=\"http://www.worldhello.net/gotgithub/index.html\">worldhello</a></li>\n<li><a href=\"http://igit.linuxtoy.org/contents.html\">linuxtoy</a></li>\n<li><a href=\"http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/\">gitmagic</a></li>\n<li><a href=\"http://rogerdudler.github.io/git-guide/index.zh.html\">rogerdudler</a></li>\n<li><a href=\"http://gitref.justjavac.com/\">gitref</a></li>\n<li><a href=\"http://git-scm.com/book/zh\">book</a></li>\n<li><a href=\"http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic/\">gogojimmy</a></li>\n</ul>\n<h4>18. HTTP</h4>\n<ul>\n<li><a href=\"http://segmentfault.com/bookmark/1230000002521721\">HTTP API 设计指南</a></li>\n</ul>\n<h4>19. 其它API</h4>\n<ul>\n<li><a href>javascript流行库汇总</a></li>\n<li><a href=\"http://niceue.com/validator/demo/index.php\">验证api</a></li>\n<li><a href=\"http://www.css88.com/doc/underscore/\">underscore 中文手册</a></li>\n<li><a href=\"http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031\">underscore源码分析</a></li>\n<li><a href=\"http://yalishizhude.github.io/tags/underscore/\">underscore源码分析-亚里士朱德的博客</a></li>\n<li><a href=\"http://underscorejs.org/\">underscrejs en api</a></li>\n<li><a href=\"https://lodash.com/\">lodash - underscore的代替品</a></li>\n<li><a href=\"http://extjs-doc-cn.github.io/ext4api/\">ext4api</a></li>\n<li><a href=\"http://www.csser.com/tools/backbone/backbone.js.html\">backbone 中文手册</a></li>\n<li><a href=\"http://dev.qwrap.com/resource/js/_docs/_youa/#/qw/base/loadJs_.htm\">qwrap手册</a></li>\n<li><a href=\"http://easings.net/zh-cn\">缓动函数</a></li>\n<li><a href=\"http://www.w3school.com.cn/svg/svg_reference.asp\">svg 中文参考</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG\">svg mdn参考</a></li>\n<li><a href=\"https://github.com/gabelerner/canvg\">svg 导出 canvas</a></li>\n<li><a href=\"https://github.com/exupero/saveSvgAsPng\">svg 导出 png</a></li>\n<li><a href=\"http://www.zamzar.com/convert/ai-to-svg/\">ai-to-svg</a></li>\n<li><a href=\"https://github.com/machao/localStorage\">localStorage 库</a></li>\n</ul>\n<h4>20. 图表类</h4>\n<ul>\n<li><a href=\"http://www.hcharts.cn/api/index.php\">Highcharts 中文API</a></li>\n<li><a href=\"http://api.highcharts.com/highcharts\">Highcharts 英文API</a></li>\n<li><a href=\"http://echarts.baidu.com/\">ECharts 百度的图表软件</a></li>\n<li><a href=\"http://lbs.amap.com/api/\">高德地图</a></li>\n<li><a href=\"http://paperjs.org/\">开源的矢量图脚本框架</a></li>\n<li><a href=\"http://jvectormap.com/\">svg 地图</a></li>\n</ul>\n<h4>21. vue</h4>\n<ul>\n<li><a href=\"http://cn.vuejs.org/\">Vue</a></li>\n<li><a href=\"http://forum.vuejs.org/\">Vue 论坛</a></li>\n<li><a href=\"http://www.cnblogs.com/aaronjs/p/3660102.html\">Vue 入门指南</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000000411057\">Vue 的一些资源索引</a></li>\n<li><a href></a></li>\n</ul>\n<h4>21. 正则</h4>\n<ul>\n<li><a href=\"http://segmentfault.com/a/1190000002471140\">JS正则表达式元字符</a></li>\n<li><a href=\"http://deerchao.net/tutorials/regex/regex.htm\">正则表达式30分钟入门教程</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions\">MDN-正则表达式</a></li>\n<li><a href=\"http://javascript.ruanyifeng.com/stdlib/regexp.html\">ruanyifeng - RegExp对象</a></li>\n<li><a href=\"http://div.io/topic/764?page=1\">小胡子哥 - 进阶正则表达式</a></li>\n<li><a href=\"https://github.com/Cedriking/is.js/blob/master/is.js\">is.js</a></li>\n<li><a href=\"http://regexper.com/\">正则在线测试</a></li>\n<li><a href></a></li>\n</ul>\n<h4>22. ionic</h4>\n<ul>\n<li><a href=\"https://github.com/ychow/ionic-guide\">ionic</a></li>\n</ul>\n<h4>23. 其它</h4>\n<ul>\n<li><a href=\"http://mockjs.com/\">Mock.js 是一款模拟数据生成器</a></li>\n</ul>\n<h3>七. 开发规范</h3>\n<ol>\n<li>\n<p>前端</p>\n<ul>\n<li><a href=\"http://alloyteam.github.io/CodeGuide\">通过分析github代码库总结出来的工程师代码书写习惯</a></li>\n<li><a href=\"http://codeguide.bootcss.com/\">HTML&amp;CSS编码规范 by @mdo</a></li>\n<li><a href=\"http://www.alloyteam.com/2011/10/107/\">团队合作的css命名规范-腾讯AlloyTeam前端团队</a></li>\n<li><a href=\"http://yuwenhui.github.io/\">前端编码规范之js - by yuwenhui</a></li>\n<li><a href=\"http://www.cnblogs.com/hustskyking/p/javascript-spec.html\">前端编码规范之js - by 李靖</a></li>\n<li><a href=\"http://zhibimo.com/read/Ashu/front-end-style-guide/\">前端开发规范手册</a></li>\n<li><a href=\"https://github.com/yuche/javascript#table-of-contents\">Airbnb JavaScript 编码规范（简体中文版）</a></li>\n<li><a href=\"http://www.zhihu.com/question/20351507\">AMD与CMD规范的区别</a></li>\n<li><a href=\"http://www.cnblogs.com/tugenhua0707/p/3507957.html\">AMD与CMD规范的区别</a></li>\n<li><a href=\"http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html\">KISSY 源码规范</a></li>\n<li><a href=\"http://codeguide.bootcss.com/\">bt编码规范</a></li>\n<li><a href=\"https://github.com/Suxiaogang/Code_Guide\">规范加强版</a></li>\n<li><a href=\"http://blog.jobbole.com/79075/\">前端代码规范 及 最佳实践</a></li>\n<li><a href=\"http://coderlmn.github.io/code-standards/\">百度前端规范</a></li>\n<li><a href=\"http://isobar-idev.github.io/code-standards/\">百度前端规范</a></li>\n<li><a href=\"http://zhuanlan.zhihu.com/fuyun/19884834\">百度前端规范</a></li>\n<li><a href=\"https://github.com/gf-rd/es6-coding-style\">ECMAScript6 编码规范–广发证券前端团队</a></li>\n<li><a href=\"http://blog.jobbole.com/79484/\">JavaScript 风格指南/编码规范（Airbnb公司版）</a></li>\n<li><a href=\"http://nec.netease.com/standard\">网易前端开发规范</a></li>\n<li><a href=\"http://www.75team.com/archives/1049\">css模块</a></li>\n<li><a href=\"https://github.com/ecomfe/spec\">前端规范资源列表</a></li>\n</ul>\n</li>\n<li>\n<p>PHP</p>\n<ul>\n<li><a href=\"http://segmentfault.com/a/1190000000443795\">最流行的PHP 代码规范</a></li>\n<li><a href=\"https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md\">最流行的PHP 代码规范</a></li>\n</ul>\n</li>\n<li>\n<p>Android</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/lcw/p/3619181.html\">【敏捷开发】Android团队开发规范</a></li>\n<li><a href=\"http://www.jianshu.com/p/4390f4fe19b3\">Android 开发规范与应用</a></li>\n</ul>\n</li>\n</ol>\n<h3>八. 其它收集</h3>\n<h4>1. 各大公司开源项目</h4>\n<ul>\n<li><a href=\"https://code.facebook.com/projects/web/\">Facebook Projects</a></li>\n<li><a href=\"http://fex.baidu.com/\">百度web前端研发部</a></li>\n<li><a href=\"http://efe.baidu.com/\">百度EFE</a></li>\n<li><a href=\"https://github.com/fex-team/\">百度github</a></li>\n<li><a href=\"http://www.alloyteam.com/\">alloyteam</a></li>\n<li><a href=\"http://alloyteam.github.io/\">alloyteam-github</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyGameEngine\">alloyteam-AlloyGameEngine</a></li>\n<li><a href=\"http://alloyteam.github.io/AlloyDesigner/\">AlloyDesigner</a> 即时修改，即时保存，设计稿较正，其它开发辅助工具</li>\n<li><a href=\"http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao/\">H5交互页编辑器AEditor介绍</a> H5动画交互页开发的工具介绍</li>\n<li><a href=\"http://aeditor.alloyteam.com/\">AEditor</a> H5动画交互页开发的工具</li>\n<li><a href=\"http://forum.maka.im/wordpress/\">maka</a></li>\n<li><a href=\"https://github.com/fenbility/weekly-feed\">值得订阅的weekly</a></li>\n<li><a href=\"http://cube.qq.com/\">腾讯html5</a></li>\n<li><a href=\"http://75team.github.io/\">奇舞团开源项目</a></li>\n<li><a href=\"http://ued.qunar.com/\">Qunar UED</a></li>\n</ul>\n<h4>2. Javascript</h4>\n<ol>\n<li>\n<p>常用</p>\n<ul>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome/\">ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性</a></li>\n<li><a href=\"http://mottie.github.io/Keyboard/\">模拟键盘</a></li>\n<li><a href=\"https://github.com/hotoo/pinyin\">拼音</a></li>\n<li><a href=\"https://github.com/mc-zone/IDValidator\">中国个人身份证号验证</a></li>\n</ul>\n</li>\n<li>\n<p>算法</p>\n<ul>\n<li><a href=\"https://github.com/Ralph-Wang/algorithm.in.js\">数据结构与算法 JavaScript 描述. 章节练习</a></li>\n<li><a href=\"https://github.com/twobin/twobinSort\">常见排序算法（JS版）</a></li>\n<li><a href=\"https://github.com/luofei2011/jsAgm/blob/master/js/sort.js\">经典排序</a></li>\n<li><a href=\"https://github.com/hechangmin/jssort\">常见排序算法-js版本</a></li>\n<li><a href=\"https://github.com/lightningtgc/JavaScript-Algorithms\">JavaScript 算法与数据结构 精华集</a></li>\n<li><a href=\"http://www.nowcoder.com/live/courses\">面试常考算法题精讲</a></li>\n<li><a href></a></li>\n</ul>\n</li>\n<li>\n<p>移动端</p>\n<ul>\n<li><a href=\"https://github.com/ftlabs/fastclick\">fastclick</a></li>\n<li><a href=\"https://github.com/mmastrac/jquery-noclickdelay\">no-click-delay</a></li>\n</ul>\n</li>\n<li>\n<p>JSON</p>\n<ul>\n<li><a href=\"http://beta.json-generator.com/\">模拟生成JSON数据</a></li>\n<li><a href=\"http://jsonp.afeld.me/\">返回跨域JSONAPI</a></li>\n</ul>\n</li>\n</ol>\n<h4>3. Html5</h4>\n<ul>\n<li><a href=\"http://www.zhihu.com/question/24398907\">HTML5 有哪些让你惊艳的 demo？</a></li>\n</ul>\n<h4>4. CSS</h4>\n<ul>\n<li><a href=\"http://browserhacks.com/\">browserhacks</a></li>\n<li><a href></a></li>\n</ul>\n<h4>5. jQuery</h4>\n<ol>\n<li>\n<p>焦点图</p>\n<ul>\n<li><a href=\"https://github.com/koen301/myfocus\">myfocus</a></li>\n<li><a href=\"http://www.chhua.com/myfocus/\">myfocus-官方演示站</a></li>\n<li><a href=\"http://www.superslide2.com/\">SuperSlidev2.1 – 大话主席</a></li>\n<li><a href=\"http://www.bujichong.com/sojs/soChange/index.html\">soChange</a></li>\n</ul>\n</li>\n</ol>\n<h4>6. Ext, EasyUI, J-UI 及其它各种UI方案</h4>\n<ol>\n<li>\n<p>Ext</p>\n<ul>\n<li><a href=\"https://www.sencha.com/products/extjs/\">extjs</a></li>\n<li><a href=\"http://docs.sencha.com/extjs/4.0.7/\">ext4英文api</a></li>\n<li><a href=\"http://extjs-doc-cn.github.io/ext4api/\">ext4中文api</a></li>\n<li><a href></a></li>\n</ul>\n</li>\n<li>\n<p>EasyUI</p>\n<ul>\n<li><a href=\"http://jquery-easyui.googlecode.com/svn/trunk/src/\">jquery easyui 未压缩源代码</a></li>\n</ul>\n</li>\n<li>\n<p>J-UI</p>\n<ul>\n<li><a href=\"http://jui.org/\">J-UI</a></li>\n</ul>\n</li>\n<li>\n<p>Other</p>\n<ul>\n<li><a href=\"http://dcloudio.github.io/mui/\">MUI-最接近原生APP体验的高性能前端框架</a></li>\n<li><a href=\"http://amazeui.org/\">Amaze UI | 中国首个开源 HTML5 跨屏前端框架</a></li>\n<li><a href=\"http://m.sui.taobao.org/\">淘宝 HTML5 前端框架</a></li>\n<li><a href=\"http://docs.kissyui.com/\">KISSY - 阿里前端JavaScript库</a></li>\n<li><a href=\"http://nej.netease.com/\">网易Nej - Nice Easy Javascript</a></li>\n<li><a href=\"http://demos.telerik.com/kendo-ui/mvvm/index\">Kendo UI MVVM Demo</a></li>\n<li><a href=\"http://www.bootcss.com/\">Bootstrap</a></li>\n<li><a href=\"http://smartui.chinamzz.com/\">Smart UI</a></li>\n<li><a href=\"http://developer.yahoo.com/yui/grids/\">雅虎UI - CSS UI</a></li>\n</ul>\n</li>\n</ol>\n<h4>7. 页面 社会化 分享功能</h4>\n<ul>\n<li><a href=\"http://share.baidu.com/\">百度分享</a> pc端</li>\n<li><a href=\"http://jiathis.com/\">JiaThis</a> pc端</li>\n<li><a href=\"http://developer.baidu.com/soc/share\">社会化分享组件</a> 移动端</li>\n<li><a href=\"http://www.mob.com/#/index\">ShareSDK 轻松实现社会化功能</a> 移动端</li>\n<li><a href=\"http://dev.umeng.com/social/android/quick-integration\">友盟分享</a> 移动端</li>\n</ul>\n<h4>8. 富文本编辑器</h4>\n<ul>\n<li><a href=\"http://ueditor.baidu.com/website/\">百度 ueditor</a></li>\n<li><a href=\"http://ckeditor.com/\">经典的ckeditor</a></li>\n<li><a href=\"http://kindeditor.net/\">经典的kindeditor</a></li>\n<li><a href=\"http://www.bootcss.com/p/bootstrap-wysiwyg/\">wysiwyg</a></li>\n<li><a href=\"http://integ.github.io/BachEditor/\">一个有情怀的编辑器。Bach’s Editor</a></li>\n<li><a href=\"https://github.com/mycolorway/simditor\">tower用的编辑器</a></li>\n<li><a href=\"https://github.com/summernote/summernote\">summernote 编辑器</a></li>\n<li><a href=\"http://neilj.github.io/Squire/\">html5编辑器</a></li>\n<li><a href=\"http://lab.hustlzp.com/XEditor/\">XEditor</a></li>\n<li><a href=\"https://github.com/wangfupeng1988/wangEditor\">wangEditor</a></li>\n</ul>\n<h4>9. 日历</h4>\n<ol>\n<li>\n<p>PC</p>\n<ul>\n<li><a href=\"http://www.my97.net/dp/demo/index.htm\">经典my97</a></li>\n<li><a href=\"http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html\">强大的独立日期选择器</a></li>\n<li><a href=\"http://fullcalendar.io/\">fullcalendar</a></li>\n<li><a href=\"http://blog.csdn.net/francislaw/article/details/7740630\">fullcalendar日历控件知识点集合 </a></li>\n<li><a href=\"http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html\">中文api</a></li>\n<li><a href=\"https://github.com/zzyss86/LunarCalendar\">农历日历</a></li>\n<li><a href=\"http://www.sucaisj.com/jiaoben/date/201509/16856.html\">超酷的仿百度带节日日历老黄历控件</a></li>\n<li><a href=\"http://momentjs.com/\">日期格式化</a></li>\n<li><a href=\"https://github.com/Johnqing/QPAYCalendar/\">大牛日历控件</a></li>\n<li><a href=\"https://github.com/Iamlars/dateMarker\">我群某管理作品</a></li>\n<li><a href=\"http://digitalbush.com/projects/masked-input-plugin/\">input按位替换-官网</a></li>\n<li><a href=\"https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2\">input按位替换-github</a></li>\n<li><a href=\"https://github.com/dangrossman/bootstrap-daterangepicker\">bootstrap-daterangepicker</a></li>\n<li><a href=\"http://www.vandelaydesign.com/30-best-free-jquery-plugins/\">国外30个插件集合</a></li>\n<li><a href=\"http://dbushell.com/2012/10/09/pikaday-javascript-datepicker/\">JavaScript datepicker</a></li>\n<li><a href=\"http://jonthornton.github.io/Datepair.js/\">Datepair.js</a></li>\n<li><a href=\"https://github.com/glad/glDatePicker\">一个风格多样的日历</a></li>\n<li><a href=\"http://amsul.ca/pickadate.js/date/\">弹出层式的全日历</a></li>\n<li><a href=\"http://www.daterangepicker.com/\">jquery双日历</a></li>\n</ul>\n</li>\n<li>\n<p>移动</p>\n<ul>\n<li><a href=\"http://www.frankdemo.cn/index.php?c=content&amp;a=show&amp;id=115\">大气实用jQuery手机移动端日历日期选择插件</a></li>\n<li><a href=\"https://mobiscroll.com/\">jQuery Mobile 移动开发中的日期插件Mobiscroll </a></li>\n</ul>\n</li>\n</ol>\n<ol>\n<li>\n<p>Date library</p>\n<ul>\n<li><a href=\"https://github.com/datejs/Datejs\">Datejs</a></li>\n<li><a href=\"http://sugarjs.com/api/Date\">sugarjs</a></li>\n</ul>\n</li>\n</ol>\n<h4>10. 综合效果搜索平台</h4>\n<ul>\n<li><a href=\"http://www.jq22.com\">效果网</a></li>\n<li><a href=\"http://www.17sucai.com/\">17素材</a></li>\n<li><a href=\"http://microjs.com/\">常用的JavaScript代码片段</a></li>\n</ul>\n<h4>11. 前端工程化</h4>\n<ol>\n<li>\n<p>概述</p>\n<ul>\n<li><a href=\"http://www.awesomes.cn/\">前端工具大全</a></li>\n<li><a href=\"https://github.com/fouber/blog/issues/10?from=timeline&amp;isappinstalled=0#\">什么是前端工程化</a></li>\n</ul>\n</li>\n<li>\n<p>Gulp</p>\n<ul>\n<li><a href=\"http://gulpjs.com/\">Gulp官网</a></li>\n<li><a href=\"http://www.gulpjs.com.cn/\">Gulp中文网</a></li>\n<li><a href=\"https://github.com/Platform-CUF/use-gulp\">gulp资料收集</a></li>\n<li><a href=\"http://javascript.ruanyifeng.com/tool/gulp.html\">Gulp：任务自动管理工具 - ruanyifeng</a></li>\n<li><a href=\"http://gulpjs.com/plugins/\">Gulp插件</a></li>\n<li><a href=\"http://www.ido321.com/1622.html\">Gulp不完全入门教程</a></li>\n<li><a href=\"https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33\">为什么使用gulp?</a></li>\n<li><a href=\"http://www.dbpoo.com/getting-started-with-gulp/\">Gulp安装及配合组件构建前端开发一体化</a></li>\n<li><a href=\"https://github.com/nimojs/gulp-book\">Gulp 入门指南</a></li>\n<li><a href=\"https://github.com/nimojs/blog/issues/19\">Gulp 入门指南 - nimojs</a></li>\n<li><a href=\"http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/\">Gulp入门教程</a></li>\n<li><a href=\"http://www.imooc.com/video/5692\">Gulp in Action</a></li>\n<li><a href=\"http://www.w3ctech.com/topic/134\">Gulp开发教程（翻译）</a></li>\n<li><a href=\"http://www.cnblogs.com/2050/p/4198792.html\">前端构建工具gulpjs的使用介绍及技巧</a></li>\n</ul>\n</li>\n<li>\n<p>Grunt</p>\n<ul>\n<li><a href=\"http://gruntjs.com/\">gruntjs</a></li>\n<li><a href=\"http://www.gruntjs.net/\">Grunt中文网</a></li>\n</ul>\n</li>\n<li>\n<p>Fis</p>\n<ul>\n<li><a href=\"http://fex-team.github.io/fis-site/index.html\">fis 官网</a></li>\n<li><a href=\"http://fis.baidu.com/\">fis</a></li>\n</ul>\n</li>\n</ol>\n<h4>12. 轮播图</h4>\n<ol>\n<li>\n<p>pc图轮</p>\n<ul>\n<li><a href=\"http://www.jsfoot.com/jquery/demo/2011-09-20/192.html\">单屏轮播sochange</a></li>\n<li><a href=\"http://bxslider.com/examples/carousel-demystified\">左右按钮多图切换</a></li>\n<li><a href=\"https://github.com/alvarotrigo/fullPage.js/\">fullpage全屏轮播</a></li>\n</ul>\n</li>\n<li>\n<p>移动端</p>\n<ul>\n<li><a href=\"http://www.swipejs.com/\">无缝切换</a></li>\n<li><a href=\"http://www.idangero.us/swiper/\">滑屏效果</a></li>\n<li><a href=\"https://github.com/peunzhang/fullpage\">全屏fullpage</a></li>\n<li><a href=\"https://github.com/qiqiboy/touchslider\">单个图片切换</a></li>\n<li><a href=\"https://github.com/peunzhang/slip.js\">单个全屏切换</a></li>\n<li><a href=\"http://touch.code.baidu.com/examples.html?qq-pf-to=pcqq.group\">百度的切换库</a></li>\n<li><a href=\"https://github.com/peunzhang/iSlider\">单个全屏切换</a></li>\n<li><a href=\"https://github.com/saw/touch-interfaces\">滑屏效果</a></li>\n<li><a href=\"http://baijs.com/tinycircleslider/\">旋转拖动设置</a></li>\n<li><a href=\"http://touchslider.com/\">类似于swipe切换</a></li>\n<li><a href=\"http://www.swiper.com.cn/demo/index.html\">支持多种形式的触摸滑动</a></li>\n<li><a href=\"https://github.com/joker-ye/main/blob/master/wap/index.html\">滑屏效果</a></li>\n<li><a href=\"http://www.superslide2.com/\">大话主席pc移动图片轮换</a></li>\n<li><a href=\"https://github.com/hahnzhu/parallax.js\">滑屏效果</a></li>\n<li><a href=\"https://github.com/yanhaijing/zepto.fullpage\">基于zepto的fullpage</a></li>\n<li><a href=\"http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html\">[WebApp]定宽网页设计下，固定宽度布局开发WebApp并实现多终端下WebApp布局自适应</a></li>\n<li><a href=\"http://loo2k.com/blog/detecting-wechat-client/\">判断微信客户端的那些坑</a></li>\n<li><a href=\"https://github.com/JefferyWang/nativeShare.js\">可以通过javascript直接调用原生分享的工具</a></li>\n<li><a href=\"http://www.jiathis.com/help/html/weixin-share-code\">JiaThis 分享到微信代码</a></li>\n<li><a href=\"http://fex.baidu.com/blog/2015/05/cross-mobile/\">聊聊移动端跨平台开发的各种技术</a></li>\n<li><a href=\"http://www.zhihu.com/question/29922082\">前端自动化测试</a></li>\n<li><a href=\"http://ajccom.github.io/niceslider/\">多种轮换图片</a></li>\n<li><a href=\"https://mango.github.io/slideout/\">滑动侧边栏</a></li>\n</ul>\n</li>\n</ol>\n<h4>13. 文件上传</h4>\n<ul>\n<li><a href=\"http://fex.baidu.com/webuploader/\">百度上传组件</a></li>\n<li><a href=\"https://blueimp.github.io/jQuery-File-Upload/\">上传</a></li>\n<li><a href=\"http://www.hdfu.net/\">flash 头像上传</a></li>\n<li><a href=\"http://www.dropzonejs.com/\">图片上传预览</a></li>\n<li><a href=\"http://elemefe.github.io/image-cropper/\">图片裁剪</a></li>\n<li><a href=\"http://www.shearphoto.com/\">图片裁剪-shearphoto</a></li>\n<li><a href=\"http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&amp;os=0&amp;sort=view&amp;p=2\">jQuery图片处理</a></li>\n<li><a href></a></li>\n</ul>\n<h4>14. 模拟select</h4>\n<ul>\n<li><a href=\"http://aui.github.io/popupjs/doc/selectbox.html\">糖饼 select</a></li>\n<li><a href=\"https://github.com/rmm5t/jquery-flexselect\">flexselect</a></li>\n<li><a href=\"http://loudev.com/\">双select</a></li>\n<li><a href=\"http://select2.github.io/\">select2</a></li>\n<li><a href></a></li>\n</ul>\n<h4>15. 取色插件</h4>\n<ul>\n<li><a href=\"http://www.jq22.com/plugin/367\">类似 Photoshop 的界面取色插件</a></li>\n<li><a href=\"https://github.com/jquery/jquery-color/\">jquery color</a></li>\n<li><a href=\"http://www.oschina.net/project/tag/287/color-picker\">取色插件集合</a></li>\n<li><a href=\"https://github.com/mattfarina/farbtastic\">farbtastic 圆环＋正方形</a></li>\n<li><a href></a></li>\n</ul>\n<h4>16. 城市联动</h4>\n<ul>\n<li><a href=\"http://www.ijquery.cn/?p=360\">jquery.cityselect.js基于jQuery+JSON的省市或自定义联动效果</a></li>\n<li><a href></a></li>\n</ul>\n<h4>17. 剪贴板</h4>\n<ul>\n<li><a href=\"https://github.com/zeroclipboard/zeroclipboard\">剪贴板</a></li>\n<li><a href=\"http://zenorocha.github.io/clipboard.js/\">clipboard 最新的剪切方案</a></li>\n<li><a href=\"https://github.com/zenorocha/clipboard.js\">不是Flash的剪贴板</a></li>\n</ul>\n<h4>18. 简繁转换</h4>\n<ul>\n<li><a href=\"https://github.com/BYVoid/OpenCC\">简繁转换</a></li>\n</ul>\n<h4>19. 表格 Grid</h4>\n<ul>\n<li><a href=\"http://facebook.github.io/fixed-data-table/\">facebook表格</a></li>\n<li><a href=\"http://handsontable.com/\">类似于Excel编辑表格-handsontable</a></li>\n<li><a href=\"http://bootstrap-table.wenzhixin.net.cn/\">bootstrap-table插件</a></li>\n<li><a href=\"https://www.datatables.net/\">datatables</a></li>\n</ul>\n<h4>20. 在线演示</h4>\n<ul>\n<li><a href=\"http://runjs.cn/\">js 在线编辑 - runjs</a></li>\n<li><a href=\"http://jsbin.com/\">js 在线编辑 - jsbin</a></li>\n<li><a href=\"http://codepen.io/\">js 在线编辑 - codepen</a></li>\n<li><a href=\"http://jsfiddle.net/\">js 在线编辑 - jsfiddle</a></li>\n<li><a href=\"http://ideone.com/\">java 在线编辑 - runjs</a></li>\n<li><a href=\"http://code.hcharts.cn/\">js 在线编辑 - hcharts</a></li>\n<li><a href=\"http://jsdm.com/\">js 在线编辑 - jsdm</a></li>\n<li><a href=\"http://sqlfiddle.com/\">sql 在线编辑 - sqlfiddle</a></li>\n<li><a href=\"https://thimble.mozilla.org\">mozilla 在线编辑器</a></li>\n</ul>\n<h4>21. 播放器</h4>\n<ul>\n<li><a href=\"https://github.com/zmmbreeze/DeadSimpleVideoPlayer\">Html5 VideoPlayer</a></li>\n</ul>\n<h4>22. 粒子动画</h4>\n<ul>\n<li><a href=\"http://a-jie.github.io/Proton/#example\">Proton 烟花</a></li>\n</ul>\n<h3>九. Nodejs</h3>\n<ul>\n<li><a href=\"http://liuqing.pw/\">nodejs 篇幅比较巨大</a></li>\n<li><a href=\"https://github.com/alsotang/node-lessons\">Node.js 包教不包会</a></li>\n<li><a href=\"http://www.rainweb.cn/article/category/Nodejs\">篇幅比较少</a></li>\n<li><a href=\"http://www.w3cfuns.com/article-5598538-1-1.html\">node express 入门教程</a></li>\n<li><a href=\"http://my.oschina.net/u/568264/blog/193773\">nodejs定时任务</a></li>\n<li><a href=\"http://60sky.com/\">一个nodejs博客</a></li>\n<li><a href=\"http://www.cnblogs.com/yexiaochai/p/3536547.html\">【NodeJS 学习笔记04】新闻发布系统</a></li>\n<li><a href=\"http://www.cnblogs.com/qqloving/p/3541099.html\">过年7天乐，学nodejs 也快乐</a></li>\n<li><a href=\"https://github.com/nqdeng/7-days-nodejs\">七天学会NodeJS</a></li>\n<li><a href=\"http://www.cnblogs.com/zhongweiv/p/nodejs_events.html\">Nodejs学习笔记（二）— 事件模块</a></li>\n<li><a href=\"http://www.cnblogs.com/liusuqi/p/3735491.html\">nodejs入门</a></li>\n<li><a href=\"https://github.com/zensh/jsgen\">angularjs nodejs</a></li>\n<li><a href=\"http://blog.fens.me/series-nodejs/\">从零开始nodejs系列文章</a></li>\n<li><a href=\"http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb\">理解nodejs</a></li>\n<li><a href=\"http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/\">nodejs事件轮询</a></li>\n<li><a href=\"http://www.nodebeginner.org/index-zh-cn.html\">node入门</a></li>\n<li><a href=\"http://ourjs.com/detail/53e1f281c5910a9806000001\">nodejs cms</a></li>\n<li><a href=\"http://ourjs.com/detail/529ca5950cb6498814000005\">Node初学者入门，一本全面的NodeJS教程</a></li>\n<li><a href=\"http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line/\">NodeJS的代码调试和性能调优</a></li>\n</ul>\n<h3>十. 性能优化</h3>\n<ol>\n<li>\n<p>常规优化</p>\n<ul>\n<li><a href=\"http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering\">Javascript高性能动画与页面渲染</a></li>\n<li><a href=\"http://isux.tencent.com/h5-performance.html\">移动H5前端性能优化指南</a></li>\n<li><a href=\"http://ued.5173.com/?p=1731\">5173首页前端性能优化实践</a></li>\n<li><a href=\"http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers\">给网页设计师和前端开发者看的前端性能优化</a></li>\n<li><a href=\"http://www.orzpoint.com/profiling-css-and-optimization-notes/\">复杂应用的 CSS 性能分析和优化建议</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD/\">张鑫旭——前端性能</a></li>\n<li><a href=\"http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html\">前端性能监控总结</a></li>\n<li><a href=\"http://udc.weibo.com/2013/05/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8Bcss%E6%97%A0%E5%9B%BE%E7%89%87%E6%8A%80%E6%9C%AF/\">网站性能优化之CSS无图片技术</a></li>\n<li><a href=\"http://www.aliued.cn/2013/01/20/web%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BF%9B%E9%98%B6%E8%B7%AF.html\">web前端性能优化进阶路</a></li>\n<li><a href=\"http://my.eoe.cn/tuwandou/archive/4544.html\">前端技术：网站性能优化之CSS无图片技术</a></li>\n<li><a href=\"http://www.baiduux.com/blog/2011/02/15/browser-loading/\">浏览器的加载与页面性能优化</a></li>\n<li><a href=\"http://www.w3ctech.com/p/1503\">页面加载中的图片性能优化</a></li>\n<li><a href=\"http://www.feelcss.com/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD\">Hey——前端性能</a></li>\n<li><a href=\"http://www.baiduux.com/blog/2010/03/15/html%E4%BC%98%E5%8C%96-2/\">html优化</a></li>\n<li><a href=\"http://www.99css.com/tag/%e6%80%a7%e8%83%bd\">99css——性能</a></li>\n<li><a href=\"http://www.yslow.net/category.php?cid=20\">Yslow——性能优化</a></li>\n<li><a href=\"http://www.cnblogs.com/yslow/\">YSLOW中文介绍</a></li>\n<li><a href=\"http://www.360ito.com/article/40.html\">转一篇Yahoo关于网站性能优化的文章，兼谈本站要做的优化</a></li>\n<li><a href=\"http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml\">Yahoo!团队实践分享：网站性能</a></li>\n<li><a href=\"http://blog.jiasule.com/i/153\">网站性能优化指南：什么使我们的网站变慢？</a></li>\n<li><a href=\"http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html\">网站性能优化实践，减少加载时间，提高用户体验</a></li>\n<li><a href=\"http://www.umtry.com/archives/747.html\">浅谈网站性能优化 前端篇</a></li>\n<li><a href=\"http://www.adinnet.cn/blog/designview/2012-7-12/678.html\">前端重构实践之如何对网站性能优化？</a></li>\n<li><a href=\"http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9/\">前端性能优化：使用媒体查询加载指定大小的背景图片</a></li>\n<li><a href=\"http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html\">网站性能系列博文</a></li>\n<li><a href=\"http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml\">加载，不只是少一点点</a></li>\n<li><a href=\"http://mzhou.me/article/95310/\">前端性能的测试与优化</a></li>\n<li><a href=\"http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading/\">分享网页加载速度优化的一些技巧？</a></li>\n<li><a href=\"http://www.f2es.com/images-bytes-opt/\">页面加载中的图片性能优化</a></li>\n<li><a href=\"http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html\">web前端优化(基于Yslow)</a></li>\n<li><a href=\"https://www.qianduan.net/website-performance-optimization-tool.html\">网站性能优化工具大全</a></li>\n<li><a href=\"http://www.alloyteam.com/2012/10/high-performance-html/\">【高性能前端1】高性能HTML</a></li>\n<li><a href=\"http://www.alloyteam.com/2012/10/high-performance-css/\">【高性能前端2】高性能CSS</a></li>\n<li><a href=\"http://coolshell.cn/articles/6470.html\">由12306谈谈网站前端性能和后端性能优化</a></li>\n<li><a href=\"http://www.alloyteam.com/webfrontend/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/\">AlloyTeam——前端优化</a></li>\n<li><a href=\"http://www.cnblogs.com/developersupport/p/3248695.html\">毫秒必争，前端网页性能最佳实践</a></li>\n<li><a href=\"http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html\">网站性能工具Yslow的使用方法</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1\">前端工程与性能优化（上）：静态资源版本更新与缓存</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2\">前端工程与性能优化（下）：静态资源管理与模板框架</a></li>\n<li><a href=\"http://blog.jobbole.com/48369/\">HTTPS连接的前几毫秒发生了什么</a></li>\n<li><a href=\"http://uicss.cn/yslow/#more-12319\">Yslow</a></li>\n<li><a href=\"http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1/\">Essential Web Performance Metrics — A Primer, Part 1</a></li>\n<li><a href=\"http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2/\">Essential Web Performance Metrics — Part 2</a></li>\n<li><a href=\"http://jayli.github.io/blog/data/2011/12/23/yuislide.html\">YUISlide,针对移动设备的动画性能优化</a></li>\n<li><a href=\"http://joelglovier.com/improving-site-performance/\">Improving Site Performance</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000000367899\">让网站提速的最佳前端实践</a></li>\n<li><a href=\"http://sixrevisions.com/web-development/why-website-speed-is-important/\">Why Website Speed is Important</a></li>\n<li><a href=\"https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance/\">Need for Speed – How to Improve your Website Performance</a></li>\n<li><a href=\"https://github.com/amfe/article/issues/1\">阿里无线前端性能优化指南 (Pt.1 加载期优化) </a></li>\n<li><a href></a></li>\n</ul>\n</li>\n<li>\n<p>优化工具</p>\n<ul>\n<li><a href=\"http://www.html-js.com/article/3083\">JavaScript 性能分析新工具 OneProfile</a></li>\n<li><a href=\"http://www.html-js.com/article/3091\">JavaScript 堆内存分析新工具 OneHeap</a></li>\n</ul>\n</li>\n<li>\n<p>在线工具</p>\n<ul>\n<li><a href=\"https://developers.google.com/speed/pagespeed/insights/\">google在线工具</a></li>\n<li><a href=\"http://www.alibench.com/\">阿里测</a></li>\n<li><a href=\"http://itest.aliyun.com/\">阿里-免费测试服务</a></li>\n<li><a href=\"https://github.com/alibaba/f2etest\">阿里-F2etest多浏览器兼容性测试解决方案</a></li>\n<li><a href=\"http://jsperf.com/\">js性能测试</a></li>\n<li><a href></a></li>\n</ul>\n</li>\n</ol>\n<h3>十一. 前端架构</h3>\n<ul>\n<li><a href=\"http://www.zhihu.com/topic/19612641\">技术架构</a></li>\n<li><a href=\"http://saito.im/note/The-Architecture-of-F2E/\">前端架构</a></li>\n<li><a href=\"http://www.zhihu.com/question/24092572\">如何成为前端架构师</a></li>\n<li><a href=\"http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html\">关于前端架构-张克军</a></li>\n<li><a href=\"http://www.zhihu.com/question/25583350\">百度腾讯offer比较（腾讯游戏VS百度基础架构）</a></li>\n<li><a href></a></li>\n</ul>\n<h3>十二. 个人作品</h3>\n<h4>1. 推荐作品</h4>\n<ul>\n<li><a href=\"https://gist.github.com/wintercn\">winter代码片段需要翻墙</a></li>\n<li><a href=\"http://www.fgm.cc/learn/\">fgm</a></li>\n<li><a href=\"https://github.com/hongru/hongru.github.com\">岑安作品集</a></li>\n<li><a href=\"http://kmdjs.github.io/\">当耐特demo集合</a></li>\n<li><a href=\"http://www.laoshu133.com/Lab/\">米空格 js作品</a></li>\n<li><a href=\"http://koen301.github.io/\">myFocus</a></li>\n<li><a href=\"http://panxuepeng.github.io/seajslib/\">SeaJS组件库</a></li>\n<li><a href=\"http://yanhaijing.com/myProject/\">颜海镜作品</a></li>\n<li><a href=\"http://jo2.org/category/myworks/\">脚儿网作品</a></li>\n<li><a href=\"http://www.cnitblog.com/yemoo/category/3107.html\">javascript个人作品</a></li>\n<li><a href=\"http://bbs.miaov.com/forum.php?mod=viewthread&amp;tid=7790\">妙味的雷东升游戏作品</a></li>\n<li><a href=\"http://bbs.csdn.net/topics/380227212\">javascript作品集</a></li>\n<li><a href=\"https://github.com/TooBug/works\">云五笔，灰度产生生成工具</a></li>\n<li><a href=\"http://koen301.github.io/\">项目主页</a></li>\n<li><a href=\"http://zaole.net/\">个性的作品主页</a></li>\n<li><a href=\"http://static.tingall.com/v2/player/\">播放器</a></li>\n<li><a href=\"http://ucren.com/blog/demos\">ucren js demos 集</a></li>\n<li><a href=\"http://www.zhinengshe.com/works_list.html\">智能社</a></li>\n<li><a href=\"http://demos.shizuwu.cn/\">实例陈列架</a></li>\n<li><a href=\"http://zoye.sinaapp.com/demo\">zoye demo</a></li>\n<li><a href=\"http://lab.yuanwai.wang/\">王员外</a></li>\n<li><a href=\"http://pingfan1990.sinaapp.com\">平凡</a></li>\n<li><a href=\"http://www.lovewebgames.com/\">jyg 游戏案例</a></li>\n<li><a href=\"http://www.helloweba.com/list.html\">很多jquery插件</a></li>\n<li><a href=\"http://www.bujichong.com/sojs/api/index.html\">不羁虫 - soJs 作品系列</a></li>\n<li><a href=\"http://frozenui.github.io/case.html\">frozenui</a></li>\n<li><a href=\"http://js-game.github.io/othello/\">黑白棋</a></li>\n<li><a href=\"http://yansm.github.io/fromone/index.html\">fromone</a></li>\n</ul>\n<h4>2. 群员作品</h4>\n<ul>\n<li><a href=\"http://demo.webjyh.com/\">MDialog - [合肥-M.J]</a></li>\n<li><a href=\"http://sandbox.runjs.cn/show/do6zlrrk\">轮播图 - [上海－冷静]</a></li>\n<li><a href=\"http://www.replace5.com/\">[广州—坚壳]</a></li>\n<li><a href=\"http://www.seejs.com/demos/\">[成都 - 无痕]　感恩节专题</a></li>\n<li><a href=\"http://hacke2.github.io/works\">[球霸天]</a></li>\n<li><a href=\"http://www.cnblogs.com/mcat/\">[北京-小数]</a></li>\n<li><a href=\"http://thx.github.io/magix/\">[ptf] Magix 工具</a></li>\n<li><a href=\"http://thx.github.io/magix/\">[杭州-Pft] Magix 基于 MVC 结构和 Hash 驱动的 OPOA（One Page One Application）应用</a></li>\n<li><a href=\"http://bh-lay.com/labs/\">[上海-剧中人]-实验室</a></li>\n<li><a href=\"http://jikeytang.github.io\">[上海-豪情 ] 作品集合</a></li>\n<li><a href=\"http://guoshan.sinaapp.com/\">[成都-feeling]</a></li>\n<li><a href=\"http://www.cnblogs.com/liyunhua/\">[上海-angela]</a></li>\n<li><a href=\"http://hcjp.github.io/work/demo/\">[海南-hank]作品</a></li>\n<li><a href=\"https://github.com/yibuyisheng/blogs/issues\">[上海-张力]博客</a></li>\n<li><a href=\"http://zkske121.github.io/\">[上海-zenki]作品</a></li>\n<li><a href=\"http://01google.sinaapp.com/locker.html\">移动端图案解锁</a></li>\n<li><a href=\"https://github.com/webjyh/MPreview.mobile\">[合肥-M.J] - MPreview 移动端图片预览组</a></li>\n<li><a href=\"https://github.com/webjyh/Mexam\">[合肥-M.J] - Mexam 移动端在线做题组</a></li>\n<li><a href=\"http://letyougo.github.io/dancer/\">[北京-苏瑞] - dancer小人</a></li>\n<li><a href=\"http://k.swao.cn/js/\">[上海-玄沐]- 个人网站</a></li>\n<li><a href=\"http://www.meckodo.com/\">[厦门-二哲]- 个人博客</a></li>\n</ul>\n<h4>3. 国外大牛精品</h4>\n<ul>\n<li><a href=\"http://pazguille.me/\">pazguille</a></li>\n</ul>\n<h3>十三. 简历模板</h3>\n<ul>\n<li><a href=\"http://learnshare.github.io/about/index.html\">不错的个人简历</a></li>\n<li><a href=\"http://hcy2367.github.io/resume/\">简历</a></li>\n<li><a href=\"http://ncuey.sinaapp.com/CrispElite/\">张伦</a></li>\n<li><a href=\"https://github.com/hacke2/ResumeSample\">简历</a></li>\n<li><a href=\"http://blog.dandyweng.com/2013/07/how-my-website-was-created/\">翁天信</a></li>\n<li><a href=\"http://www.webhek.com/misc/interactive-resume/\">动画方式的简历</a></li>\n<li><a href=\"http://www.linqing07.com/resume.html\">组件丰富简历</a></li>\n<li><a href=\"http://www.mojianli.com/resume/view\">简历池</a></li>\n<li><a href=\"http://www.haorooms.com/about\">haorooms博客</a></li>\n<li><a href=\"http://cv.youngdze.com/\">Justin Young</a></li>\n<li><a href></a></li>\n</ul>\n<h3>十四. 面试题</h3>\n<ul>\n<li><a href=\"http://www.nowcoder.com/discuss/3196\">那几个月在找工作（百度，网易游戏）</a></li>\n<li><a href=\"http://www.html-js.com/article/1743\">2014最新面试题</a></li>\n<li><a href=\"http://www.w3cfuns.com/thread-5598563-2-1.html\">阿里前端面试题</a></li>\n<li><a href=\"http://www.cnblogs.com/imwtr/p/4685546.html\">2016校招内推 – 阿里巴巴前端 – 三面面试经历 </a></li>\n<li><a href=\"http://www.w3cfuns.com/article-5599657-1-1.html\">腾讯面试题</a></li>\n<li><a href=\"http://www.cnblogs.com/lvdabao/p/3660707.html\">年后跳槽那点事：乐视+金山+360面试之行</a></li>\n<li><a href=\"http://fatesinger.com/2722.html\">阿里前端面试题上线</a></li>\n<li><a href=\"http://www.cnblogs.com/52cik/p/js-question-lg.html\">拉勾网js面试题</a></li>\n<li><a href=\"http://www.cnblogs.com/allenxing/p/3724382.html\">前端面试</a></li>\n<li><a href=\"http://mianshiti.diandian.com/\">Web开发笔试面试题 大全</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000000465431\">前端开发面试题</a></li>\n<li><a href=\"https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions\">2014最新前端面试题</a></li>\n<li><a href=\"https://github.com/fex-team/interview-questions\">百度面试</a></li>\n<li><a href=\"http://www.w3cfuns.com/forum.php?mod=forumdisplay&amp;fid=51&amp;filter=typeid&amp;typeid=177\">面试题</a></li>\n<li><a href=\"https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese\">前端工作面试问题</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000000465431\">前端开发面试题</a></li>\n<li><a href=\"http://ourjs.com/detail/5%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98\">5个经典的前端面试问题</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000002562454\">最全前端面试问题及答案总结 </a></li>\n<li><a href=\"http://www.html-js.com/article/Large-search-front-team-column%202961\">如何面试一名前端开发工程师？</a></li>\n<li><a href=\"https://github.com/hawx1993/Front-end-Interview-questions\">史上最全 前端开发面试问题及答案整理</a></li>\n<li><a href=\"http://www.cnblogs.com/xiaoruo/p/4665163.html\">前端实习生面试总结 </a></li>\n<li><a href=\"https://github.com/hawx1993/Front-end-Interview-questions\">史上最全 前端开发面试问题及答案整理</a></li>\n<li><a href=\"http://blog.jobbole.com/78738/\">BAT及各大互联网公司2014前端笔试面试题：JavaScript篇</a></li>\n<li><a href=\"https://github.com/paddingme/Front-end-Web-Development-Interview-Question\">前端开发面试题大收集</a></li>\n<li><a href=\"https://github.com/qiu-deqing/FE-interview\">收集的前端面试题和答案</a></li>\n<li><a href=\"http://www.zhihu.com/question/19568008\">如何面试前端工程师</a></li>\n<li><a href=\"https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md\">前端开发面试题</a></li>\n<li><a href=\"http://www.nowcoder.com/discuss?type=2\">牛客网-笔试面经</a></li>\n</ul>\n<h3>十五. iconfont</h3>\n<ul>\n<li><a href=\"http://www.zhihu.com/question/21253343\">中文字体</a></li>\n<li><a href=\"http://iconfont.cn\">淘宝字库</a></li>\n<li><a href=\"http://mux.alimama.com/fonts\">字体</a></li>\n<li><a href=\"http://iconfont.cn/help/platform.html\">制作教程</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/?s=icomoon\">zhangxinxu-icommon</a></li>\n<li><a href=\"https://icomoon.io/app/\">icommon</a></li>\n<li><a href=\"http://imooc.com/learn/243\">用字体在网页中画ICON图标(推荐教程)</a></li>\n<li><a href=\"http://font-spider.org/\">字体压缩工具</a> 感谢初级群　[深圳-小鱼] 的推荐</li>\n</ul>\n<h3>十六. 开发工具类</h3>\n<ol>\n<li>\n<p>前端开发工具</p>\n<ul>\n<li><a href=\"https://github.com/judasn/IntelliJ-IDEA-Tutorial\">IntelliJ IDEA 简体中文专题教程</a></li>\n<li><a href=\"http://t.cn/8kZZ1Uy\">Webstorm,InterllIdea,Phpstorm</a></li>\n<li><a href=\"https://github.com/jikeytang/sublime-text\">SublimeText</a></li>\n<li><a href=\"https://atom.io/\">Atom</a></li>\n<li><a href=\"https://code.visualstudio.com/\">visual studio code</a></li>\n</ul>\n</li>\n<li>\n<p>Chrome, Firebug, Filddle 调试</p>\n<ol>\n<li>\n<p>Fiddler</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/tugenhua0707/p/4623317.html\">Fiddler调式使用知多少(一)深入研究</a></li>\n<li><a href=\"http://www.cnblogs.com/strick/p/4570006.html\">微信fiddle</a></li>\n<li><a href=\"http://gaoboy.com/article/26.html\">微信fiddle</a></li>\n<li><a href></a></li>\n</ul>\n</li>\n<li>\n<p>Chrome</p>\n<ul>\n<li><a href=\"https://developer.chrome.com/devtools\">Google Chrome 官方</a></li>\n<li><a href=\"http://www.cnblogs.com/constantince/p/4565261.html\">Chrome - 基础</a></li>\n<li><a href=\"http://www.cnblogs.com/constantince/p/4579121.html\">Chrome - 进阶</a></li>\n<li><a href=\"http://www.cnblogs.com/constantince/p/4585983.html\">Chrome - 性能</a></li>\n<li><a href=\"http://www.cnblogs.com/constantince/p/4607497.html\">Chrome - 性能进阶</a></li>\n<li><a href=\"http://www.cnblogs.com/constantince/p/4624241.html\">Chrome - 移动</a></li>\n<li><a href=\"http://www.cnblogs.com/liyunhua/p/4544738.html\">Chrome - 使用技巧</a></li>\n<li><a href=\"http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html\">Chrome - Console控制台不完全指南</a></li>\n<li><a href=\"http://c7sky.com/chrome-devtools-workspace.html\">Chrome - Workspace使浏览器变成IDE</a></li>\n<li><a href=\"http://www.html-js.com/article/Nothing-blind%202975\">network面板</a></li>\n<li><a href=\"http://anti-code.com/devtools-cheatsheet/\">chrome开发工具快捷键</a></li>\n<li><a href=\"http://www.html-js.com/article/2327\">chrome调试工具常用功能整理</a></li>\n<li><a href=\"http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace/\">Chrome 开发工具 Workspace 使用</a></li>\n<li><a href=\"http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html\">Chrome神器Vimium快捷键学习记录 </a></li>\n<li><a href=\"http://www.w3cplus.com/sassguide/debug.html\">sass调试-w3cplus</a></li>\n<li><a href=\"http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html\">如何更专业的使用Chrome开发者工具-w3cplus</a></li>\n<li><a href=\"http://sentsin.com/web/253.html\">chrome调试canvas</a></li>\n<li><a href=\"https://developer.chrome.com/devtools/index\">chrome profiles1</a></li>\n<li><a href=\"http://h5dev.uc.cn/article-25-1.html\">chrome profiles2</a></li>\n<li><a href=\"http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles\">chrome profiles3</a></li>\n<li><a href=\"https://developer.chrome.com/devtools/docs/mobile-emulation\">chrome移动版调试</a></li>\n<li><a href=\"http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool/\">chrome调试</a></li>\n<li><a href=\"http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html\">chrome的调试</a></li>\n<li><a href=\"https://developer.chrome.com/devtools/docs/commandline-api\">chrome console 命令详解</a></li>\n<li><a href=\"http://www.cnblogs.com/leonkao/p/3809655.html\">查看事件绑定1</a></li>\n<li><a href=\"http://www.cnblogs.com/xiaoyao2011/p/3447421.html\">查看事件绑定2</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000000683599\">神器——Chrome开发者工具(一)</a></li>\n<li><a href=\"https://xinranliu.me/2015-05-22-qiqu-performance/\">奇趣百科性能优化(Chrome DevTools 中的 Timeline Profils 等工具使用介绍)</a></li>\n<li><a href=\"http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html\">chrome 开发者工具的 15 个小技巧</a></li>\n<li><a href=\"http://1ke.co/course/361\">Chrome开发者工具不完全指南</a></li>\n<li><a href=\"http://segmentfault.com/a/1190000003882567\">Chrome 开发者工具使用技巧</a></li>\n</ul>\n</li>\n<li>\n<p>Firebug</p>\n<ul>\n<li><a href=\"http://www.imooc.com/learn/137\">firebug视频教程</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE\">firefox 模拟器</a></li>\n<li><a href=\"http://www.cnblogs.com/ctriphire/p/4116207.html\">console.log 命令详解</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html\">Firebug入门指南</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html\">Firebug控制台详解</a></li>\n<li><a href></a></li>\n</ul>\n</li>\n<li>\n<p>移动,微信调试</p>\n<ul>\n<li><a href=\"https://openstf.github.io/\">浏览器端调试安卓</a></li>\n<li><a href=\"http://yujiangshui.com/multidevice-frontend-debug/\">移动端前端开发调试</a></li>\n<li><a href=\"https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md\">使用 Chrome 远程调试 Android 设备</a></li>\n<li><a href=\"http://plus.uc.cn/document/webapp/doc5.html\">mac移动端调试</a></li>\n<li><a href=\"http://www.mihtool.com/\">mac移动端调试</a></li>\n<li><a href=\"http://thx.github.io/mobile/debugging-in-mobile/\">无线调试攻略</a></li>\n<li><a href=\"http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile/\">无线调试攻略</a></li>\n<li><a href=\"http://www.jianshu.com/p/ccf124f1f74b\">屌爆了,完美调试 微信webview(x5)</a></li>\n<li><a href=\"http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/\">微信调试的那些事</a></li>\n<li><a href=\"http://jsconsole.com/\">远程console</a></li>\n<li><a href=\"http://blog.qqbrowser.cc/\">微信调试工具</a></li>\n<li><a href=\"https://github.com/jieyou/remote_inspect_web_on_real_device\">各种真机远程调试方法汇总</a></li>\n</ul>\n</li>\n<li>\n<p>iOS Simulator</p>\n<ul>\n<li><a href=\"https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html\">Simulator</a></li>\n<li><a href=\"http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary/\">Xcode中的iOS模拟器(iOS Simulator)的介绍和使用心得</a></li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>img</p>\n<ul>\n<li><a href=\"http://preloaders.net/en/circular\">loading img</a></li>\n<li><a href=\"http://zhitu.isux.us/\">智图-图片优化平台</a></li>\n<li><a href=\"https://tinypng.com/\">在线png优化</a></li>\n</ul>\n</li>\n<li>\n<p>生成二维码</p>\n<ul>\n<li><a href=\"http://cli.im/\">生成二维码</a></li>\n</ul>\n</li>\n<li>\n<p>浏览器同步</p>\n<ul>\n<li><a href=\"https://github.com/leeluolee/puer\">puer</a></li>\n<li><a href=\"http://livereload.com/\">liveReload</a></li>\n<li><a href=\"http://getf5.com/\">f5</a></li>\n<li><a href=\"http://geek100.com/2608/\">File Watchers</a></li>\n</ul>\n</li>\n<li>\n<p>在线PPT制作</p>\n<ul>\n<li><a href=\"http://js8.in/2013/11/16/%E6%8E%A8%E8%8D%90nodeppt%EF%BC%9A%E4%BD%BF%E7%94%A8markdown%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%86%99%E7%BD%91%E9%A1%B5ppt/\">nodePPT</a></li>\n<li><a href=\"https://github.com/ksky521/nodePPT\">PPT</a></li>\n<li><a href=\"https://github.com/hakimel/reveal.js/\">reveal</a></li>\n<li><a href=\"https://github.com/Seldaek/slippy\">slippy</a></li>\n</ul>\n</li>\n</ol>\n<h3>十七. 前端导航网站</h3>\n<ul>\n<li><a href=\"http://uxbees.com/index.html\">界面清爽的前端导航</a></li>\n<li><a href=\"http://whycss.com/\">前端导航</a></li>\n<li><a href=\"http://www.daqianduan.com/nav\">前端网址导航</a></li>\n<li><a href=\"http://sentsin.com/daohang/\">前端名录</a></li>\n<li><a href=\"http://123.jser.us/\">前端导航</a></li>\n<li><a href=\"http://www.css88.com/nav/\">前端开发资源</a></li>\n<li><a href=\"http://www.haourl.cn/\">网址导航</a></li>\n<li><a href=\"http://code.ciaoca.com/\">前端开发仓库 - 众多效果的收集地</a></li>\n<li><a href=\"https://github.com/jnoodle/f2e-collect\">前端资源导航</a></li>\n<li><a href=\"http://f2e.im/static/pages/nav/index.html\">F2E 前端导航</a></li>\n</ul>\n<h3>十八. 常用CDN</h3>\n<ul>\n<li><a href=\"http://lib.sinaapp.com/\">新浪CDN</a></li>\n<li><a href=\"http://cdn.code.baidu.com/\">百度静态资源公共库</a></li>\n<li><a href=\"http://libs.useso.com/\">360网站卫士常用前端公共库CDN服务</a></li>\n<li><a href=\"http://www.bootcdn.cn/\">Bootstrap中文网开源项目免费 CDN 服务</a></li>\n<li><a href=\"http://staticfile.org/\">开放静态文件 CDN - 七牛</a></li>\n<li><a href=\"http://www.jq22.com/cdn/\">CDN加速 - jq22</a></li>\n<li><a href=\"http://code.jquery.com/\">jQuery CDN</a></li>\n<li><a href=\"http://www.google-jquery-cdn.com/\">Google jQuery CDN</a></li>\n<li><a href=\"http://www.asp.net/ajax/cdn\">微软CDN</a></li>\n</ul>\n<h3>十九. Git,SVN,Github</h3>\n<ol>\n<li>\n<p>Git</p>\n<ul>\n<li><a href=\"http://git-scm.com/\">git-scm</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰-Git教程</a></li>\n<li><a href=\"https://git-for-windows.github.io/\">git-for-windows</a></li>\n<li><a href=\"http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github/\">GitHub 添加 SSH keys</a></li>\n<li><a href=\"http://www.worldhello.net/gotgithub/index.html\">gogithub</a></li>\n<li><a href=\"http://pcottle.github.io/learnGitBranching/\">git常规命令练习</a></li>\n<li><a href=\"https://github.com/xirong/my-git\">git的资料整理</a></li>\n<li><a href=\"http://www.cnblogs.com/fanfan259/p/4810517.html\">我所记录的git命令（非常实用）</a></li>\n<li><a href=\"https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md\">企业开发git工作流模式探索部分休整</a></li>\n<li><a href=\"https://github.com/phodal/github-roam\">GitHub 漫游指南</a></li>\n<li><a href=\"https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md\">GitHub秘籍</a></li>\n<li><a href=\"http://livoras.com/post/28\">使用git和github进行协同开发流程</a></li>\n<li><a href=\"http://onlywei.github.io/explain-git-with-d3/\">动画方式练习git</a></li>\n</ul>\n</li>\n</ol>\n<p>联系我，更多交流</p>\n<p><img src=\"//static.cnodejs.org/FrCbjyzuNmHF1u3j8t26t-cGWPnB\" alt=\"xiaoweiquan.jpeg\"></p>\n</div>","title":"前端资源教程","last_reply_at":"2019-01-25T07:49:24.479Z","good":true,"top":false,"reply_count":171,"visit_count":178264,"create_at":"2016-03-21T00:22:53.158Z","author":{"loginname":"i5ting","avatar_url":"https://avatars3.githubusercontent.com/u/3118295?v=4&s=120"}},{"id":"5c49e710f9075c1ef7137dad","author_id":"5c1b04c03898674067a76417","tab":"ask","content":"<div class=\"markdown-text\"><p>不是 token 或者 sessionid 选一种技术使用即可，为何要两个都用，不解？</p>\n<p>源码：<a href=\"https://github.com/cnodejs/egg-cnode\">https://github.com/cnodejs/egg-cnode</a></p>\n<p>使用 sessionid 证据：</p>\n<p><img src=\"//static.cnodejs.org/FnHOKOjkFGVQDRS-yzJ1C-620rUU\" alt=\"image.png\"></p>\n<p>使用 token 证据：\n<img src=\"//static.cnodejs.org/FqBa8HgCGNpinxOd8C11DI16cxPR\" alt=\"image.png\"></p>\n</div>","title":"cnode 源码中，即用了 token 又用了 sessionid 技术，为何这么弄？","last_reply_at":"2019-01-25T07:15:21.941Z","good":false,"top":false,"reply_count":3,"visit_count":500,"create_at":"2019-01-24T16:25:52.535Z","author":{"loginname":"didiaohu","avatar_url":"https://avatars0.githubusercontent.com/u/19411940?v=4&s=120"}},{"id":"5c35d8563898674067a7d477","author_id":"5b376dfcac8bc1e124114500","tab":"ask","content":"<div class=\"markdown-text\"><p>回顾了一下过去的一年发现 Typescript 在诸多的鄙视中逐渐成长。\n比如 Deno 项目的出现，和 vue 3.0 将拥抱 ts。\n在事业里也发现很多公司的新项目用 typescript 的几率越来越大。</p>\n<p>（不得不承认我以前也是鄙视 TS 的一员，在使用了一段时间的 TS 后感觉还是挺不错的找到了当年写 Java 的感觉，但比起 TS 更支持原生的 JS）</p>\n<h2>在你的项目中有没有用过 TS？ 感觉 TS 是大势所趋还是昙花一现？ 对 TS 未来有什么看法？</h2>\n</div>","title":"Typescript 会一统江湖？","last_reply_at":"2019-01-25T06:56:51.922Z","good":false,"top":false,"reply_count":24,"visit_count":2277,"create_at":"2019-01-09T11:17:42.743Z","author":{"loginname":"tmirun","avatar_url":"https://avatars1.githubusercontent.com/u/8052536?v=4&s=120"}},{"id":"5c4937c73b948a2b4ab710f0","author_id":"5b1d495729e6e510415b29b0","tab":"ask","content":"<div class=\"markdown-text\"><p>老代码用的是es5的规范，然后有些模块也已经很老了（express用的3.x）。能否在模块不变的情况下，将node版本升级到最新的持久版，然后将老代码的回调改成async/await ？</p>\n</div>","title":"公司项目升级，大佬们有什么建议吗？","last_reply_at":"2019-01-25T04:05:22.827Z","good":false,"top":false,"reply_count":2,"visit_count":653,"create_at":"2019-01-24T03:57:59.963Z","author":{"loginname":"helloHT","avatar_url":"https://avatars3.githubusercontent.com/u/31006740?v=4&s=120"}},{"id":"5bc000d015e4fd1923f48e3f","author_id":"5b2a0c5029e6e510415b2c0f","tab":"share","content":"<div class=\"markdown-text\"><p>Node.js初中高级全栈高清视频教程、全栈工程师项目实战开发基础视频教程，带你从入门到精通！</p>\n<p>01【基础】Node：nodejs快速进阶（版本4.1.0）\n<img src=\"//static.cnodejs.org/FmZ2l1AiKERlqpJJxo_GnjRtmpvK\" alt=\"2.jpg\"></p>\n<p>02【实战】node.js从入门到实战教育项目(版本v6.9.1)\n<img src=\"//static.cnodejs.org/FhH4Dh-K7d4a31xfLSm_jWS1iD4r\" alt=\"3.jpg\"></p>\n<p>03【实战】Nodejs+ES6+Webpack+Vuejs构建大型商城（版本6.10.3）\n<img src=\"//static.cnodejs.org/FvoBxx8AMU3KobeIgENDY2vi9OPj\" alt=\"4.jpg\">\n下载地址：<a href=\"http://www.sucaihuo.com/video/387.html\">http://www.sucaihuo.com/video/387.html</a></p>\n</div>","title":"Node.js初中高级全栈高清视频教程","last_reply_at":"2019-01-25T03:29:49.476Z","good":false,"top":false,"reply_count":12,"visit_count":2778,"create_at":"2018-10-12T02:02:56.504Z","author":{"loginname":"whoknowme","avatar_url":"https://avatars0.githubusercontent.com/u/40422811?v=4&s=120"}},{"id":"5c208b6776c4964062a1d147","author_id":"59a6b400d97b7e23082428d0","tab":"ask","content":"<div class=\"markdown-text\"><p>我用 window.onbeforeunload 事件，当进入首页直接点击关闭按钮，不会提示是否离开，只有使用了路由跳转之后才可以。\n有没有大神做过类似的功能，就是在浏览器关闭的时候提示：是否离开</p>\n</div>","title":"react 中怎么监听浏览器关闭事件","last_reply_at":"2019-01-25T03:27:45.896Z","good":false,"top":false,"reply_count":10,"visit_count":886,"create_at":"2018-12-24T07:31:51.327Z","author":{"loginname":"Sunny-zz","avatar_url":"https://avatars1.githubusercontent.com/u/31389080?v=4&s=120"}},{"id":"5b2ce85857137f22415c4e16","author_id":"55d120f3b25bd72150842d85","tab":"share","content":"<div class=\"markdown-text\"><p>–读《<a href=\"https://juejin.im/post/5b01336af265da0b8a67e5c9\">谁说前端不需要懂-Nginx反向代理与负载均衡</a>》有感</p>\n<p>读了上文发现内容虽然还是挺好的，但看完，为啥要懂nginx呀，负载均衡和前端哪里有什么半毛钱关系了，没说清楚呀。</p>\n<p>当然这个面向前端做个科普文让大家多知道一项只是还是不错的，文章拉到最后面看了下作者的使用场景举例说起个 host 给让产品走查。\n这不就是起个webserver 容器么，和反向代理么？</p>\n<p>这篇内容很热，结合最近聊天群里总是有人问起，我想前端还有很多人想知道这方面知识的，所以在这里也科普下，常用的代理方式有哪些。</p>\n<h2>招式一、 使用 http-server 模块进行代理</h2>\n<p>熟悉 nodejs 的朋友应该知道有个非常好和强大的工具模块 <a href=\"https://github.com/indexzero/http-server\">http-server</a>\n这是一枚小火箭能帮助你直冲云霄，使用方式如下：</p>\n<p>首先需要安装 nodejs （对于nodejs 合格的前端应该都安装上了吧？这里就不复述了）。</p>\n<p>安装全局模块</p>\n<pre class=\"prettyprint\"><code> npm install http-server -g\n</code></pre><p>然后到你需要运行展示的 html 资源目录执行</p>\n<pre class=\"prettyprint\"><code>http-server -P http:&#x2F;&#x2F;www.your-backend.com&#x2F;api\n</code></pre><p><strong><a href=\"http://www.your-backend.com/api\">http://www.your-backend.com/api</a></strong> 是你后端反向代理的接口地址，你需要修改成你自己的。</p>\n<p>然后你就可以使用  <a href=\"http://localhost:8080\">http://localhost:8080</a> 进行访问了（如果 8080 端口不被占用掉的话，若占用了你可以 -p 指定其他端口 ），是不是超级 easy?\n更多参数可以查询官方文档 <a href=\"https://github.com/indexzero/http-server\">http-server</a>。</p>\n<h2>招式二、使用 webpack 配置代理</h2>\n<p>webpack 对于前端来说是个强大的工具, 除了能够帮助你打包和启动调试服务器外, 代理的功能也值得你了解下。\n惯例上官网资料<a href=\"https://webpack.js.org/configuration/dev-server/#devserver-proxy\">文档地址</a></p>\n<p>最简方式:</p>\n<pre class=\"prettyprint\"><code>module.exports = {\n  &#x2F;&#x2F;...\n  devServer: {\n    proxy: {\n      &#x27;&#x2F;api&#x27;: &#x27;http:&#x2F;&#x2F;localhost:3000&#x27;\n    }\n  }\n};\n</code></pre><p>上述配置将自动把 /api 这一地址的访问转请求到 <a href=\"http://localhost:3000\">http://localhost:3000</a> 从而起到了代理的作用。</p>\n<p>如果你的规则需要去掉 api 前缀，你可以使用重写地址的方式。</p>\n<pre class=\"prettyprint\"><code>module.exports = {\n  &#x2F;&#x2F;...\n  devServer: {\n    proxy: {\n      &#x27;&#x2F;api&#x27;: {\n        target: &#x27;http:&#x2F;&#x2F;localhost:3000&#x27;,\n        pathRewrite: {&#x27;^&#x2F;api&#x27; : &#x27;&#x27;}\n      }\n    }\n  }\n};\n</code></pre><p>你可能还遇到 https 的安全问题触发未验证的证书错误, 则你可以简单的加上 secure: false 来处理</p>\n<pre class=\"prettyprint\"><code>module.exports = {\n  &#x2F;&#x2F;...\n  devServer: {\n    proxy: {\n      &#x27;&#x2F;api&#x27;: {\n        target: &#x27;https:&#x2F;&#x2F;other-server.example.com&#x27;,\n        secure: false\n      }\n    }\n  }\n};\n</code></pre><p>有时你不想代理所有的请求。可以基于一个函数的返回值绕过代理。\n在函数中你可以访问请求体、响应体和代理选项。必须返回 false 或路径，来跳过代理请求。\n例如：对于浏览器请求，你想要提供一个 HTML 页面，但是对于 API 请求则保持代理。你可以这样做：</p>\n<pre class=\"prettyprint\"><code>proxy: {\n  &quot;&#x2F;api&quot;: {\n    target: &quot;http:&#x2F;&#x2F;localhost:3000&quot;,\n    bypass: function(req, res, proxyOptions) {\n      if (req.headers.accept.indexOf(&quot;html&quot;) !== -1) {\n        console.log(&quot;Skipping proxy for browser request.&quot;);\n        return &quot;&#x2F;index.html&quot;;\n      }\n    }\n  }\n}\n</code></pre><p>多个路径的代理</p>\n<pre class=\"prettyprint\"><code>proxy: [{\n  context: [&quot;&#x2F;auth&quot;, &quot;&#x2F;api&quot;],\n  target: &quot;http:&#x2F;&#x2F;localhost:3000&quot;,\n}]\n</code></pre><p>总之 webpack 提供了多种灵活的方式, 相信大多时候都能满足到你到要求。</p>\n<h2>招式三、使用 nodejs 的 node-http-proxy 模块来处理</h2>\n<p><a href=\"https://github.com/nodejitsu/node-http-proxy\">node-http-proxy</a> 提供了一个可以<strong>编程模式</strong>的代理环境，如果你有很特殊的需求如session、cookie 已绑定的域处理成其他的域什么，或是内容还要转换处理等，你可以用这个方式来处理复杂的 hacker.</p>\n<p>如增加特殊请求头；</p>\n<pre class=\"prettyprint\"><code>var http = require(&#x27;http&#x27;),\n    httpProxy = require(&#x27;http-proxy&#x27;);\n \nvar proxy = httpProxy.createProxyServer({});\n\n \nproxy.on(&#x27;proxyReq&#x27;, function(proxyReq, req, res, options) {\n  proxyReq.setHeader(&#x27;X-Special-Proxy-Header&#x27;, &#x27;foobar&#x27;);\n});\n\nvar server = http.createServer(function(req, res) {\n  &#x2F;&#x2F; You can define here your custom logic to handle the request\n  &#x2F;&#x2F; and then proxy the request.\n  proxy.web(req, res, {\n    target: &#x27;http:&#x2F;&#x2F;127.0.0.1:5060&#x27;\n  });\n});\n\nconsole.log(&quot;listening on port 5050&quot;)\nserver.listen(5050);\n</code></pre><p><a href=\"https://github.com/nodejitsu/node-http-proxy\">更多介绍看官网文档</a></p>\n<h2>招式四、使用框架自带代理方式如 angular 的 proxy.</h2>\n<p>angular 的 proxy 写法形式和 webpack 基本一样, 你需要一份如下的配置文件 proxy.conf.json\n我的开源项目 <a href=\"https://github.com/vellengs/typerx/blob/master/packages/client/proxy.conf.json\">typerx</a>采用的就是这种方式</p>\n<pre class=\"prettyprint\"><code>{\n    &quot;&#x2F;api&quot;: {\n        &quot;target&quot;: &quot;http:&#x2F;&#x2F;localhost:5400&#x2F;&quot;,\n        &quot;secure&quot;: false\n    },\n    &quot;&#x2F;user&quot;: {\n        &quot;target&quot;: &quot;http:&#x2F;&#x2F;localhost:5400&#x2F;&quot;,\n        &quot;secure&quot;: false\n    },\n    &quot;&#x2F;uploads&quot;: {\n        &quot;target&quot;: &quot;http:&#x2F;&#x2F;localhost:5400&#x2F;&quot;,\n        &quot;secure&quot;: false\n    }\n}\n</code></pre><p>配置完成之后使用 proxy-config 参数指定 proxy.conf.json 即可调用代理配置</p>\n<pre class=\"prettyprint\"><code> ng serve --proxy-config proxy.conf.json\n</code></pre><p><a href=\"https://github.com/angular/angular-cli/blob/master/docs/documentation/stories/proxy.md\">其他更多方式</a> , 如果你看完更多方式是不是觉得和 webpack 是一样的呢，实际上他就是 webpack 哈？</p>\n<h2>招式五、实际上这个不是代理，但是也能解决你的跨域问题。</h2>\n<pre class=\"prettyprint\"><code>open -n &#x2F;Applications&#x2F;Google\\ Chrome.app&#x2F; --args --disable-web-security --user-data-dir=&#x2F;Users&#x2F;your&#x2F;path&#x2F;\n</code></pre><h2>还有个方式当然就是 nginx 啦</h2>\n<p>你可以继续了解他 <a href=\"https://juejin.im/post/5b01336af265da0b8a67e5c9\">谁说前端不需要懂-Nginx反向代理与负载均衡</a></p>\n</div>","title":"谁说前端需要懂 - Nginx 了","last_reply_at":"2019-01-25T03:22:37.298Z","good":false,"top":false,"reply_count":18,"visit_count":3784,"create_at":"2018-06-22T12:15:20.149Z","author":{"loginname":"vellengs","avatar_url":"https://avatars1.githubusercontent.com/u/5743338?v=4&s=120"}},{"id":"5c22034c3898674067a783fc","author_id":"5b52cbf1fb9e84ec69cc1ca2","tab":"share","content":"<div class=\"markdown-text\"><p>Vscode编辑器用中Angular7提示工具下载量马上达到750万，这意味这说什么？</p>\n<p>说实话Angular7.x相比React vue有更快的编译速度、更快的运行速度。难道王者归来。</p>\n<p><strong>Angular7入门视频教程网盘免费下</strong>：   <a href=\"https://pan.baidu.com/s/1dTItz3tEnP0GxPcExfH68g\">https://pan.baidu.com/s/1dTItz3tEnP0GxPcExfH68g</a></p>\n<p><img src=\"//static.cnodejs.org/Fp_oe68CGoTo4J8Vbpcqc_dVAFhQ\" alt=\"1.png\"></p>\n</div>","title":"Vscode编辑器中Angular7提示工具下载量达到750万 -这意味着什么？ 王者归来来吗？","last_reply_at":"2019-01-25T03:15:25.121Z","good":false,"top":false,"reply_count":22,"visit_count":1788,"create_at":"2018-12-25T10:15:40.046Z","author":{"loginname":"nodeper","avatar_url":"https://avatars2.githubusercontent.com/u/41500847?v=4&s=120"}},{"id":"5c4550ed6955112b9943730d","author_id":"550973933135610a365b01fa","tab":"share","content":"<div class=\"markdown-text\"><h1>Ant Design Pro Powered by <a href=\"https://github.com/fantasticsoul/react-control-center\">react-control-center</a></h1>\n<h3>cc版本的ant-design-pro来了,<a href=\"https://github.com/fantasticsoul/rcc-antd-pro\">ant-design-pro powered by C_C</a></h3>\n<hr>\n<h4>我们先看看redux是如何工作起来的，在来细比较<code>cc</code>和<code>redux</code>的最大的不同之处</h4>\n<h5>\b<code>redux</code>如何工作？订阅<code>redux</code>单一状态树里的部分数据源，让组件被<code>redux</code>接管,从而实现当订阅的数据源发生变化时才触发渲染的目的</h5>\n<ul>\n<li>我们知道，在<code>redux</code>世界里，可以通过一个配置了<code>mapStateToProps</code>的<code>connect</code>高阶函数去包裹一个组件，能够得到一个高阶组件，该高阶组件的<code>shouldComponentUpdate</code>会被redux接管，通过浅比较this.props!==nextProps来高效的决定被包裹的组件是否要触发新一轮的渲染，之所以能够这么直接进行浅比较，是因为在<code>redux</code>世界的<code>reducer</code>里,规定了如果用户改变了一个状态某一部分值，一定要返回一个新的完整的状态，如下所示，是一个传统的经典的<code>connect</code>和<code>reducer</code>写法示例。</li>\n</ul>\n<pre class=\"prettyprint\"><code>&#x2F;** code in component&#x2F;Foo.js, connect现有组件，配置需要观察的&#96;store&#96;树中的部分state，绑定&#96;action&#96; *&#x2F;\nclass Foo extends Component{\n  &#x2F;&#x2F;...\n  render(){\n    return (\n      &lt;div&gt;\n        &lt;span&gt;{this.props.fooNode.foo}&lt;&#x2F;span&gt;\n        &lt;button onClick={this.props.actions.incFoo}&gt;incFoo&lt;&#x2F;button&gt;\n      &lt;&#x2F;div&gt;\n    );\n  }\n}\nexport default connect(\n  state =&gt; ({\n    list: state.list,\n    fooNode: state.fooNode,\n  }),\n  dispatch =&gt; ({\n    actions: bindActionCreators(fooActionCreator, dispatch)\n  })\n)(Foo)\n\n&#x2F;** code in action&#x2F;foo.js, 配置action纯函数 *&#x2F;\nexport const incFoo = () =&gt;{\n  return {type:&#x27;INC_FOO&#x27;};\n}\n\n&#x2F;** code in reducer&#x2F;foo.js, 定义reducer函数 *&#x2F;\nfunction getInitialState() {\n  return {\n    foo: 1,\n    bar: 2,\n  };\n}\n\nexport default function (state = getInitialState(), action) {\n  switch (action.type) {\n    case &#x27;INC_FOO&#x27;: {\n      state.foo = state.foo + 1;\n      return {...state};\n    }\n    default:{\n      return state;\n    }\n      \n  }\n}\n</code></pre><ul>\n<li>在<code>ant-design-pro</code>的<code>dva</code>世界里，<code>dva</code>将<code>redux</code>做了一层浅封装，省去了繁琐的\b定义<code>action</code>函数，<code>connect</code>时要绑定<code>action</code>函数等过程,给了一个命名空间的概览，一个命名空间下可以定义<code>state</code>、<code>effects</code>、<code>reducers</code>这些概念，组件内部<code>dispatch</code>的<code>action</code>对象的<code>type</code>的格式形如<code>${namespaceName}/${methodName}</code>,这样<code>dva</code>就可以通过解析用户调用<code>dispatch</code>函数时派发的<code>action</code>对象里的<code>type</code>值而直接操作<code>effects</code>里的函数，在<code>effects</code>里的某个函数块内处理完相应逻辑后，用户可以调用<code>dva</code>提供给用户的<code>put</code>函数去触发<code>reducers</code>里的对应函数去合成新的state，尽管流程上简化了不少，但是归根到底还是不能脱离<code>redux</code>的核心理念，需要合成一个新的<code>state</code>! 以下示例是ant-design-pro里一个经典的变种<code>redux</code>流程写法.</li>\n</ul>\n<pre class=\"prettyprint\"><code>&#x2F;** code in component&#x2F;Foo.js, connect现有组件，配置需要观察的&#96;store&#96;树中的部分state *&#x2F;\nimport { connect } from &#x27;dva&#x27;;\n\nclass Foo extends Component{\n  &#x2F;&#x2F;...\n  render(){\n    return (\n      &lt;div&gt;\n        &lt;span&gt;{this.props.fooNode.foo}&lt;&#x2F;span&gt;\n        &lt;button onClick={()=&gt;this.props.dispatch({type:&#x27;fooNode&#x2F;incFoo&#x27;, payload:2})}&gt;incFoo&lt;&#x2F;button&gt;\n      &lt;&#x2F;div&gt;\n    );\n  }\n}\nexport default connect(\n  state =&gt; ({\n    list: state.list,\n    fooNode: state.fooNode,\n  })\n)(Foo)\n\n&#x2F;** code in models&#x2F;foo.js *&#x2F;\nimport logService from &#x27;@&#x2F;services&#x2F;log&#x27;;\n\nexport default {\n  namespace: &#x27;fooNode&#x27;,\n\n  state: {\n    foo: 1,\n    bar: 1,\n  },\n\n  effects: {\n    *query({ payload:incNumber }, { call, put }) {\n      yield call(logService, incNumber);\n      yield put({\n        type: &#x27;saveFoo&#x27;,\n        payload: incNumber,\n      });\n    },\n  },\n\n  reducers: {\n    saveFoo(state, action) {\n      return { ...state, foo:action.payload };\n    },\n  },\n};\n\n</code></pre><h5>\b<code>cc</code>如何工作？订阅<code>react-control-center</code>的部分数据源，当这些部分数据源任意一个部分发生变化时，<code>cc</code>主动通知该组件触发渲染</h5>\n<ul>\n<li><code>cc</code>和<code>redux</code>最大的不同就是，<code>cc</code>接管了所有<code>cc组件</code>的具体\b引用，当用户的<code>react组件</code>注册成为<code>cc组件时</code>，<code>cc</code>的<code>register</code>函数需要用户配置<code>ccClassKey</code>、<code>module</code>、<code>sharedStateKeys</code>、<code>globalStateKeys</code>、<code>stateToPropMapping</code>等参数来告诉<code>cc</code>怎么对这些具体的引用进行分类，然后\b<code>cc</code>就能够高效并精确的通知哪些\b<code>cc组件实例</code>能够发生新一轮的渲染。</li>\n<li>实际上当你在<code>cc组件实例</code>\u001c里调用<code>this.setState</code>时,效果和原有的<code>this.setState</code>毫无差别，但是其实<code>cc组件实例</code>\u001c的<code>this.setState</code>已近不再是原来的了，这个函数已经被<code>cc</code>接管并做了相当多的工作，原来的已经被<code>cc</code>保存为<code>reactSetState</code>,当你调用<code>cc组件实例</code>\u001c的<code>this.setState</code>，发生的事情大概经过了以下几步\n<img src=\"https://user-gold-cdn.xitu.io/2019/1/21/1686e03f133218ad?w=845&amp;h=784&amp;f=png&amp;s=76088\" alt></li>\n<li>因为此文主要是介绍和证明\b<a href=\"https://github.com/fantasticsoul/react-control-center\">cc</a> 的弱入侵性和灵活性，而<code>ant-design-pro</code>里的组件的<code>state</code>并不需要被<code>接管</code>，所以我们下面的示例写法仅仅使用<code>cc.connect</code>函数将组件的状态和<code>cc.store</code>打通，这些状态并非从<code>state</code>里取，而是从<code>this.$$propState</code>里获取，下面的示例注释掉的部分是原<code>dva</code>写法,新增的是<code>cc</code>的写法.</li>\n<li>(备注：此处仅仅展示关键代码详细代码<a href=\"https://github.com/fantasticsoul/rcc-antd-pro/blob/master/src/routes/Dashboard/Analysis.js\">见</a> )</li>\n</ul>\n<pre class=\"prettyprint\"><code>&#x2F;** code in src&#x2F;routes&#x2F;Dashboard&#x2F;Analysis.js, *&#x2F;\nimport React, { Component } from &#x27;react&#x27;;\n&#x2F;&#x2F; import { connect } from &#x27;dva&#x27;;\nimport cc from &#x27;react-control-center&#x27;;\n\n&#x2F;&#x2F; @connect(({ chart, loading }) =&gt; ({\n&#x2F;&#x2F;   chart,\n&#x2F;&#x2F;   loading: loading.effects[&#x27;chart&#x2F;fetch&#x27;],\n&#x2F;&#x2F; }))\n@cc.connect(&#x27;Analysis&#x27;, {\n  &#x27;chart&#x2F;*&#x27;: &#x27;&#x27;,\n  &#x27;form&#x2F;*&#x27;: &#x27;&#x27;, &#x2F;&#x2F; this is redundant here, just for show isPropStateModuleMode&#x27;s effect\n}, { isPropStateModuleMode: true })\nexport default class Analysis extends Component {\n  state = {\n    loading: true,\n    salesType: &#x27;all&#x27;,\n    currentTabKey: &#x27;&#x27;,\n    rangePickerValue: [],\n  }\n\n  componentDidMount() {\n    this.$$dispatch({\n      module: &#x27;chart&#x27;, type: &#x27;fetch&#x27;\n    }).then(() =&gt; this.setState({ loading: false }));\n    &#x2F;&#x2F; this.props.dispatch({\n    &#x2F;&#x2F;   type: &#x27;chart&#x2F;fetch&#x27;,\n    &#x2F;&#x2F; }).then(() =&gt; this.setState({ loading: false }));\n  }\n\n  componentWillUnmount() {\n    &#x2F;&#x2F; const { dispatch } = this.props;\n    &#x2F;&#x2F; dispatch({\n    &#x2F;&#x2F;   type: &#x27;chart&#x2F;clear&#x27;,\n    &#x2F;&#x2F; });\n    &#x2F;&#x2F; this.$$dispatch({ module: &#x27;chart&#x27;, type: &#x27;clear&#x27; });\n  }\n\n  handleRangePickerChange = (rangePickerValue) =&gt; {\n    this.setState({\n      rangePickerValue,\n    });\n\n    &#x2F;&#x2F; this.props.dispatch({ type: &#x27;chart&#x2F;fetchSalesData&#x27;});\n    this.$$dispatch({ module: &#x27;chart&#x27;, type: &#x27;fetchSalesData&#x27; });\n  }\n\n  selectDate = (type) =&gt; {\n    this.setState({\n      rangePickerValue: getTimeDistance(type),\n    });\n\n    &#x2F;&#x2F; this.props.dispatch({ type: &#x27;chart&#x2F;fetchSalesData&#x27; });\n    this.$$dispatch({ module: &#x27;chart&#x27;, type: &#x27;fetchSalesData&#x27; });\n  }\n\n\n  render() {\n    const { rangePickerValue, salesType, currentTabKey, loading } = this.state;\n    console.log(&#x27;%c@@@ Analysis !!!&#x27;, &#x27;color:green;border:1px solid green;&#x27;);\n    const {\n      visitData,\n      visitData2,\n      salesData,\n      searchData,\n      offlineData,\n      offlineChartData,\n      salesTypeData,\n      salesTypeDataOnline,\n      salesTypeDataOffline,\n    } = this.$$propState.chart;\n    &#x2F;&#x2F; } = this.props.chart;\n    \n  }\n}\n\n</code></pre><ul>\n<li>models的替换</li>\n</ul>\n<pre class=\"prettyprint\"><code>&#x2F;** 原来的model，code in src&#x2F;models&#x2F;chart *&#x2F;\nexport default {\n  namespace: &#x27;chart&#x27;,\n\n  state: {\n    visitData: [],\n    visitData2: [],\n    salesData: [],\n    searchData: [],\n    offlineData: [],\n    offlineChartData: [],\n    salesTypeData: [],\n    salesTypeDataOnline: [],\n    salesTypeDataOffline: [],\n    radarData: [],\n  },\n\n  effects: {\n    *fetch(_, { call, put }) {\n      const response = yield call(fakeChartData);\n      yield put({\n        type: &#x27;save&#x27;,\n        payload: response,\n      });\n    },\n    *fetchSalesData(_, { call, put }) {\n      const response = yield call(fakeChartData);\n      yield put({\n        type: &#x27;save&#x27;,\n        payload: {\n          salesData: response.salesData,\n        },\n      });\n    },\n  },\n\n  reducers: {\n    save(state, { payload }) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n    setter(state, { payload }) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n    clear() {\n      return {\n        visitData: [],\n        visitData2: [],\n        salesData: [],\n        searchData: [],\n        offlineData: [],\n        offlineChartData: [],\n        salesTypeData: [],\n        salesTypeDataOnline: [],\n        salesTypeDataOffline: [],\n        radarData: [],\n      };\n    },\n  },\n};\n\n&#x2F;** cc定义的model，code in src&#x2F;cc-models&#x2F;chart  *&#x2F;\nfunction getInitialState() {\n  return {\n    wow: &#x27;wow&#x27;,\n    visitData: [],\n    visitData2: [],\n    salesData: [],\n    searchData: [],\n    offlineData: [],\n    offlineChartData: [],\n    salesTypeData: [],\n    salesTypeDataOnline: [],\n    salesTypeDataOffline: [],\n    radarData: [],\n  }\n}\n\nexport default {\n  module:&#x27;&#x27;,\n  state:getInitialState(),\n  reducer:{\n    *fetch() {\n      const response = yield fakeChartData();\n      return response;\n    },\n    *fetchSalesData() {\n      const response = yield fakeChartData();\n      const salesData = response.salesData;\n      return { salesData };\n    },\n    clear(){\n      const originalState = getInitialState();\n      return originalState;\n    }\n  }\n}\n</code></pre><h5>由上可\b以发现，cc里的<code>setState</code>需要的<code>state</code>和<code>dispatch</code>对应函数返回的<code>state</code>，都是react鼓励的<code>部分state</code>,你需要改变哪一部分的<code>state</code>，就仅仅把这一部分<code>state</code>交给<code>cc</code>就好了。同时cc也兼容<code>redux</code>生态的思路，一切共享的数据源都从<code>props</code>注入，而非存储在<code>state</code>里。</h5>\n<h5>因为所有的<code>改变state的行为</code>都会经过<code>$$changeState</code>,所以状态的变化依然是可预测的同时也是可以追踪的，后面cc的迭代版本里会利用<code>immutable.js</code>,来让状态树可以回溯，这样<code>cc</code>就可以实现<code>时间旅行</code>的功能了，敬请期待.</h5>\n<hr>\n<h5>注意哦! 现在我仅仅先把两个路由级别的组件交给cc处理, ant pro任然完美工作起立, 这两个路由文件是 <code>routes/Dashboard/Analysis.js</code> 和 <code>routes/Forms/Basic.js</code>.</h5>\n<h5>\b同时我也新增了一个路由组件 <code>routes/Dashboard/CCState.js</code> 来展示cc强大能力, 这个组件还没有彻底写完，将会被持续更新的, 就像 <a href=\"https://github.com/fantasticsoul/rcc-simple-demo\">我为cc专门写的引导示例一样</a>，将会很快会为大家带来更多的精彩演示</h5>\n<hr>\n<h3>希望我亲爱的朋友\b们花一点时间了解<a href=\"https://github.com/fantasticsoul/react-control-center\">react-control-center</a>并探索它更多有趣的玩法</h3>\n</div>","title":"ant-design-pro powered by react-control-center C_C","last_reply_at":"2019-01-25T02:31:49.086Z","good":false,"top":false,"reply_count":6,"visit_count":423,"create_at":"2019-01-21T04:56:13.882Z","author":{"loginname":"fantasticsoul","avatar_url":"https://avatars0.githubusercontent.com/u/7334950?v=4&s=120"}},{"id":"5ae886c51b02288048bd0b75","author_id":"5ae885ad1b02288048bd0b74","tab":"ask","content":"<div class=\"markdown-text\"><p>小白一个 学了点小基础 希望能够提升一下\n希望各位表哥  分享一下开源项目和学习教程</p>\n</div>","title":"求node和微信小程序的教程或者 开源项目","last_reply_at":"2019-01-25T01:39:39.006Z","good":false,"top":false,"reply_count":40,"visit_count":6260,"create_at":"2018-05-01T15:24:53.470Z","author":{"loginname":"longletian","avatar_url":"https://avatars0.githubusercontent.com/u/28197668?v=4&s=120"}}]}